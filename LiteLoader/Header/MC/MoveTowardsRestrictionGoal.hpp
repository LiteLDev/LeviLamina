// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class MoveTowardsRestrictionGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOVETOWARDSRESTRICTIONGOAL
public:
    class MoveTowardsRestrictionGoal& operator=(class MoveTowardsRestrictionGoal const &) = delete;
    MoveTowardsRestrictionGoal(class MoveTowardsRestrictionGoal const &) = delete;
    MoveTowardsRestrictionGoal() = delete;
#endif

public:
    /*0*/ virtual ~MoveTowardsRestrictionGoal();
    /*
    inline bool canContinueToUse(){
        bool (MoveTowardsRestrictionGoal::*rv)();
        *((void**)&rv) = dlsym("?canContinueToUse@MoveTowardsRestrictionGoal@@UEAA_NXZ");
        return (this->*rv)();
    }
    inline void start(){
        void (MoveTowardsRestrictionGoal::*rv)();
        *((void**)&rv) = dlsym("?start@MoveTowardsRestrictionGoal@@UEAAXXZ");
        return (this->*rv)();
    }
    inline  ~MoveTowardsRestrictionGoal(){
         (MoveTowardsRestrictionGoal::*rv)();
        *((void**)&rv) = dlsym("??1MoveTowardsRestrictionGoal@@UEAA@XZ");
        return (this->*rv)();
    }
    */
    MCAPI MoveTowardsRestrictionGoal(class Mob &);

protected:
    MCAPI class Mob const & _getMob() const;
    MCAPI bool _randomizeWantedPositionTowardsRestriction(class Vec3 const &);

private:

};
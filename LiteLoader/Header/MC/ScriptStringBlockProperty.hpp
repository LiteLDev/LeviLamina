// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ScriptStringBlockProperty {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTSTRINGBLOCKPROPERTY
public:
    class ScriptStringBlockProperty& operator=(class ScriptStringBlockProperty const &) = delete;
    ScriptStringBlockProperty(class ScriptStringBlockProperty const &) = delete;
    ScriptStringBlockProperty() = delete;
#endif

public:
    /*0*/ virtual ~ScriptStringBlockProperty();
    /*
    inline  ~ScriptStringBlockProperty(){
         (ScriptStringBlockProperty::*rv)();
        *((void**)&rv) = dlsym("??1ScriptStringBlockProperty@@UEAA@XZ");
        return (this->*rv)();
    }
    */
    MCAPI ScriptStringBlockProperty(class ScriptStringBlockProperty &&);
    MCAPI ScriptStringBlockProperty(std::string, class ItemState const &, std::vector<std::string>, class Scripting::StrongTypedObjectHandle<class ScriptBlockPermutation>);
    MCAPI class Scripting::Result<std::string> getState() const;
    MCAPI class ScriptStringBlockProperty & operator=(class ScriptStringBlockProperty &&);
    MCAPI class Scripting::Result<void> setState(std::string);
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptStringBlockProperty> bind(struct Scripting::Version);

protected:

private:

};
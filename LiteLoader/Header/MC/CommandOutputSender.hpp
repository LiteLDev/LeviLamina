// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class CommandOutputSender {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_COMMANDOUTPUTSENDER
public:
    class CommandOutputSender& operator=(class CommandOutputSender const &) = delete;
    CommandOutputSender(class CommandOutputSender const &) = delete;
#endif

public:
    /*0*/ virtual ~CommandOutputSender();
    /*1*/ virtual void send(class CommandOrigin const &, class CommandOutput const &);
    /*
    inline void registerOutputCallback(class std::function<void (class AutomationCmdOutput &)> const & a0){
        void (CommandOutputSender::*rv)(class std::function<void (class AutomationCmdOutput &)> const &);
        *((void**)&rv) = dlsym("?registerOutputCallback@CommandOutputSender@@UEAAXAEBV?$function@$$A6AXAEAVAutomationCmdOutput@@@Z@std@@@Z");
        return (this->*rv)(std::forward<class std::function<void (class AutomationCmdOutput &)> const &>(a0));
    }
    */
    MCAPI CommandOutputSender();
    MCAPI void sendToAdmins(class CommandOrigin const &, class CommandOutput const &, enum CommandPermissionLevel);
    MCAPI static std::vector<std::string> translate(std::vector<std::string> const &);

protected:
    MCAPI class Json::Value _toJson(class CommandOutput const &) const;

private:

};
// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Core.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class DedicatedServer {

#define AFTER_EXTRA
// Add Member There
public:
enum StartResult;

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_DEDICATEDSERVER
public:
    class DedicatedServer& operator=(class DedicatedServer const &) = delete;
    DedicatedServer(class DedicatedServer const &) = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_DEDICATEDSERVER
    MCVAPI class gsl::not_null<class Bedrock::NonOwnerPointer<class Automation::AutomationClient>> getAutomationClient() const;
    MCVAPI class IGameModuleShared & getGameModule();
    MCVAPI class gsl::not_null<class Bedrock::NonOwnerPointer<class Minecraft>> getPrimaryMinecraft();
    MCVAPI bool isDedicatedServer() const;
    MCVAPI bool isEduMode() const;
    MCVAPI void onNetworkMaxPlayersChanged(unsigned int);
    MCVAPI bool stop();
    MCVAPI ~DedicatedServer();
#endif
    MCAPI DedicatedServer();
    MCAPI enum DedicatedServer::StartResult runDedicatedServerLoop(class Core::FilePathManager &, class PropertiesSettings &, class LevelSettings &, class AllowListFile &, std::unique_ptr<class PermissionsFile> &);
    MCAPI enum DedicatedServer::StartResult start(std::string const &);

protected:

private:
    MCAPI void initalizeAppConfigs();
    MCAPI void initializeHttp();
    MCAPI void initializeLogging();

};
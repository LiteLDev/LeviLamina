// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ScriptObject.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ScriptContainer : public ScriptObject {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTCONTAINER
public:
    class ScriptContainer& operator=(class ScriptContainer const &) = delete;
    ScriptContainer(class ScriptContainer const &) = delete;
    ScriptContainer() = delete;
#endif

public:
    /*0*/ virtual ~ScriptContainer();
    /*4*/ virtual class Scripting::Result<int> getSize() const;
    /*5*/ virtual class Scripting::Result<int> getEmptySlotsCount() const;
    /*6*/ virtual class Scripting::Result<void> setItem(int, class ScriptItemStack const &) const;
    /*7*/ virtual class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptItemStack>> getItem(int) const;
    /*8*/ virtual class Scripting::Result<void> addItem(class ScriptItemStack const &) const;
    /*9*/ virtual class Scripting::Result<bool> transferItem(int, int, class ScriptContainer &) const;
    /*10*/ virtual class Scripting::Result<bool> swapItems(int, int, class ScriptContainer &) const;
    /*11*/ virtual class Container * _tryGetContainer() const = 0;
    /*12*/ virtual void _balanceTransaction(class ItemStack const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SCRIPTCONTAINER
#endif
    MCAPI ScriptContainer(class Scripting::WeakLifetimeScope const &);
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptContainer> bind(struct Scripting::Version);

protected:
    MCAPI static class std::optional<struct Scripting::Error> _isSlotInvalid(class Container &, int);

private:

};
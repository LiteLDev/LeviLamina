// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class SculkShriekerVibrationConfig {

#define AFTER_EXTRA

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCULKSHRIEKERVIBRATIONCONFIG
public:
    class SculkShriekerVibrationConfig& operator=(class SculkShriekerVibrationConfig const &) = delete;
    SculkShriekerVibrationConfig(class SculkShriekerVibrationConfig const &) = delete;
    SculkShriekerVibrationConfig() = delete;
#endif

public:
    /*0*/ virtual void onSignalReceive(class BlockSource &, class BlockPos, class GameEvent const &, class Actor *, float, class Actor *);
    /*1*/ virtual void __unk_vfn_1();
    /*2*/ virtual bool shouldListen(class BlockSource &, class BlockPos, class GameEvent const &, class Actor const *);
    /*3*/ virtual ~SculkShriekerVibrationConfig();
    /*
    inline bool isValidVibration(class GameEvent const & a0, class Actor const * a1){
        bool (SculkShriekerVibrationConfig::*rv)(class GameEvent const &, class Actor const *);
        *((void**)&rv) = dlsym("?isValidVibration@SculkShriekerVibrationConfig@@UEAA_NAEBVGameEvent@@PEBVActor@@@Z");
        return (this->*rv)(std::forward<class GameEvent const &>(a0), std::forward<class Actor const *>(a1));
    }
    */

protected:

private:

};
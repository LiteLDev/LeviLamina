// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "TransactionalWorldBlockTarget.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class EncryptedProxyEnv : public TransactionalWorldBlockTarget {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ENCRYPTEDPROXYENV
public:
    class EncryptedProxyEnv& operator=(class EncryptedProxyEnv const &) = delete;
    EncryptedProxyEnv(class EncryptedProxyEnv const &) = delete;
    EncryptedProxyEnv() = delete;
#endif

public:
    /*0*/ virtual ~EncryptedProxyEnv();
    /*1*/ virtual class leveldb::Status NewSequentialFile(std::string const &, class leveldb::SequentialFile **);
    /*2*/ virtual class leveldb::Status NewRandomAccessFile(std::string const &, class leveldb::RandomAccessFile **);
    /*
    inline class leveldb::Status DeleteFileA(std::string const & a0){
        class leveldb::Status (EncryptedProxyEnv::*rv)(std::string const &);
        *((void**)&rv) = dlsym("?DeleteFileA@EncryptedProxyEnv@@UEAA?AVStatus@leveldb@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z");
        return (this->*rv)(std::forward<std::string const &>(a0));
    }
    inline class leveldb::Status NewWritableFile(std::string const & a0, class leveldb::WritableFile ** a1){
        class leveldb::Status (EncryptedProxyEnv::*rv)(std::string const &, class leveldb::WritableFile **);
        *((void**)&rv) = dlsym("?NewWritableFile@EncryptedProxyEnv@@UEAA?AVStatus@leveldb@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAPEAVWritableFile@3@@Z");
        return (this->*rv)(std::forward<std::string const &>(a0), std::forward<class leveldb::WritableFile **>(a1));
    }
    inline class leveldb::Status RenameFile(std::string const & a0, std::string const & a1){
        class leveldb::Status (EncryptedProxyEnv::*rv)(std::string const &, std::string const &);
        *((void**)&rv) = dlsym("?RenameFile@EncryptedProxyEnv@@UEAA?AVStatus@leveldb@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z");
        return (this->*rv)(std::forward<std::string const &>(a0), std::forward<std::string const &>(a1));
    }
    */
    MCAPI EncryptedProxyEnv(class leveldb::Env *, class ContentIdentity const &, std::string const &, enum EncryptedProxyReadMode);

protected:

private:

};
// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ScriptActorComponent.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ScriptRideableComponent : public ScriptActorComponent {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTRIDEABLECOMPONENT
public:
    class ScriptRideableComponent& operator=(class ScriptRideableComponent const &) = delete;
    ScriptRideableComponent(class ScriptRideableComponent const &) = delete;
    ScriptRideableComponent() = delete;
#endif

public:
    /*0*/ virtual ~ScriptRideableComponent();
    /*
    inline  ~ScriptRideableComponent(){
         (ScriptRideableComponent::*rv)();
        *((void**)&rv) = dlsym("??1ScriptRideableComponent@@UEAA@XZ");
        return (this->*rv)();
    }
    */
    MCAPI ScriptRideableComponent(class WeakEntityRef const &, class Scripting::WeakLifetimeScope const &, std::string const &);
    MCAPI class Scripting::Result<bool> addPassenger(class ScriptActor &) const;
    MCAPI class Scripting::Result<void> ejectPassenger(class ScriptActor &) const;
    MCAPI class Scripting::Result<void> ejectPassengers() const;
    MCAPI class Scripting::Result<int> getControllingSeat() const;
    MCAPI class Scripting::Result<bool> getCrouchingSkipInteract() const;
    MCAPI class Scripting::Result<std::vector<std::string>> getFamilyTypes() const;
    MCAPI class Scripting::Result<std::string> getInteractText() const;
    MCAPI class Scripting::Result<bool> getPassengerCanInteract() const;
    MCAPI class Scripting::Result<bool> getPullInEntities() const;
    MCAPI class Scripting::Result<int> getSeatCount() const;
    MCAPI class Scripting::Result<std::vector<struct SeatDescription>> getSeats() const;
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptRideableComponent> bind(struct Scripting::Version);

protected:

private:

};
// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class FeatureTerrainAdjustments {

#define AFTER_EXTRA
// Add Member There
public:
struct Descriptions {
    Descriptions() = delete;
    Descriptions(Descriptions const&) = delete;
    Descriptions(Descriptions const&&) = delete;
};

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FEATURETERRAINADJUSTMENTS
public:
    class FeatureTerrainAdjustments& operator=(class FeatureTerrainAdjustments const &) = delete;
    FeatureTerrainAdjustments(class FeatureTerrainAdjustments const &) = delete;
    FeatureTerrainAdjustments() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_FEATURETERRAINADJUSTMENTS
#endif
    MCAPI struct FeatureTerrainAdjustments::Descriptions at(class ChunkPos const &);
    MCAPI void garbageCollectDescriptions();
    MCAPI class std::shared_ptr<bool> setBeardAndShaver(class BoundingBox const &, int, float, float);
    MCAPI class std::shared_ptr<bool> setBeardifier(class BoundingBox const &, int);
    MCAPI class std::shared_ptr<bool> setBury(class BoundingBox const &);
    MCAPI ~FeatureTerrainAdjustments();
    MCAPI static float calculateContribution(struct FeatureTerrainAdjustments::Descriptions const &, class BlockPos const &, float);
    MCAPI static struct BeardKernel & getBeardKernel();
    MCAPI static bool shouldDoTerrainAdjustments(struct FeatureTerrainAdjustments::Descriptions const &);

protected:

private:
    MCAPI class std::shared_ptr<bool> _insertDescriptions(std::vector<class ChunkPos> const &, class std::function<void (struct FeatureTerrainAdjustments::Descriptions &, class std::weak_ptr<bool>)> &&);
    MCAPI static struct BeardKernel mBeardKernel;

};
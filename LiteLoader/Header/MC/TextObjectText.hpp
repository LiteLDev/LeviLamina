// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class TextObjectText {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_TEXTOBJECTTEXT
public:
    class TextObjectText& operator=(class TextObjectText const &) = delete;
    TextObjectText(class TextObjectText const &) = delete;
    TextObjectText() = delete;
#endif

public:
    /*0*/ virtual ~TextObjectText();
    /*1*/ virtual void __unk_vfn_1();
    /*2*/ virtual class Json::Value asJsonValue() const;
    /*
    inline std::string asString() const{
        std::string (TextObjectText::*rv)() const;
        *((void**)&rv) = dlsym("?asString@TextObjectText@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ");
        return (this->*rv)();
    }
    inline class Json::Value resolve(struct ResolveData const & a0) const{
        class Json::Value (TextObjectText::*rv)(struct ResolveData const &) const;
        *((void**)&rv) = dlsym("?resolve@TextObjectText@@UEBA?AVValue@Json@@AEBUResolveData@@@Z");
        return (this->*rv)(std::forward<struct ResolveData const &>(a0));
    }
    */
    MCAPI TextObjectText(std::string);
    MCAPI static class Json::Value asJsonValue(std::string const &);

protected:

private:

};
/**
 * @file  CompressedNetworkPeer.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "NetworkPeer.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class CompressedNetworkPeer.
 *
 */
class CompressedNetworkPeer : public NetworkPeer {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_COMPRESSEDNETWORKPEER
public:
    class CompressedNetworkPeer& operator=(class CompressedNetworkPeer const &) = delete;
    CompressedNetworkPeer(class CompressedNetworkPeer const &) = delete;
    CompressedNetworkPeer() = delete;
#endif

public:
    /**
     * @vftbl  0
     * @hash   -287220291
     */
    virtual ~CompressedNetworkPeer();
    /**
     * @vftbl  1
     * @symbol ?sendPacket@CompressedNetworkPeer@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4Reliability@NetworkPeer@@HGW4Compressibility@@@Z
     * @hash   -1082732850
     */
    virtual void sendPacket(std::string const &, enum NetworkPeer::Reliability, int, unsigned short, enum Compressibility);
    /**
     * @vftbl  2
     * @symbol ?receivePacket@CompressedNetworkPeer@@UEAA?AW4DataStatus@NetworkPeer@@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$shared_ptr@V?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@@5@@Z
     * @hash   -981871512
     */
    virtual enum NetworkPeer::DataStatus receivePacket(std::string &, class std::shared_ptr<class std::chrono::time_point<struct std::chrono::steady_clock, class std::chrono::duration<__int64, struct std::ratio<1, 1000000000>>>> const &);
    /**
     * @vftbl  3
     * @symbol ?getNetworkStatus@CompressedNetworkPeer@@UEBA?AUNetworkStatus@NetworkPeer@@XZ
     * @hash   1808106975
     */
    virtual struct NetworkPeer::NetworkStatus getNetworkStatus() const;
    /**
     * @symbol ??0CompressedNetworkPeer@@QEAA@V?$shared_ptr@VNetworkPeer@@@std@@@Z
     * @hash   -460898679
     */
    MCAPI CompressedNetworkPeer(class std::shared_ptr<class NetworkPeer>);

};
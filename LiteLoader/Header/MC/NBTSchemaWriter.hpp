// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

class NBTSchemaWriter {

#define AFTER_EXTRA

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_NBTSCHEMAWRITER
public:
    class NBTSchemaWriter& operator=(class NBTSchemaWriter const &) = delete;
    NBTSchemaWriter(class NBTSchemaWriter const &) = delete;
#endif

public:
    /*0*/ virtual ~NBTSchemaWriter();
    /*1*/ virtual bool write(std::string const &);
    /*2*/ virtual void __unk_vfn_2();
    /*3*/ virtual bool write(float);
    /*4*/ virtual void __unk_vfn_4();
    /*5*/ virtual void __unk_vfn_5();
    /*6*/ virtual void __unk_vfn_6();
    /*7*/ virtual void __unk_vfn_7();
    /*8*/ virtual void __unk_vfn_8();
    /*9*/ virtual void __unk_vfn_9();
    /*10*/ virtual void __unk_vfn_10();
    /*11*/ virtual void __unk_vfn_11();
    /*12*/ virtual void __unk_vfn_12();
    /*13*/ virtual bool pushMember(std::string const &);
    /*14*/ virtual void popMember();
    /*15*/ virtual bool openObject();
    /*16*/ virtual bool openArray();
    /*17*/ virtual void close();
    /*
    inline bool write(unsigned __int64 a0){
        bool (NBTSchemaWriter::*rv)(unsigned __int64);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_N_K@Z");
        return (this->*rv)(std::forward<unsigned __int64>(a0));
    }
    inline bool write(double a0){
        bool (NBTSchemaWriter::*rv)(double);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_NN@Z");
        return (this->*rv)(std::forward<double>(a0));
    }
    inline bool write(__int64 a0){
        bool (NBTSchemaWriter::*rv)(__int64);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_N_J@Z");
        return (this->*rv)(std::forward<__int64>(a0));
    }
    inline  ~NBTSchemaWriter(){
         (NBTSchemaWriter::*rv)();
        *((void**)&rv) = dlsym("??1NBTSchemaWriter@@UEAA@XZ");
        return (this->*rv)();
    }
    inline bool write(signed char a0){
        bool (NBTSchemaWriter::*rv)(signed char);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_NC@Z");
        return (this->*rv)(std::forward<signed char>(a0));
    }
    inline bool write(bool a0){
        bool (NBTSchemaWriter::*rv)(bool);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_N_N@Z");
        return (this->*rv)(std::forward<bool>(a0));
    }
    inline bool write(unsigned char a0){
        bool (NBTSchemaWriter::*rv)(unsigned char);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_NE@Z");
        return (this->*rv)(std::forward<unsigned char>(a0));
    }
    inline bool write(short a0){
        bool (NBTSchemaWriter::*rv)(short);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_NF@Z");
        return (this->*rv)(std::forward<short>(a0));
    }
    inline bool write(unsigned short a0){
        bool (NBTSchemaWriter::*rv)(unsigned short);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_NG@Z");
        return (this->*rv)(std::forward<unsigned short>(a0));
    }
    inline bool write(int a0){
        bool (NBTSchemaWriter::*rv)(int);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_NH@Z");
        return (this->*rv)(std::forward<int>(a0));
    }
    inline bool write(unsigned int a0){
        bool (NBTSchemaWriter::*rv)(unsigned int);
        *((void**)&rv) = dlsym("?write@NBTSchemaWriter@@UEAA_NI@Z");
        return (this->*rv)(std::forward<unsigned int>(a0));
    }
    */
    MCAPI NBTSchemaWriter();

protected:

private:
    MCAPI bool _serializeTag(std::unique_ptr<class Tag>);

};
// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class EntitySystems {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ENTITYSYSTEMS
public:
    class EntitySystems& operator=(class EntitySystems const &) = delete;
    EntitySystems(class EntitySystems const &) = delete;
    EntitySystems() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ENTITYSYSTEMS
    MCVAPI void tickMovementCatchup(class EntityRegistry &);
    MCVAPI ~EntitySystems();
#endif
    MCAPI EntitySystems(std::string);
    MCAPI EntitySystems(std::unique_ptr<struct IEntitySystemsCollection>, std::string);
    MCAPI class PlayerInteractionSystem & getPlayerInteractionSystem();
    MCAPI void registerEvents(class EntityRegistry &);
    MCAPI void registerMovementTickingSystem(struct TickingSystemWithInfo &&);
    MCAPI void registerSystem(std::unique_ptr<struct ISystem>, struct SystemInfo const &);
    MCAPI void registerTickingSystem(struct TickingSystemWithInfo &&);
    MCAPI void registerUnconditionalTickingSystem(struct TickingSystemWithInfo &&);
    MCAPI void tick(class EntityRegistry &);
    MCAPI void tickEditor(class EntityRegistry &);

protected:

private:

};
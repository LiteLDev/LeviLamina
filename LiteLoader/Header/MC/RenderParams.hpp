/**
 * @file  RenderParams.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class RenderParams.
 *
 */
class RenderParams {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_RENDERPARAMS
public:
    class RenderParams& operator=(class RenderParams const &) = delete;
#endif

public:
    /**
     * @symbol ??0RenderParams@@QEAA@XZ
     * @hash   394975992
     */
    MCAPI RenderParams();
    /**
     * @symbol ??0RenderParams@@QEAA@$$QEAV0@@Z
     * @hash   -101682463
     */
    MCAPI RenderParams(class RenderParams &&);
    /**
     * @symbol ??0RenderParams@@QEAA@AEBV0@@Z
     * @hash   1764250433
     */
    MCAPI RenderParams(class RenderParams const &);
    /**
     * @symbol ?getActorTarget@RenderParams@@QEBAPEAVActor@@W4FilterSubject@@@Z
     * @hash   -2115595128
     */
    MCAPI class Actor * getActorTarget(enum FilterSubject) const;
    /**
     * @symbol ?init@RenderParams@@QEAAAEAV1@PEAVBaseActorRenderContext@@PEAVActor@@PEAVAnimationComponent@@PEAVMolangVariableMap@@V?$shared_ptr@VDataDrivenModel@@@std@@MM@Z
     * @hash   -1234684845
     */
    MCAPI class RenderParams & init(class BaseActorRenderContext *, class Actor *, class AnimationComponent *, class MolangVariableMap *, class std::shared_ptr<class DataDrivenModel>, float, float);
    /**
     * @symbol ??4RenderParams@@QEAAAEAV0@$$QEAV0@@Z
     * @hash   1865121332
     */
    MCAPI class RenderParams & operator=(class RenderParams &&);
    /**
     * @symbol ??ARenderParams@@QEAAAEAM_K@Z
     * @hash   285981446
     */
    MCAPI float & operator[](unsigned __int64);
    /**
     * @symbol ??1RenderParams@@QEAA@XZ
     * @hash   1085089910
     */
    MCAPI ~RenderParams();
    /**
     * @symbol ?getRenderParams@RenderParams@@SAAEAV1@AEAVActor@@@Z
     * @hash   -438996198
     */
    MCAPI static class RenderParams & getRenderParams(class Actor &);

};
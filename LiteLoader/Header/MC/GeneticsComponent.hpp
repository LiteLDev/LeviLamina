// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class GeneticsComponent {

#define AFTER_EXTRA
// Add Member There
public:
struct Gene {
    Gene() = delete;
    Gene(Gene const&) = delete;
    Gene(Gene const&&) = delete;
};

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_GENETICSCOMPONENT
public:
    class GeneticsComponent& operator=(class GeneticsComponent const &) = delete;
    GeneticsComponent(class GeneticsComponent const &) = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_GENETICSCOMPONENT
#endif
    MCAPI GeneticsComponent();
    MCAPI void addAdditionalSaveData(class CompoundTag &) const;
    MCAPI void buildDebugInfo(std::string &) const;
    MCAPI struct GeneticsComponent::Gene * findGene(std::string const &);
    MCAPI void fireGeneEvents(class Actor &) const;
    MCAPI void initializeGenesFromParents(class Actor &, class Actor &, class Actor &);
    MCAPI class GeneticsComponent & operator=(class GeneticsComponent &&);
    MCAPI void readAdditionalSaveData(class Actor &, class CompoundTag const &, class DataLoadHelper &);
    MCAPI static int const INVALID_ALLELE_VALUE;

protected:

private:
    MCAPI static std::string const GENE_ARRAY;
    MCAPI static std::string const HIDDEN_ALLELE;
    MCAPI static std::string const MAIN_ALLELE;

};
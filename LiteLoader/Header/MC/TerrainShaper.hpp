// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class TerrainShaper {

#define AFTER_EXTRA
// Add Member There
public:
struct Point {
    Point() = delete;
    Point(Point const&) = delete;
    Point(Point const&&) = delete;
};

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_TERRAINSHAPER
public:
    class TerrainShaper& operator=(class TerrainShaper const &) = delete;
    TerrainShaper(class TerrainShaper const &) = delete;
    TerrainShaper() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_TERRAINSHAPER
#endif
    MCAPI float factor(float, float, float) const;
    MCAPI float jaggedness(float, float, float) const;
    MCAPI float offset(float, float, float) const;
    MCAPI static class TerrainShaper buildOverworld();

protected:

private:
    MCAPI static class ToFloatFunction<struct TerrainShaper::Point> buildErosionJaggednessSpline(float, float, float, float);
    MCAPI static class ToFloatFunction<struct TerrainShaper::Point> buildErosionOffsetSpline(std::string const &, float, float, float, float, float, float, bool, bool);
    MCAPI static class ToFloatFunction<struct TerrainShaper::Point> buildMountainRidgeSplineWithPoints(float, bool);
    MCAPI static class ToFloatFunction<struct TerrainShaper::Point> buildRidgeJaggednessSpline(float, float);
    MCAPI static class ToFloatFunction<struct TerrainShaper::Point> buildWeirdnessJaggednessSpline(float);
    MCAPI static class ToFloatFunction<struct TerrainShaper::Point> getErosionFactor(float, bool);
    MCAPI static class ToFloatFunction<struct TerrainShaper::Point> ridgeSpline(std::string const &, float, float, float, float, float, float);

};
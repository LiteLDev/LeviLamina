// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class SculkCatalystBlockActor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCULKCATALYSTBLOCKACTOR
public:
    class SculkCatalystBlockActor& operator=(class SculkCatalystBlockActor const &) = delete;
    SculkCatalystBlockActor(class SculkCatalystBlockActor const &) = delete;
    SculkCatalystBlockActor() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SCULKCATALYSTBLOCKACTOR
    MCVAPI class GameEvents::PositionSource const & getPositionSource() const;
    MCVAPI unsigned int getRange() const;
    MCVAPI void handleGameEvent(class GameEvent const &, class BlockPos const &, class Actor *, class BlockSource &);
    MCVAPI void load(class Level &, class CompoundTag const &, class DataLoadHelper &);
    MCVAPI void onRemoved(class BlockSource &);
    MCVAPI bool save(class CompoundTag &) const;
    MCVAPI void tick(class BlockSource &);
#endif
    MCAPI SculkCatalystBlockActor(class BlockPos const &);
    MCAPI class SculkSpreader & getSculkSpreader();
    MCAPI static enum BlockActorType const TypeId;
    MCAPI static std::string const TypeString;

protected:

private:

};
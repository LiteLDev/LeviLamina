// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class EntityPlacerItemComponent {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ENTITYPLACERITEMCOMPONENT
public:
    class EntityPlacerItemComponent& operator=(class EntityPlacerItemComponent const &) = delete;
    EntityPlacerItemComponent(class EntityPlacerItemComponent const &) = delete;
    EntityPlacerItemComponent() = delete;
#endif

public:
    /*0*/ virtual ~EntityPlacerItemComponent();
    /*1*/ virtual void __unk_vfn_1();
    /*2*/ virtual void __unk_vfn_2();
    /*3*/ virtual bool useOn(class ItemStack &, class Actor &, class BlockPos const &, unsigned char, class Vec3 const &) const;
    /*4*/ virtual void __unk_vfn_4();
    /*5*/ virtual std::unique_ptr<class CompoundTag> buildNetworkTag() const;
    /*6*/ virtual void initializeFromNetwork(class CompoundTag const &);
    /*
    inline bool isNetworkComponent() const{
        bool (EntityPlacerItemComponent::*rv)() const;
        *((void**)&rv) = dlsym("?isNetworkComponent@EntityPlacerItemComponent@@UEBA_NXZ");
        return (this->*rv)();
    }
    */
    MCAPI EntityPlacerItemComponent(class ComponentItem *);
    MCAPI bool dispense(class BlockSource &, class Container &, int, class Vec3 const &, unsigned char) const;
    MCAPI static void bindType();
    MCAPI static class HashedString const & getIdentifier();

protected:

private:
    MCAPI void _positionAndRotateActor(class Actor &, class Vec3, unsigned char, class Vec3 const &, class BlockLegacy const *) const;
    MCAPI void _setActorCustomName(class Actor &, class ItemStack const &) const;

};
// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class BreatheAirGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BREATHEAIRGOAL
public:
    class BreatheAirGoal& operator=(class BreatheAirGoal const &) = delete;
    BreatheAirGoal(class BreatheAirGoal const &) = delete;
    BreatheAirGoal() = delete;
#endif

public:
    /*0*/ virtual ~BreatheAirGoal();
    /*1*/ virtual bool canUse();
    /*2*/ virtual bool canContinueToUse();
    /*3*/ virtual void __unk_vfn_3();
    /*4*/ virtual void start();
    /*5*/ virtual void __unk_vfn_5();
    /*6*/ virtual void tick();
    /*7*/ virtual void appendDebugInfo(std::string &) const;
    /*
    inline bool canBeInterrupted(){
        bool (BreatheAirGoal::*rv)();
        *((void**)&rv) = dlsym("?canBeInterrupted@BreatheAirGoal@@UEAA_NXZ");
        return (this->*rv)();
    }
    */
    MCAPI BreatheAirGoal(class Mob &);

protected:

private:
    MCAPI int _determineApproximateDepth();
    MCAPI void _findAirPosition();

};
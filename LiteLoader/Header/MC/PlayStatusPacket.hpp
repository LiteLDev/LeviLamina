// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Packet.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
enum PlayStatus : int {
	PlayStatusLoginSuccess,
	PlayStatusLoginFailedClient,
	PlayStatusLoginFailedServer,
	PlayStatusPlayerSpawn,
	PlayStatusLoginFailedInvalidTenant,
	PlayStatusLoginFailedVanillaEdu,
	PlayStatusLoginFailedEduVanilla,
	PlayStatusLoginFailedServerFull,
};

#undef BEFORE_EXTRA

class PlayStatusPacket : public Packet {

#define AFTER_EXTRA
// Add Member There
public:
    PlayStatus status;

    inline std::string toDebugString() {
        return fmt::format("{}: status: {}",
            __super::toDebugString(), (int)status);
    }

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_PLAYSTATUSPACKET
public:
    class PlayStatusPacket& operator=(class PlayStatusPacket const &) = delete;
    PlayStatusPacket(class PlayStatusPacket const &) = delete;
#endif

public:
    /*0*/ virtual ~PlayStatusPacket();
    /*1*/ virtual enum MinecraftPacketIds getId() const;
    /*2*/ virtual std::string getName() const;
    /*3*/ virtual void write(class BinaryStream &) const;
    /*6*/ virtual enum StreamReadResult _read(class ReadOnlyBinaryStream &);
    MCAPI PlayStatusPacket(enum PlayStatus);
    MCAPI PlayStatusPacket();

protected:

private:

};
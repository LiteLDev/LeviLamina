/**
 * @file  ContainerOpenPacket.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Packet.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class ContainerOpenPacket.
 *
 */
class ContainerOpenPacket : public Packet {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_CONTAINEROPENPACKET
public:
    class ContainerOpenPacket& operator=(class ContainerOpenPacket const &) = delete;
    ContainerOpenPacket(class ContainerOpenPacket const &) = delete;
#endif

public:
    /**
     * @vftbl  0
     * @hash   -1982777183
     */
    virtual ~ContainerOpenPacket();
    /**
     * @vftbl  1
     * @symbol ?getId@ContainerOpenPacket@@UEBA?AW4MinecraftPacketIds@@XZ
     * @hash   -324539749
     */
    virtual enum MinecraftPacketIds getId() const;
    /**
     * @vftbl  2
     * @symbol ?getName@ContainerOpenPacket@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   961643848
     */
    virtual std::string getName() const;
    /**
     * @vftbl  3
     * @symbol ?write@ContainerOpenPacket@@UEBAXAEAVBinaryStream@@@Z
     * @hash   -1704751681
     */
    virtual void write(class BinaryStream &) const;
    /**
     * @vftbl  6
     * @symbol ?_read@ContainerOpenPacket@@EEAA?AW4StreamReadResult@@AEAVReadOnlyBinaryStream@@@Z
     * @hash   430283423
     */
    virtual enum StreamReadResult _read(class ReadOnlyBinaryStream &);
    /**
     * @symbol ??0ContainerOpenPacket@@QEAA@XZ
     * @hash   1246876655
     */
    MCAPI ContainerOpenPacket();
    /**
     * @symbol ??0ContainerOpenPacket@@QEAA@W4ContainerID@@W4ContainerType@@AEBVBlockPos@@AEBUActorUniqueID@@@Z
     * @hash   -51937193
     */
    MCAPI ContainerOpenPacket(enum ContainerID, enum ContainerType, class BlockPos const &, struct ActorUniqueID const &);

};
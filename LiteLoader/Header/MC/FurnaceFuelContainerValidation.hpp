// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ContainerValidationBase.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class FurnaceFuelContainerValidation : public ContainerValidationBase {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FURNACEFUELCONTAINERVALIDATION
public:
    class FurnaceFuelContainerValidation& operator=(class FurnaceFuelContainerValidation const &) = delete;
    FurnaceFuelContainerValidation(class FurnaceFuelContainerValidation const &) = delete;
    FurnaceFuelContainerValidation() = delete;
#endif

public:
    /*0*/ virtual ~FurnaceFuelContainerValidation();
    /*2*/ virtual bool isItemAllowedInSlot(class ContainerScreenContext const &, int, class ItemStackBase const &, int) const;
    /*3*/ virtual int getAvailableSetCount(int, class ItemStackBase const &) const;
    /*4*/ virtual bool isItemAllowedToAdd(class ItemStack const &) const;
    /*
    inline int getContainerOffset(class ContainerScreenContext const & a0) const{
        int (FurnaceFuelContainerValidation::*rv)(class ContainerScreenContext const &) const;
        *((void**)&rv) = dlsym("?getContainerOffset@FurnaceFuelContainerValidation@@UEBAHAEBVContainerScreenContext@@@Z");
        return (this->*rv)(std::forward<class ContainerScreenContext const &>(a0));
    }
    */

protected:

private:

};
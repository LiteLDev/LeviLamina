// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class SquidFleeGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SQUIDFLEEGOAL
public:
    class SquidFleeGoal& operator=(class SquidFleeGoal const &) = delete;
    SquidFleeGoal(class SquidFleeGoal const &) = delete;
    SquidFleeGoal() = delete;
#endif

public:
    /*0*/ virtual ~SquidFleeGoal();
    /*1*/ virtual bool canUse();
    /*2*/ virtual void __unk_vfn_2();
    /*3*/ virtual void __unk_vfn_3();
    /*4*/ virtual void __unk_vfn_4();
    /*5*/ virtual void __unk_vfn_5();
    /*6*/ virtual void tick();
    /*7*/ virtual void appendDebugInfo(std::string &) const;
    /*
    inline void stop(){
        void (SquidFleeGoal::*rv)();
        *((void**)&rv) = dlsym("?stop@SquidFleeGoal@@UEAAXXZ");
        return (this->*rv)();
    }
    inline bool canContinueToUse(){
        bool (SquidFleeGoal::*rv)();
        *((void**)&rv) = dlsym("?canContinueToUse@SquidFleeGoal@@UEAA_NXZ");
        return (this->*rv)();
    }
    inline void start(){
        void (SquidFleeGoal::*rv)();
        *((void**)&rv) = dlsym("?start@SquidFleeGoal@@UEAAXXZ");
        return (this->*rv)();
    }
    */

protected:

private:

};
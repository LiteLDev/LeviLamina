// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Bedrock.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class TaskResult {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_TASKRESULT
public:
    class TaskResult& operator=(class TaskResult const &) = delete;
    TaskResult(class TaskResult const &) = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_TASKRESULT
#endif
    MCAPI TaskResult();
    MCAPI class std::chrono::time_point<struct std::chrono::steady_clock, class std::chrono::duration<__int64, struct std::ratio<1, 1000000000>>> getRunAtTime() const;
    MCAPI class std::shared_ptr<class Bedrock::Threading::IAsyncResult<void>> getWaitingOperation() const;
    MCAPI bool hasDelay() const;
    MCAPI bool isDone() const;
    MCAPI bool isWaiting() const;
    MCAPI bool isWaitingOperationLinked() const;
    MCAPI ~TaskResult();
    MCAPI static class TaskResult const Done;
    MCAPI static class TaskResult const Requeue;
    MCAPI static class TaskResult requeueAfter(class std::chrono::duration<__int64, struct std::ratio<1, 1000000000>>);

protected:

private:

};
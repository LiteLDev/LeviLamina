// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Packet.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
enum SoftEnumUpdateType : char
{
    Add = 0,
    Remove = 1,
    Set = 2,
};

#undef BEFORE_EXTRA

class UpdateSoftEnumPacket : public Packet {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_UPDATESOFTENUMPACKET
public:
    class UpdateSoftEnumPacket& operator=(class UpdateSoftEnumPacket const &) = delete;
    UpdateSoftEnumPacket(class UpdateSoftEnumPacket const &) = delete;
#endif

public:
    /*0*/ virtual ~UpdateSoftEnumPacket();
    /*1*/ virtual enum MinecraftPacketIds getId() const;
    /*2*/ virtual std::string getName() const;
    /*3*/ virtual void write(class BinaryStream &) const;
    /*6*/ virtual enum StreamReadResult _read(class ReadOnlyBinaryStream &);
    /*
    inline  ~UpdateSoftEnumPacket(){
         (UpdateSoftEnumPacket::*rv)();
        *((void**)&rv) = dlsym("??1UpdateSoftEnumPacket@@UEAA@XZ");
        return (this->*rv)();
    }
    */
    MCAPI UpdateSoftEnumPacket(enum SoftEnumUpdateType, std::string const &, std::vector<std::string> const &);
    MCAPI UpdateSoftEnumPacket();

protected:

private:

};
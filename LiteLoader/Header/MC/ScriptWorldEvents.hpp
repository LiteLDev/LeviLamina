// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ScriptWorldEvents {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTWORLDEVENTS
public:
    class ScriptWorldEvents& operator=(class ScriptWorldEvents const &) = delete;
    ScriptWorldEvents(class ScriptWorldEvents const &) = delete;
    ScriptWorldEvents() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SCRIPTWORLDEVENTS
#endif
    MCAPI ScriptWorldEvents(class Scripting::WeakLifetimeScope const &, class gsl::not_null<class Level *>);
    MCAPI ScriptWorldEvents(class ScriptWorldEvents &&);
    MCAPI class Level & getLevel() const;
    MCAPI void onActivateLever(struct ScriptLeverActionEvent &);
    MCAPI void onActivatePiston(struct ScriptPistonActionEvent &);
    MCAPI void onActorAddEffect(struct ScriptActorAddEffectEvent &);
    MCAPI void onActorCreated(struct ScriptActorEvent &);
    MCAPI void onActorHit(struct ScriptActorHitEvent &);
    MCAPI void onActorHurt(struct ScriptActorHurtEvent &);
    MCAPI void onActorRemoved(struct ActorUniqueID);
    MCAPI void onBeforeActivatePiston(struct ScriptBeforePistonActionEvent &);
    MCAPI void onBeforeChat(struct ScriptBeforeChatEvent &);
    MCAPI void onBeforeDataDrivenActorEventSend(struct ScriptBeforeDataDrivenActorTriggerEvent &);
    MCAPI void onBeforeExplosion(struct ScriptBeforeExplosionStartedEvent &);
    MCAPI void onBeforeItemDefinitionEventTriggered(struct ScriptBeforeItemDefinitionEvent &);
    MCAPI void onBeforeItemUse(struct ScriptBeforeItemUseEvent &);
    MCAPI void onBeforeItemUseOn(struct ScriptBeforeItemUseOnEvent &);
    MCAPI void onBlockBreak(struct ScriptBlockBreakEvent &);
    MCAPI void onBlockPlace(struct ScriptBlockPlaceEvent &);
    MCAPI void onChat(struct ScriptChatEvent &);
    MCAPI void onDataDrivenActorEventSend(struct ScriptDataDrivenActorTriggerEvent &);
    MCAPI void onExplodeBlock(struct ScriptBlockExplodedEvent &);
    MCAPI void onExplosion(struct ScriptExplosionStartedEvent &);
    MCAPI void onItemDefinitionEventTriggered(struct ScriptItemDefinitionEvent &);
    MCAPI void onItemUse(struct ScriptItemUseEvent &);
    MCAPI void onItemUseOn(struct ScriptItemUseOnEvent &);
    MCAPI void onLevelTick(struct ScriptTickEvent &);
    MCAPI void onPlayerJoin(struct ScriptPlayerJoinEvent &);
    MCAPI void onPlayerLeave(struct ScriptPlayerLeaveEvent &);
    MCAPI void onServerMessage(struct ScriptServerMessage &);
    MCAPI void onWeatherChanged(struct ScriptWeatherChangedEvent &);
    MCAPI class ScriptWorldEvents & operator=(class ScriptWorldEvents &&);
    MCAPI void registerListener(struct Scripting::TypedObjectHandle<class ScriptWorldEvents>);
    MCAPI ~ScriptWorldEvents();
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptWorldEvents> bind(struct Scripting::Version);

protected:

private:

};
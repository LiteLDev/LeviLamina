// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class MolangVariable {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOLANGVARIABLE
public:
    class MolangVariable& operator=(class MolangVariable const &) = delete;
    MolangVariable(class MolangVariable const &) = delete;
    MolangVariable() = delete;
#endif

public:
    MCAPI MolangVariable(enum MolangVariableIndex, class HashedString, struct MolangScriptArg);
    MCAPI ~MolangVariable();
    MCAPI static enum MolangVariableIndex getVariableIndex(class HashedString const &);
    MCAPI static enum MolangVariableIndex getVariableIndex(unsigned __int64);
    MCAPI static enum MolangVariableIndex getVariableIndex(unsigned __int64, char const *, bool);
    MCAPI static class HashedString const & getVariableName(enum MolangVariableIndex);
    MCAPI static void initVariableMaps();
    MCAPI static bool isValidName(char const *);
    MCAPI static void processWaterMark();

protected:

private:
    MCAPI static class std::recursive_mutex & _getMolangVariableIndexLock();
    MCAPI static bool mHasSetWatermark;
    MCAPI static class std::unordered_map<enum MolangVariableIndex, class HashedString, struct std::hash<enum MolangVariableIndex>, struct std::equal_to<enum MolangVariableIndex>, class std::allocator<struct std::pair<enum MolangVariableIndex const, class HashedString>>> mIndexToVariableNameMap;
    MCAPI static class std::unordered_map<enum MolangVariableIndex, class HashedString, struct std::hash<enum MolangVariableIndex>, struct std::equal_to<enum MolangVariableIndex>, class std::allocator<struct std::pair<enum MolangVariableIndex const, class HashedString>>> mIndexToVariableNameMap_LowWaterMark;
    MCAPI static class std::unordered_map<unsigned __int64, enum MolangVariableIndex, struct std::hash<unsigned __int64>, struct std::equal_to<unsigned __int64>, class std::allocator<struct std::pair<unsigned __int64 const, enum MolangVariableIndex>>> mVariableNameToIndexMap;
    MCAPI static class std::unordered_map<unsigned __int64, enum MolangVariableIndex, struct std::hash<unsigned __int64>, struct std::equal_to<unsigned __int64>, class std::allocator<struct std::pair<unsigned __int64 const, enum MolangVariableIndex>>> mVariableNameToIndexMap_LowWaterMark;

};
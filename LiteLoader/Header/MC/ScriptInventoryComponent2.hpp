// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ScriptActorComponent.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ScriptInventoryComponent2 : public ScriptActorComponent {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTINVENTORYCOMPONENT2
public:
    class ScriptInventoryComponent2& operator=(class ScriptInventoryComponent2 const &) = delete;
    ScriptInventoryComponent2(class ScriptInventoryComponent2 const &) = delete;
    ScriptInventoryComponent2() = delete;
#endif

public:
    /*0*/ virtual ~ScriptInventoryComponent2();
    /*
    inline  ~ScriptInventoryComponent2(){
         (ScriptInventoryComponent2::*rv)();
        *((void**)&rv) = dlsym("??1ScriptInventoryComponent2@@UEAA@XZ");
        return (this->*rv)();
    }
    */
    MCAPI class Scripting::Result<int> getAdditionalSlotsPerStrength() const;
    MCAPI class Scripting::Result<bool> getCanBeSiphonedFrom() const;
    MCAPI class Scripting::Result<std::string> getContainerType() const;
    MCAPI class Scripting::Result<int> getInventorySize() const;
    MCAPI class Scripting::Result<class Scripting::WeakTypedObjectHandle<class ScriptInventoryComponentContainer>> getOrCreateContainer();
    MCAPI class Scripting::Result<bool> getPrivate() const;
    MCAPI class Scripting::Result<bool> getRestrictToOwner() const;
    MCAPI class ScriptInventoryComponent2 & operator=(class ScriptInventoryComponent2 &&);
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptInventoryComponent2> bind(struct Scripting::Version);

protected:

private:

};
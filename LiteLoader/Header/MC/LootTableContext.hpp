// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class LootTableContext {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_LOOTTABLECONTEXT
public:
    class LootTableContext& operator=(class LootTableContext const &) = delete;
    LootTableContext(class LootTableContext const &) = delete;
    LootTableContext() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_LOOTTABLECONTEXT
#endif
    MCAPI LootTableContext(float, class ILevel *, struct ActorUniqueID, class Player *, class Actor *, class ActorDamageSource const *, float, class AutomaticID<class Dimension, int>, class ItemStack const *);
    MCAPI bool addVisitedTable(class LootTable const *);
    MCAPI class AutomaticID<class Dimension, int> getDimensionId() const;
    MCAPI class Actor * getEntity(enum ActorTarget) const;
    MCAPI float getExplosionRadius() const;
    MCAPI class Actor * getKilledEntity() const;
    MCAPI class Actor * getKillerEntity() const;
    MCAPI class Actor * getKillerPet() const;
    MCAPI class Actor * getKillerPlayer() const;
    MCAPI class Level * getLevel() const;
    MCAPI float getLuck() const;
    MCAPI std::string getOriginalItemName() const;
    MCAPI class Actor * getThisEntity() const;
    MCAPI class ItemStack const * getTool() const;
    MCAPI void removeVisitedTable(class LootTable const *);
    MCAPI void setOriginalItemName(std::string const &);
    MCAPI ~LootTableContext();

protected:

private:

};
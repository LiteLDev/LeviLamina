// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ScriptWorld {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTWORLD
public:
    class ScriptWorld& operator=(class ScriptWorld const &) = delete;
    ScriptWorld(class ScriptWorld const &) = delete;
    ScriptWorld() = delete;
#endif

public:
    MCAPI ScriptWorld(class Scripting::WeakLifetimeScope const &, class ServerLevel *);
    MCAPI void _playOrQueueMusic(std::string const &, class std::optional<struct ScriptMusicOptions>, enum LevelEvent);
    MCAPI void broadcastClientMessage(std::string const &, std::string const &);
    MCAPI class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptDimension>> getDimension(std::string const &);
    MCAPI class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptPlayerIterator>> getPlayers(class std::optional<struct ScriptActorQueryOptions>) const;
    MCAPI void playMusic(std::string const &, class std::optional<struct ScriptMusicOptions>);
    MCAPI void playSound(std::string const &, class std::optional<struct ScriptSoundOptions>);
    MCAPI void queueMusic(std::string const &, class std::optional<struct ScriptMusicOptions>);
    MCAPI void stopMusic();
    MCAPI ~ScriptWorld();
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptWorld> bind(struct Scripting::Version);

protected:

private:

};
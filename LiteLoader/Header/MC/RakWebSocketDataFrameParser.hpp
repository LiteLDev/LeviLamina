/**
 * @file  RakWebSocketDataFrameParser.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "RakNet.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class RakWebSocketDataFrameParser.
 *
 */
class RakWebSocketDataFrameParser {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_RAKWEBSOCKETDATAFRAMEPARSER
public:
    class RakWebSocketDataFrameParser& operator=(class RakWebSocketDataFrameParser const &) = delete;
    RakWebSocketDataFrameParser(class RakWebSocketDataFrameParser const &) = delete;
    RakWebSocketDataFrameParser() = delete;
#endif

public:
    /**
     * @symbol ??0RakWebSocketDataFrameParser@@QEAA@_N@Z
     * @hash   -804691364
     */
    MCAPI RakWebSocketDataFrameParser(bool);
    /**
     * @symbol ?readFrame@RakWebSocketDataFrameParser@@QEAA?AV?$shared_ptr@VRakWebSocketDataFrame@@@std@@AEAVBitStream@RakNet@@@Z
     * @hash   576578286
     */
    MCAPI class std::shared_ptr<class RakWebSocketDataFrame> readFrame(class RakNet::BitStream &);
    /**
     * @symbol ?setOnFailHandler@RakWebSocketDataFrameParser@@QEAAXV?$function@$$A6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4CloseStatusCode@@@Z@std@@@Z
     * @hash   94961035
     */
    MCAPI void setOnFailHandler(class std::function<void (std::string const &, enum CloseStatusCode)>);
    /**
     * @symbol ??1RakWebSocketDataFrameParser@@QEAA@XZ
     * @hash   -910722941
     */
    MCAPI ~RakWebSocketDataFrameParser();

//private:
    /**
     * @symbol ?_failReadFrame@RakWebSocketDataFrameParser@@AEAA?AV?$shared_ptr@VRakWebSocketDataFrame@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@W4CloseStatusCode@@@Z
     * @hash   148270588
     */
    MCAPI class std::shared_ptr<class RakWebSocketDataFrame> _failReadFrame(std::string const &, enum CloseStatusCode);

private:

};
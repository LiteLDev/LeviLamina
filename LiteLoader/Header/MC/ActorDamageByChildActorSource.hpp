// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ActorDamageByActorSource.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ActorDamageByChildActorSource : public ActorDamageByActorSource {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ACTORDAMAGEBYCHILDACTORSOURCE
public:
    class ActorDamageByChildActorSource& operator=(class ActorDamageByChildActorSource const &) = delete;
    ActorDamageByChildActorSource(class ActorDamageByChildActorSource const &) = delete;
    ActorDamageByChildActorSource() = delete;
#endif

public:
    /*0*/ virtual ~ActorDamageByChildActorSource();
    /*2*/ virtual bool isChildEntitySource() const;
    /*8*/ virtual struct std::pair<std::string, std::vector<std::string>> getDeathMessage(std::string, class Actor *) const;
    /*14*/ virtual bool getDamagingEntityIsCreative() const;
    /*15*/ virtual bool getDamagingEntityIsWorldBuilder() const;
    /*16*/ virtual struct ActorUniqueID getDamagingEntityUniqueID() const;
    /*17*/ virtual enum ActorType getDamagingEntityType() const;
    /*18*/ virtual enum ActorCategory getDamagingEntityCategories() const;
    /*19*/ virtual std::unique_ptr<class ActorDamageSource> clone() const;
    MCAPI ActorDamageByChildActorSource(class Actor &, class Actor &, enum ActorDamageCause);

protected:

private:

};
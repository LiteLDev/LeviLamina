// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Json.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class PackReport {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_PACKREPORT
public:
    class PackReport& operator=(class PackReport const &) = delete;
#endif

public:
    MCAPI PackReport(class PackReport const &);
    MCAPI PackReport();
    MCAPI std::vector<class std::shared_ptr<class PackError>> const & getErrors() const;
    MCAPI struct PackIdVersion const & getIdentity() const;
    MCAPI class ResourceLocation const & getLocation() const;
    MCAPI std::string const & getOriginalName() const;
    MCAPI std::string const & getOriginalVersion() const;
    MCAPI enum PackType getPackType() const;
    MCAPI bool hasErrors(enum PackErrorType);
    MCAPI bool hasErrors() const;
    MCAPI void serialize(class Json::Value &);
    MCAPI void setAttemptedUpgrade();
    MCAPI void setIdentity(struct PackIdVersion const &);
    MCAPI void setLocation(class ResourceLocation const &);
    MCAPI void setOriginalIdentity(std::string const &, std::string const &);
    MCAPI void setPackType(enum PackType);
    MCAPI void setUpgradeSuccess();
    MCAPI bool wasUpgraded() const;
    MCAPI ~PackReport();

protected:

private:

};
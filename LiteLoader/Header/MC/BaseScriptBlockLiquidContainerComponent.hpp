// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ScriptObject.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class BaseScriptBlockLiquidContainerComponent : public ScriptObject {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BASESCRIPTBLOCKLIQUIDCONTAINERCOMPONENT
public:
    class BaseScriptBlockLiquidContainerComponent& operator=(class BaseScriptBlockLiquidContainerComponent const &) = delete;
    BaseScriptBlockLiquidContainerComponent(class BaseScriptBlockLiquidContainerComponent const &) = delete;
    BaseScriptBlockLiquidContainerComponent() = delete;
#endif

public:
    /*0*/ virtual ~BaseScriptBlockLiquidContainerComponent();
    /*
    inline class Scripting::Result<void> setFillLevel(int a0){
        class Scripting::Result<void> (BaseScriptBlockLiquidContainerComponent::*rv)(int);
        *((void**)&rv) = dlsym("?setFillLevel@BaseScriptBlockLiquidContainerComponent@@UEAA?AV?$Result@X@Scripting@@H@Z");
        return (this->*rv)(std::forward<int>(a0));
    }
    */
    MCAPI BaseScriptBlockLiquidContainerComponent(class BlockSource &, class BlockPos, class Scripting::WeakLifetimeScope const &, enum CauldronLiquidType);
    MCAPI class Scripting::Result<int> getFillLevel();

protected:
    MCAPI class CauldronBlock const * _tryGetCauldronBlock();
    MCAPI class CauldronBlockActor * _tryGetCauldronBlockActor();
    MCAPI static enum GameTestFluidType _getActualCauldronLiquidType(class BlockSource &, class BlockPos);

private:

};
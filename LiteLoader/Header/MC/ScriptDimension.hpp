// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ScriptObject.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ScriptDimension : public ScriptObject {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SCRIPTDIMENSION
public:
    class ScriptDimension& operator=(class ScriptDimension const &) = delete;
    ScriptDimension(class ScriptDimension const &) = delete;
    ScriptDimension() = delete;
#endif

public:
    /*0*/ virtual ~ScriptDimension();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_SCRIPTDIMENSION
#endif
    MCAPI class Scripting::Result<void> createExplosion(class Vec3 const &, float, struct Scripting::TypedObjectHandle<struct ScriptExplosionOptions>) const;
    MCAPI class Scripting::StrongTypedObjectHandle<class ScriptBlock> getBlock(class Scripting::WeakLifetimeScope, class BlockPos const &);
    MCAPI class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptBlock>> getBlockFromRay(class Scripting::WeakLifetimeScope, class Vec3 const &, class ScriptVector const &, class std::optional<struct ScriptBlockRaycastOptions> const &) const;
    MCAPI class Dimension & getDimension() const;
    MCAPI class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptActorIterator>> getEntities(class std::optional<struct ScriptActorQueryOptions>) const;
    MCAPI std::vector<class Scripting::StrongTypedObjectHandle<class ScriptActor>> getEntitiesAtBlockLocation(class BlockPos const &) const;
    MCAPI class Scripting::Result<std::vector<class Scripting::StrongTypedObjectHandle<class ScriptActor>>> getEntitiesFromRay(class Scripting::WeakLifetimeScope, class Vec3 const &, class ScriptVector const &, class std::optional<struct ScriptEntityRaycastOptions> const &) const;
    MCAPI class Scripting::Result<std::string> getId() const;
    MCAPI class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptPlayerIterator>> getPlayers(class std::optional<struct ScriptActorQueryOptions>) const;
    MCAPI class ScriptDimension & operator=(class ScriptDimension &&);
    MCAPI class Scripting::Result<struct Scripting::JSON> runCommand(struct Scripting::ContextConfig const &, std::string const &);
    MCAPI class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptActor>> spawnEntity(std::string const &, class std::variant<class BlockPos, class Vec3> const &) const;
    MCAPI class Scripting::Result<class Scripting::StrongTypedObjectHandle<class ScriptActor>> spawnItem(class ScriptItemStack const &, class std::variant<class BlockPos, class Vec3> const &) const;
    MCAPI void spawnParticle(std::string const &, class Vec3 const &, class Scripting::StrongTypedObjectHandle<class ScriptMolangVariableMap>);
    MCAPI static class Scripting::ClassBindingBuilder<class ScriptDimension> bind(struct Scripting::Version);
    MCAPI static class Scripting::StrongTypedObjectHandle<class ScriptDimension> getOrCreateHandle(class Dimension &, class Scripting::WeakLifetimeScope const &);
    MCAPI static class Scripting::StrongTypedObjectHandle<class ScriptDimension> getOrCreateHandle(class AutomaticID<class Dimension, int>, class Level &, class Scripting::WeakLifetimeScope const &);

protected:

private:

};
// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ServerNetworkController {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SERVERNETWORKCONTROLLER
public:
    class ServerNetworkController& operator=(class ServerNetworkController const &) = delete;
    ServerNetworkController(class ServerNetworkController const &) = delete;
    ServerNetworkController() = delete;
#endif

public:
    /*0*/ virtual ~ServerNetworkController();
    /*1*/ virtual void __unk_vfn_1();
    /*2*/ virtual bool isHost(class mce::UUID const &) const;
    /*3*/ virtual bool canChangePermission(class mce::UUID const &, class ServerPlayer const &) const;
    /*
    inline bool isDedicatedServer() const{
        bool (ServerNetworkController::*rv)() const;
        *((void**)&rv) = dlsym("?isDedicatedServer@ServerNetworkController@@UEBA_NXZ");
        return (this->*rv)();
    }
    */
    MCAPI ServerNetworkController(bool, class mce::UUID const &, class std::function<bool (class ServerPlayer const &, enum AbilitiesIndex)>);

protected:

private:

};
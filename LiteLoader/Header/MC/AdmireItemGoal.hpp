// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class AdmireItemGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ADMIREITEMGOAL
public:
    class AdmireItemGoal& operator=(class AdmireItemGoal const &) = delete;
    AdmireItemGoal(class AdmireItemGoal const &) = delete;
    AdmireItemGoal() = delete;
#endif

public:
    /*0*/ virtual ~AdmireItemGoal();
    /*1*/ virtual bool canUse();
    /*2*/ virtual void __unk_vfn_2();
    /*3*/ virtual void __unk_vfn_3();
    /*4*/ virtual void start();
    /*5*/ virtual void stop();
    /*6*/ virtual void tick();
    /*7*/ virtual void appendDebugInfo(std::string &) const;
    /*
    inline bool canContinueToUse(){
        bool (AdmireItemGoal::*rv)();
        *((void**)&rv) = dlsym("?canContinueToUse@AdmireItemGoal@@UEAA_NXZ");
        return (this->*rv)();
    }
    */
    MCAPI AdmireItemGoal(class Mob &, enum LevelSoundEvent, struct FloatRange, class DefinitionTrigger const &, class DefinitionTrigger const &);

protected:

private:
    MCAPI void _tryPlaceItemInInventory(class ContainerComponent &, class ShareableComponent const &);

};
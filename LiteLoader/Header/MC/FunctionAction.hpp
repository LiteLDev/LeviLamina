// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class FunctionAction {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FUNCTIONACTION
public:
    class FunctionAction& operator=(class FunctionAction const &) = delete;
    FunctionAction(class FunctionAction const &) = delete;
    FunctionAction() = delete;
#endif

public:
    /*0*/ virtual ~FunctionAction();
    /*1*/ virtual void execute(class ServerLevel &, class Dimension &);
    /*2*/ virtual void serialize(class CompoundTag &);
    /*3*/ virtual bool operator==(class IRequestAction &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_FUNCTIONACTION
#endif
    MCAPI FunctionAction(std::string const &, std::unique_ptr<class CommandOrigin>);
    MCAPI static bool isValidTag(class CompoundTag const &);
    MCAPI static std::unique_ptr<class FunctionAction> load(class CompoundTag const &, class ICommandOriginLoader &);

protected:

private:
    MCAPI void _printOriginInvalidError(class ServerLevel &);
    MCAPI void _printOutput(class ServerLevel &, int);

};
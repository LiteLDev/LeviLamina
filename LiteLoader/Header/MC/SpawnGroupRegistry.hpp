// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class SpawnGroupRegistry {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SPAWNGROUPREGISTRY
public:
    class SpawnGroupRegistry& operator=(class SpawnGroupRegistry const &) = delete;
    SpawnGroupRegistry(class SpawnGroupRegistry const &) = delete;
    SpawnGroupRegistry() = delete;
#endif

public:
    /*0*/ virtual ~SpawnGroupRegistry();
    /*1*/ virtual std::string const & getRootKey();
    /*2*/ virtual std::string const & getFileType();
    /*3*/ virtual void __unk_vfn_3();
    /*4*/ virtual void readResourceFiles(class ResourcePackManager &, class std::unordered_map<std::string, std::string, struct std::hash<std::string>, struct std::equal_to<std::string>, class std::allocator<struct std::pair<std::string const, std::string>>> &);
    /*
    inline bool processPopulationControl(std::string const & a0, class Json::Value & a1){
        bool (SpawnGroupRegistry::*rv)(std::string const &, class Json::Value &);
        *((void**)&rv) = dlsym("?processPopulationControl@SpawnGroupRegistry@@MEAA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAVValue@Json@@@Z");
        return (this->*rv)(std::forward<std::string const &>(a0), std::forward<class Json::Value &>(a1));
    }
    */
    MCAPI SpawnGroupRegistry(class ResourcePackManager &);
    MCAPI class SpawnGroupData const * getSpawnGroup(std::string const &) const;

protected:

private:

};
// This Header is auto generated by BDSLiteLoader Toolchain
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "ActorDamageSource.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

class ActorDamageByActorSource : public ActorDamageSource {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA

#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ACTORDAMAGEBYACTORSOURCE
public:
    class ActorDamageByActorSource& operator=(class ActorDamageByActorSource const &) = delete;
    ActorDamageByActorSource(class ActorDamageByActorSource const &) = delete;
    ActorDamageByActorSource() = delete;
#endif

public:
    /*0*/ virtual ~ActorDamageByActorSource();
    /*1*/ virtual bool isEntitySource() const;
    /*8*/ virtual struct std::pair<std::string, std::vector<std::string>> getDeathMessage(std::string, class Actor *) const;
    /*9*/ virtual bool getIsCreative() const;
    /*10*/ virtual bool getIsWorldBuilder() const;
    /*11*/ virtual struct ActorUniqueID getEntityUniqueID() const;
    /*12*/ virtual enum ActorType getEntityType() const;
    /*13*/ virtual enum ActorCategory getEntityCategories() const;
    /*16*/ virtual struct ActorUniqueID getDamagingEntityUniqueID() const;
    /*17*/ virtual enum ActorType getDamagingEntityType() const;
    /*19*/ virtual std::unique_ptr<class ActorDamageSource> clone() const;
    MCAPI ActorDamageByActorSource(class Actor &, enum ActorDamageCause);

protected:

private:

};
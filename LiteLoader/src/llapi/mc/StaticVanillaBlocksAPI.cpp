#include "llapi/mc/StaticVanillaBlocks.hpp"
#include "llapi/mc/BlockTypeRegistry.hpp"
#include "llapi/mc/HashedString.hpp"
#include "llapi/mc/VanillaBlockTypeIds.hpp"

namespace StaticVanillaBlocks {

Block const* mAcaciaButton;
Block const* mAcaciaDoor;
Block const* mAcaciaFenceGate;
Block const* mAcaciaPressurePlate;
Block const* mAcaciaStairs;
Block const* mAcaciaStandingSign;
Block const* mAcaciaTrapdoor;
Block const* mAcaciaWallSign;
Block const* mActivatorRail;
Block const* mAllow;
Block const* mAmethystBlock;
Block const* mAmethystCluster;
Block const* mAncientDebris;
Block const* mAndesiteStairs;
Block const* mAnvil;
Block const* mAzalea;
Block const* mAzaleaLeaves;
Block const* mAzaleaLeavesFlowered;
Block const* mBamboo;
Block const* mBambooSapling;
Block const* mBarrel;
Block const* mBarrier;
Block const* mBasalt;
Block const* mBeacon;
Block const* mBed;
Block const* mBedrock;
Block const* mBeeNest;
Block const* mBeehive;
Block const* mBeetroot;
Block const* mBell;
Block const* mBigDripleaf;
Block const* mBirchButton;
Block const* mBirchDoor;
Block const* mBirchFenceGate;
Block const* mBirchPressurePlate;
Block const* mBirchStairs;
Block const* mBirchStandingSign;
Block const* mBirchTrapdoor;
Block const* mBirchWallSign;
Block const* mBlackCandle;
Block const* mBlackCandleCake;
Block const* mBlackGlazedTerracotta;
Block const* mBlackstone;
Block const* mBlackstoneDoubleSlab;
Block const* mBlackstoneSlab;
Block const* mBlackstoneStairs;
Block const* mBlackstoneWall;
Block const* mBlastFurnace;
Block const* mBlueCandle;
Block const* mBlueCandleCake;
Block const* mBlueGlazedTerracotta;
Block const* mBlueIce;
Block const* mBoneBlock;
Block const* mBookshelf;
Block const* mBorderBlock;
Block const* mBrewingStand;
Block const* mBrickBlock;
Block const* mBrickStairs;
Block const* mBrownCandle;
Block const* mBrownCandleCake;
Block const* mBrownGlazedTerracotta;
Block const* mBrownMushroom;
Block const* mBrownMushroomBlock;
Block const* mBubbleColumn;
Block const* mBuddingAmethyst;
Block const* mCactus;
Block const* mCake;
Block const* mCalcite;
Block const* mCamera;
Block const* mCampFire;
Block const* mCandle;
Block const* mCandleCake;
Block const* mCarpet;
Block const* mCarrots;
Block const* mCartographyTable;
Block const* mCarvedPumpkin;
Block const* mCauldron;
Block const* mCaveVines;
Block const* mCaveVinesBodyWithBerries;
Block const* mCaveVinesHeadWithBerries;
Block const* mChain;
Block const* mChainCommandBlock;
Block const* mChalkboard;
Block const* mChemicalHeat;
Block const* mChemistryTable;
Block const* mChest;
Block const* mChiseledDeepslate;
Block const* mChiseledNetherBricks;
Block const* mChiseledPolishedBlackstone;
Block const* mChorusFlower;
Block const* mChorusPlant;
Block const* mClay;
Block const* mClientRequestPlaceholderBlock;
Block const* mCoalBlock;
Block const* mCoalOre;
Block const* mCobbledDeepslate;
Block const* mCobbledDeepslateDoubleSlab;
Block const* mCobbledDeepslateSlab;
Block const* mCobbledDeepslateStairs;
Block const* mCobbledDeepslateWall;
Block const* mCobblestone;
Block const* mCobblestoneWall;
Block const* mCocoa;
Block const* mColoredTorchBp;
Block const* mColoredTorchRg;
Block const* mCommandBlock;
Block const* mComposter;
Block const* mConcrete;
Block const* mConcretePowder;
Block const* mConduit;
Block const* mCopperBlock;
Block const* mCopperOre;
Block const* mCoral;
Block const* mCoralBlock;
Block const* mCoralFan;
Block const* mCoralFanDead;
Block const* mCoralFanHang;
Block const* mCoralFanHang2;
Block const* mCoralFanHang3;
Block const* mCrackedDeepslateBricks;
Block const* mCrackedDeepslateTiles;
Block const* mCrackedNetherBricks;
Block const* mCrackedPolishedBlackstoneBricks;
Block const* mCraftingTable;
Block const* mCrimsonButton;
Block const* mCrimsonDoor;
Block const* mCrimsonDoubleSlab;
Block const* mCrimsonFence;
Block const* mCrimsonFenceGate;
Block const* mCrimsonFungus;
Block const* mCrimsonHyphae;
Block const* mCrimsonNylium;
Block const* mCrimsonPlanks;
Block const* mCrimsonPressurePlate;
Block const* mCrimsonRoots;
Block const* mCrimsonSlab;
Block const* mCrimsonStairs;
Block const* mCrimsonStandingSign;
Block const* mCrimsonStem;
Block const* mCrimsonTrapdoor;
Block const* mCrimsonWallSign;
Block const* mCryingObsidian;
Block const* mCutCopper;
Block const* mCutCopperSlab;
Block const* mCutCopperStairs;
Block const* mCyanCandle;
Block const* mCyanCandleCake;
Block const* mCyanGlazedTerracotta;
Block const* mDarkOakButton;
Block const* mDarkOakDoor;
Block const* mDarkOakFenceGate;
Block const* mDarkOakPressurePlate;
Block const* mDarkOakStairs;
Block const* mDarkOakTrapdoor;
Block const* mDarkPrismarineStairs;
Block const* mDarkoakStandingSign;
Block const* mDarkoakWallSign;
Block const* mDaylightDetector;
Block const* mDaylightDetectorInverted;
Block const* mDeadbush;
Block const* mDeepslate;
Block const* mDeepslateBrickDoubleSlab;
Block const* mDeepslateBrickSlab;
Block const* mDeepslateBrickStairs;
Block const* mDeepslateBrickWall;
Block const* mDeepslateBricks;
Block const* mDeepslateCoalOre;
Block const* mDeepslateCopperOre;
Block const* mDeepslateDiamondOre;
Block const* mDeepslateEmeraldOre;
Block const* mDeepslateGoldOre;
Block const* mDeepslateIronOre;
Block const* mDeepslateLapisOre;
Block const* mDeepslateRedstoneOre;
Block const* mDeepslateTileDoubleSlab;
Block const* mDeepslateTileSlab;
Block const* mDeepslateTileStairs;
Block const* mDeepslateTileWall;
Block const* mDeepslateTiles;
Block const* mDeny;
Block const* mDetectorRail;
Block const* mDiamondBlock;
Block const* mDiamondOre;
Block const* mDioriteStairs;
Block const* mDirt;
Block const* mDirtWithRoots;
Block const* mDispenser;
Block const* mDoubleCutCopperSlab;
Block const* mDoublePlant;
Block const* mDoubleStoneSlab;
Block const* mDoubleStoneSlab2;
Block const* mDoubleStoneSlab3;
Block const* mDoubleStoneSlab4;
Block const* mDoubleWoodenSlab;
Block const* mDragonEgg;
Block const* mDriedKelpBlock;
Block const* mDripstone;
Block const* mDropper;
Block const* mElements[119];
Block const* mEmeraldBlock;
Block const* mEmeraldOre;
Block const* mEnchantingTable;
Block const* mEndBrickStairs;
Block const* mEndBricks;
Block const* mEndGateway;
Block const* mEndPortal;
Block const* mEndPortalFrame;
Block const* mEndRod;
Block const* mEndStone;
Block const* mEnderChest;
Block const* mExposedCopper;
Block const* mExposedCutCopper;
Block const* mExposedCutCopperSlab;
Block const* mExposedCutCopperStairs;
Block const* mExposedDoubleCutCopperSlab;
Block const* mFarmlandBlock;
Block const* mFence;
Block const* mFenceGate;
Block const* mFire;
Block const* mFletchingTable;
Block const* mFlowerPot;
Block const* mFloweringAzalea;
Block const* mFlowingLava;
Block const* mFlowingWater;
Block const* mFrogSpawn;
Block const* mFrostedIce;
Block const* mFurnace;
Block const* mGildedBlackstone;
Block const* mGlass;
Block const* mGlassPane;
Block const* mGlowItemFrame;
Block const* mGlowLichen;
Block const* mGlowingobsidian;
Block const* mGlowstone;
Block const* mGoldBlock;
Block const* mGoldOre;
Block const* mGoldenRail;
Block const* mGraniteStairs;
Block const* mGrass;
Block const* mGrassPath;
Block const* mGravel;
Block const* mGrayCandle;
Block const* mGrayCandleCake;
Block const* mGrayGlazedTerracotta;
Block const* mGreenCandle;
Block const* mGreenCandleCake;
Block const* mGreenGlazedTerracotta;
Block const* mGrindstone;
Block const* mHangingRoots;
Block const* mHardGlass;
Block const* mHardGlassPane;
Block const* mHardStainedGlass;
Block const* mHardStainedGlassPane;
Block const* mHardenedClay;
Block const* mHayBlock;
Block const* mHeavyWeightedPressurePlate;
Block const* mHoneyBlock;
Block const* mHoneycombBlock;
Block const* mHopper;
Block const* mIce;
Block const* mInfestedDeepslate;
Block const* mInfoUpdate;
Block const* mInfoUpdate2;
Block const* mInvisibleBedrock;
Block const* mIronBars;
Block const* mIronBlock;
Block const* mIronDoor;
Block const* mIronOre;
Block const* mIronTrapdoor;
Block const* mItemFrame;
Block const* mJigsaw;
Block const* mJukebox;
Block const* mJungleButton;
Block const* mJungleDoor;
Block const* mJungleFenceGate;
Block const* mJunglePressurePlate;
Block const* mJungleStairs;
Block const* mJungleStandingSign;
Block const* mJungleTrapdoor;
Block const* mJungleWallSign;
Block const* mKelp;
Block const* mLadder;
Block const* mLantern;
Block const* mLapisBlock;
Block const* mLapisOre;
Block const* mLargeAmethystBud;
Block const* mLava;
Block const* mLavaCauldron;
Block const* mLeaves;
Block const* mLeaves2;
Block const* mLectern;
Block const* mLever;
Block const* mLightBlock;
Block const* mLightBlueCandle;
Block const* mLightBlueCandleCake;
Block const* mLightBlueGlazedTerracotta;
Block const* mLightGrayCandle;
Block const* mLightGrayCandleCake;
Block const* mLightWeightedPressurePlate;
Block const* mLightningRod;
Block const* mLimeCandle;
Block const* mLimeCandleCake;
Block const* mLimeGlazedTerracotta;
Block const* mLitBlastFurnace;
Block const* mLitDeepslateRedstoneOre;
Block const* mLitFurnace;
Block const* mLitPumpkin;
Block const* mLitRedstoneLamp;
Block const* mLitRedstoneOre;
Block const* mLitSmoker;
Block const* mLodestone;
Block const* mLog;
Block const* mLog2;
Block const* mLoom;
Block const* mMagentaCandle;
Block const* mMagentaCandleCake;
Block const* mMagentaGlazedTerracotta;
Block const* mMagma;
Block const* mMangroveButton;
Block const* mMangroveDoor;
Block const* mMangroveDoubleSlab;
Block const* mMangroveFence;
Block const* mMangroveFenceGate;
Block const* mMangroveLeaves;
Block const* mMangroveLog;
Block const* mMangrovePlanks;
Block const* mMangrovePressurePlate;
Block const* mMangrovePropagule;
Block const* mMangroveRoots;
Block const* mMangroveSlab;
Block const* mMangroveStairs;
Block const* mMangroveStandingSign;
Block const* mMangroveTrapdoor;
Block const* mMangroveWallSign;
Block const* mMangroveWood;
Block const* mMediumAmethystBud;
Block const* mMelonBlock;
Block const* mMelonStem;
Block const* mMobSpawner;
Block const* mMonsterEgg;
Block const* mMossBlock;
Block const* mMossCarpet;
Block const* mMossyCobblestone;
Block const* mMossyCobblestoneStairs;
Block const* mMossyStoneBrickStairs;
Block const* mMovingBlock;
Block const* mMud;
Block const* mMudBrickDoubleSlab;
Block const* mMudBrickSlab;
Block const* mMudBrickStairs;
Block const* mMudBrickWall;
Block const* mMudBricks;
Block const* mMuddyMangroveRoots;
Block const* mMycelium;
Block const* mMysteriousFrame;
Block const* mMysteriousFrameSlot;
Block const* mNetherBrickBlockName;
Block const* mNetherBrickFence;
Block const* mNetherBrickStairs;
Block const* mNetherGoldOre;
Block const* mNetherSprouts;
Block const* mNetherWart;
Block const* mNetherWartBlock;
Block const* mNetheriteBlock;
Block const* mNetherrack;
Block const* mNetherreactor;
Block const* mNormalStoneStairs;
Block const* mNoteblock;
Block const* mOakStairs;
Block const* mObserver;
Block const* mObsidian;
Block const* mOchreFroglight;
Block const* mOrangeCandle;
Block const* mOrangeCandleCake;
Block const* mOrangeGlazedTerracotta;
Block const* mOxidizedCopper;
Block const* mOxidizedCutCopper;
Block const* mOxidizedCutCopperSlab;
Block const* mOxidizedCutCopperStairs;
Block const* mOxidizedDoubleCutCopperSlab;
Block const* mPackedIce;
Block const* mPackedMud;
Block const* mPearlescentFroglight;
Block const* mPinkCandle;
Block const* mPinkCandleCake;
Block const* mPinkGlazedTerracotta;
Block const* mPiston;
Block const* mPistonArmCollision;
Block const* mPlanks;
Block const* mPodzol;
Block const* mPointedDripstone;
Block const* mPolishedAndesiteStairs;
Block const* mPolishedBasalt;
Block const* mPolishedBlackstone;
Block const* mPolishedBlackstoneBrickDoubleSlab;
Block const* mPolishedBlackstoneBrickSlab;
Block const* mPolishedBlackstoneBrickStairs;
Block const* mPolishedBlackstoneBrickWall;
Block const* mPolishedBlackstoneBricks;
Block const* mPolishedBlackstoneButton;
Block const* mPolishedBlackstoneDoubleSlab;
Block const* mPolishedBlackstonePressurePlate;
Block const* mPolishedBlackstoneSlab;
Block const* mPolishedBlackstoneStairs;
Block const* mPolishedBlackstoneWall;
Block const* mPolishedDeepslate;
Block const* mPolishedDeepslateDoubleSlab;
Block const* mPolishedDeepslateSlab;
Block const* mPolishedDeepslateStairs;
Block const* mPolishedDeepslateWall;
Block const* mPolishedDioriteStairs;
Block const* mPolishedGraniteStairs;
Block const* mPortal;
Block const* mPotatoes;
Block const* mPowderSnow;
Block const* mPoweredComparator;
Block const* mPoweredRepeater;
Block const* mPrismarine;
Block const* mPrismarineBricksStairs;
Block const* mPrismarineStairs;
Block const* mPumpkin;
Block const* mPumpkinStem;
Block const* mPurpleCandle;
Block const* mPurpleCandleCake;
Block const* mPurpleGlazedTerracotta;
Block const* mPurpurBlock;
Block const* mPurpurStairs;
Block const* mQuartzBlock;
Block const* mQuartzBricks;
Block const* mQuartzOre;
Block const* mQuartzStairs;
Block const* mRail;
Block const* mRawCopperBlock;
Block const* mRawGoldBlock;
Block const* mRawIronBlock;
Block const* mRedCandle;
Block const* mRedCandleCake;
Block const* mRedFlower;
Block const* mRedGlazedTerracotta;
Block const* mRedMushroom;
Block const* mRedMushroomBlock;
Block const* mRedNetherBrick;
Block const* mRedNetherBrickStairs;
Block const* mRedSandstone;
Block const* mRedSandstoneStairs;
Block const* mRedstoneBlock;
Block const* mRedstoneLamp;
Block const* mRedstoneOre;
Block const* mRedstoneTorch;
Block const* mRedstoneWire;
Block const* mReeds;
Block const* mReinforcedDeepslate;
Block const* mRepeatingCommandBlock;
Block const* mReserved6;
Block const* mRespawnAnchor;
Block const* mSand;
Block const* mSandstone;
Block const* mSandstoneStairs;
Block const* mSapling;
Block const* mScaffolding;
Block const* mSculk;
Block const* mSculkCatalyst;
Block const* mSculkSensor;
Block const* mSculkShrieker;
Block const* mSculkVein;
Block const* mSeaLantern;
Block const* mSeaPickle;
Block const* mSeagrass;
Block const* mShroomlight;
Block const* mShulkerBox;
Block const* mSilverGlazedTerracotta;
Block const* mSkull;
Block const* mSlimeBlock;
Block const* mSmallAmethystBud;
Block const* mSmallDripleaf;
Block const* mSmithingTable;
Block const* mSmoker;
Block const* mSmoothBasalt;
Block const* mSmoothQuartzStairs;
Block const* mSmoothRedSandstoneStairs;
Block const* mSmoothSandstoneStairs;
Block const* mSmoothStone;
Block const* mSnow;
Block const* mSnowLayer;
Block const* mSoulCampfire;
Block const* mSoulFire;
Block const* mSoulLantern;
Block const* mSoulSand;
Block const* mSoulSoil;
Block const* mSoulTorch;
Block const* mSponge;
Block const* mSporeBlossom;
Block const* mSpruceButton;
Block const* mSpruceDoor;
Block const* mSpruceFenceGate;
Block const* mSprucePressurePlate;
Block const* mSpruceStairs;
Block const* mSpruceStandingSign;
Block const* mSpruceTrapdoor;
Block const* mSpruceWallSign;
Block const* mStainedGlass;
Block const* mStainedGlassPane;
Block const* mStainedHardenedClay;
Block const* mStandingBanner;
Block const* mStandingSign;
Block const* mStickyPiston;
Block const* mStickyPistonArmCollision;
Block const* mStone;
Block const* mStoneBrickStairs;
Block const* mStoneBricks;
Block const* mStoneButton;
Block const* mStonePressurePlate;
Block const* mStoneSlab;
Block const* mStoneSlab2;
Block const* mStoneSlab3;
Block const* mStoneSlab4;
Block const* mStoneStairs;
Block const* mStonecutter;
Block const* mStonecutterBlock;
Block const* mStrippedAcaciaLog;
Block const* mStrippedBirchLog;
Block const* mStrippedCrimsonHyphae;
Block const* mStrippedCrimsonStem;
Block const* mStrippedDarkOakLog;
Block const* mStrippedJungleLog;
Block const* mStrippedMangroveLog;
Block const* mStrippedMangroveWood;
Block const* mStrippedOakLog;
Block const* mStrippedSpruceLog;
Block const* mStrippedWarpedHyphae;
Block const* mStrippedWarpedStem;
Block const* mStructureBlock;
Block const* mStructureVoid;
Block const* mSweetBerryBush;
Block const* mTallGrass;
Block const* mTarget;
Block const* mTintedGlass;
Block const* mTnt;
Block const* mTorch;
Block const* mTrapdoor;
Block const* mTrappedChest;
Block const* mTripWire;
Block const* mTripWireHook;
Block const* mTuff;
Block const* mTurtleEgg;
Block const* mTwistingVines;
Block const* mUnderwaterTorch;
Block const* mUndyedShulkerBox;
Block const* mUnlitRedstoneTorch;
Block const* mUnpoweredComparator;
Block const* mUnpoweredRepeater;
Block const* mVerdantFroglight;
Block const* mVine;
Block const* mWallBanner;
Block const* mWallSign;
Block const* mWarpedButton;
Block const* mWarpedDoor;
Block const* mWarpedDoubleSlab;
Block const* mWarpedFence;
Block const* mWarpedFenceGate;
Block const* mWarpedFungus;
Block const* mWarpedHyphae;
Block const* mWarpedNylium;
Block const* mWarpedPlanks;
Block const* mWarpedPressurePlate;
Block const* mWarpedRoots;
Block const* mWarpedSlab;
Block const* mWarpedStairs;
Block const* mWarpedStandingSign;
Block const* mWarpedStem;
Block const* mWarpedTrapdoor;
Block const* mWarpedWallSign;
Block const* mWarpedWartBlock;
Block const* mWater;
Block const* mWaterLily;
Block const* mWaxedCopper;
Block const* mWaxedCutCopper;
Block const* mWaxedCutCopperSlab;
Block const* mWaxedCutCopperStairs;
Block const* mWaxedDoubleCutCopperSlab;
Block const* mWaxedExposedCopper;
Block const* mWaxedExposedCutCopper;
Block const* mWaxedExposedCutCopperSlab;
Block const* mWaxedExposedCutCopperStairs;
Block const* mWaxedExposedDoubleCutCopperSlab;
Block const* mWaxedOxidizedCopper;
Block const* mWaxedOxidizedCutCopper;
Block const* mWaxedOxidizedCutCopperSlab;
Block const* mWaxedOxidizedCutCopperStairs;
Block const* mWaxedOxidizedDoubleCutCopperSlab;
Block const* mWaxedWeatheredCopper;
Block const* mWaxedWeatheredCutCopper;
Block const* mWaxedWeatheredCutCopperSlab;
Block const* mWaxedWeatheredCutCopperStairs;
Block const* mWaxedWeatheredDoubleCutCopperSlab;
Block const* mWeatheredCopper;
Block const* mWeatheredCutCopper;
Block const* mWeatheredCutCopperSlab;
Block const* mWeatheredCutCopperStairs;
Block const* mWeatheredDoubleCutCopperSlab;
Block const* mWeb;
Block const* mWeepingVines;
Block const* mWheat;
Block const* mWhiteCandle;
Block const* mWhiteCandleCake;
Block const* mWhiteGlazedTerracotta;
Block const* mWitherRose;
Block const* mWood;
Block const* mWoodenButton;
Block const* mWoodenDoor;
Block const* mWoodenPressurePlate;
Block const* mWoodenSlab;
Block const* mWool;
Block const* mYellowCandle;
Block const* mYellowCandleCake;
Block const* mYellowFlower;
Block const* mYellowGlazedTerracotta;

void assignBlocks() {
    mAcaciaButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AcaciaButton, true);
    mAcaciaDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AcaciaDoor, true);
    mAcaciaFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AcaciaFenceGate, true);
    mAcaciaPressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AcaciaPressurePlate, true);
    mAcaciaStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AcaciaStairs, true);
    mAcaciaStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AcaciaStandingSign, true);
    mAcaciaTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AcaciaTrapdoor, true);
    mAcaciaWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AcaciaWallSign, true);
    mActivatorRail = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ActivatorRail, true);
    mAllow = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Allow, true);
    mAmethystBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AmethystBlock, true);
    mAmethystCluster = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AmethystCluster, true);
    mAncientDebris = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AncientDebris, true);
    mAndesiteStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AndesiteStairs, true);
    mAnvil = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Anvil, true);
    mAzalea = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Azalea, true);
    mAzaleaLeaves = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AzaleaLeaves, true);
    mAzaleaLeavesFlowered = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::AzaleaLeavesFlowered, true);
    mBamboo = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Bamboo, true);
    mBambooSapling = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BambooSapling, true);
    mBarrel = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Barrel, true);
    mBarrier = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Barrier, true);
    mBasalt = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Basalt, true);
    mBeacon = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Beacon, true);
    mBed = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Bed, true);
    mBedrock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Bedrock, true);
    mBeeNest = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BeeNest, true);
    mBeehive = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Beehive, true);
    mBeetroot = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Beetroot, true);
    mBell = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Bell, true);
    mBigDripleaf = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BigDripleaf, true);
    mBirchButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BirchButton, true);
    mBirchDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BirchDoor, true);
    mBirchFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BirchFenceGate, true);
    mBirchPressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BirchPressurePlate, true);
    mBirchStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BirchStairs, true);
    mBirchStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BirchStandingSign, true);
    mBirchTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BirchTrapdoor, true);
    mBirchWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BirchWallSign, true);
    mBlackCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlackCandle, true);
    mBlackCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlackCandleCake, true);
    mBlackGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlackGlazedTerracotta, true);
    mBlackstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Blackstone, true);
    mBlackstoneDoubleSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlackstoneDoubleSlab, true);
    mBlackstoneSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlackstoneSlab, true);
    mBlackstoneStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlackstoneStairs, true);
    mBlackstoneWall = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlackstoneWall, true);
    mBlastFurnace = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlastFurnace, true);
    mBlueCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlueCandle, true);
    mBlueCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlueCandleCake, true);
    mBlueGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlueGlazedTerracotta, true);
    mBlueIce = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BlueIce, true);
    mBoneBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BoneBlock, true);
    mBookshelf = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Bookshelf, true);
    mBorderBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BorderBlock, true);
    mBrewingStand = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BrewingStand, true);
    mBrickBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BrickBlock, true);
    mBrickStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BrickStairs, true);
    mBrownCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BrownCandle, true);
    mBrownCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BrownCandleCake, true);
    mBrownGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BrownGlazedTerracotta, true);
    mBrownMushroom = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BrownMushroom, true);
    mBrownMushroomBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BrownMushroomBlock, true);
    mBubbleColumn = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BubbleColumn, true);
    mBuddingAmethyst = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::BuddingAmethyst, true);
    mCactus = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Cactus, true);
    mCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Cake, true);
    mCalcite = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Calcite, true);
    mCamera = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Camera, true);
    mCampFire = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CampFire, true);
    mCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Candle, true);
    mCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CandleCake, true);
    mCarpet = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Carpet, true);
    mCarrots = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Carrots, true);
    mCartographyTable = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CartographyTable, true);
    mCarvedPumpkin = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CarvedPumpkin, true);
    mCauldron = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Cauldron, true);
    mCaveVines = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CaveVines, true);
    mCaveVinesBodyWithBerries =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CaveVinesBodyWithBerries, true);
    mCaveVinesHeadWithBerries =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CaveVinesHeadWithBerries, true);
    mChain = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Chain, true);
    mChainCommandBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ChainCommandBlock, true);
    mChalkboard = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Chalkboard, true);
    mChemicalHeat = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ChemicalHeat, true);
    mChemistryTable = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ChemistryTable, true);
    mChest = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Chest, true);
    mChiseledDeepslate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ChiseledDeepslate, true);
    mChiseledNetherBricks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ChiseledNetherBricks, true);
    mChiseledPolishedBlackstone =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ChiseledPolishedBlackstone, true);
    mChorusFlower = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ChorusFlower, true);
    mChorusPlant = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ChorusPlant, true);
    mClay = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Clay, true);
    mClientRequestPlaceholderBlock =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ClientRequestPlaceholderBlock, true);
    mCoalBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CoalBlock, true);
    mCoalOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CoalOre, true);
    mCobbledDeepslate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CobbledDeepslate, true);
    mCobbledDeepslateDoubleSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CobbledDeepslateDoubleSlab, true);
    mCobbledDeepslateSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CobbledDeepslateSlab, true);
    mCobbledDeepslateStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CobbledDeepslateStairs, true);
    mCobbledDeepslateWall = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CobbledDeepslateWall, true);
    mCobblestone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Cobblestone, true);
    mCobblestoneWall = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CobblestoneWall, true);
    mCocoa = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Cocoa, true);
    mColoredTorchBp = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ColoredTorchBp, true);
    mColoredTorchRg = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ColoredTorchRg, true);
    mCommandBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CommandBlock, true);
    mComposter = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Composter, true);
    mConcrete = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Concrete, true);
    mConcretePowder = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ConcretePowder, true);
    mConduit = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Conduit, true);
    mCopperBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CopperBlock, true);
    mCopperOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CopperOre, true);
    mCoral = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Coral, true);
    mCoralBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CoralBlock, true);
    mCoralFan = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CoralFan, true);
    mCoralFanDead = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CoralFanDead, true);
    mCoralFanHang = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CoralFanHang, true);
    mCoralFanHang2 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CoralFanHang2, true);
    mCoralFanHang3 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CoralFanHang3, true);
    mCrackedDeepslateBricks =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrackedDeepslateBricks, true);
    mCrackedDeepslateTiles = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrackedDeepslateTiles, true);
    mCrackedNetherBricks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrackedNetherBricks, true);
    mCrackedPolishedBlackstoneBricks =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrackedPolishedBlackstoneBricks, true);
    mCraftingTable = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CraftingTable, true);
    mCrimsonButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonButton, true);
    mCrimsonDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonDoor, true);
    mCrimsonDoubleSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonDoubleSlab, true);
    mCrimsonFence = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonFence, true);
    mCrimsonFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonFenceGate, true);
    mCrimsonFungus = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonFungus, true);
    mCrimsonHyphae = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonHyphae, true);
    mCrimsonNylium = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonNylium, true);
    mCrimsonPlanks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonPlanks, true);
    mCrimsonPressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonPressurePlate, true);
    mCrimsonRoots = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonRoots, true);
    mCrimsonSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonSlab, true);
    mCrimsonStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonStairs, true);
    mCrimsonStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonStandingSign, true);
    mCrimsonStem = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonStem, true);
    mCrimsonTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonTrapdoor, true);
    mCrimsonWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CrimsonWallSign, true);
    mCryingObsidian = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CryingObsidian, true);
    mCutCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CutCopper, true);
    mCutCopperSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CutCopperSlab, true);
    mCutCopperStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CutCopperStairs, true);
    mCyanCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CyanCandle, true);
    mCyanCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CyanCandleCake, true);
    mCyanGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::CyanGlazedTerracotta, true);
    mDarkOakButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkOakButton, true);
    mDarkOakDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkOakDoor, true);
    mDarkOakFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkOakFenceGate, true);
    mDarkOakPressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkOakPressurePlate, true);
    mDarkOakStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkOakStairs, true);
    mDarkOakTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkOakTrapdoor, true);
    mDarkPrismarineStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkPrismarineStairs, true);
    mDarkoakStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkoakStandingSign, true);
    mDarkoakWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DarkoakWallSign, true);
    mDaylightDetector = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DaylightDetector, true);
    mDaylightDetectorInverted =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DaylightDetectorInverted, true);
    mDeadbush = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Deadbush, true);
    mDeepslate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Deepslate, true);
    mDeepslateBrickDoubleSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateBrickDoubleSlab, true);
    mDeepslateBrickSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateBrickSlab, true);
    mDeepslateBrickStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateBrickStairs, true);
    mDeepslateBrickWall = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateBrickWall, true);
    mDeepslateBricks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateBricks, true);
    mDeepslateCoalOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateCoalOre, true);
    mDeepslateCopperOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateCopperOre, true);
    mDeepslateDiamondOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateDiamondOre, true);
    mDeepslateEmeraldOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateEmeraldOre, true);
    mDeepslateGoldOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateGoldOre, true);
    mDeepslateIronOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateIronOre, true);
    mDeepslateLapisOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateLapisOre, true);
    mDeepslateRedstoneOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateRedstoneOre, true);
    mDeepslateTileDoubleSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateTileDoubleSlab, true);
    mDeepslateTileSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateTileSlab, true);
    mDeepslateTileStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateTileStairs, true);
    mDeepslateTileWall = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateTileWall, true);
    mDeepslateTiles = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DeepslateTiles, true);
    mDeny = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Deny, true);
    mDetectorRail = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DetectorRail, true);
    mDiamondBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DiamondBlock, true);
    mDiamondOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DiamondOre, true);
    mDioriteStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DioriteStairs, true);
    mDirt = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Dirt, true);
    mDirtWithRoots = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DirtWithRoots, true);
    mDispenser = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Dispenser, true);
    mDoubleCutCopperSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DoubleCutCopperSlab, true);
    mDoublePlant = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DoublePlant, true);
    mDoubleStoneSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DoubleStoneSlab, true);
    mDoubleStoneSlab2 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DoubleStoneSlab2, true);
    mDoubleStoneSlab3 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DoubleStoneSlab3, true);
    mDoubleStoneSlab4 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DoubleStoneSlab4, true);
    mDoubleWoodenSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DoubleWoodenSlab, true);
    mDragonEgg = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DragonEgg, true);
    mDriedKelpBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::DriedKelpBlock, true);
    mDripstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Dripstone, true);
    mDropper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Dropper, true);
    for (int i = 0; i < 119; ++i) {
        mElements[i] = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Elements[i], true);
    }
    mEmeraldBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EmeraldBlock, true);
    mEmeraldOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EmeraldOre, true);
    mEnchantingTable = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EnchantingTable, true);
    mEndBrickStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EndBrickStairs, true);
    mEndBricks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EndBricks, true);
    mEndGateway = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EndGateway, true);
    mEndPortal = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EndPortal, true);
    mEndPortalFrame = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EndPortalFrame, true);
    mEndRod = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EndRod, true);
    mEndStone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EndStone, true);
    mEnderChest = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::EnderChest, true);
    mExposedCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ExposedCopper, true);
    mExposedCutCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ExposedCutCopper, true);
    mExposedCutCopperSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ExposedCutCopperSlab, true);
    mExposedCutCopperStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ExposedCutCopperStairs, true);
    mExposedDoubleCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ExposedDoubleCutCopperSlab, true);
    mFarmlandBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FarmlandBlock, true);
    mFence = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Fence, true);
    mFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FenceGate, true);
    mFire = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Fire, true);
    mFletchingTable = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FletchingTable, true);
    mFlowerPot = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FlowerPot, true);
    mFloweringAzalea = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FloweringAzalea, true);
    mFlowingLava = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FlowingLava, true);
    mFlowingWater = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FlowingWater, true);
    mFrogSpawn = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FrogSpawn, true);
    mFrostedIce = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::FrostedIce, true);
    mFurnace = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Furnace, true);
    mGildedBlackstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GildedBlackstone, true);
    mGlass = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Glass, true);
    mGlassPane = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GlassPane, true);
    mGlowItemFrame = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GlowItemFrame, true);
    mGlowLichen = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GlowLichen, true);
    mGlowingobsidian = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Glowingobsidian, true);
    mGlowstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Glowstone, true);
    mGoldBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GoldBlock, true);
    mGoldOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GoldOre, true);
    mGoldenRail = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GoldenRail, true);
    mGraniteStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GraniteStairs, true);
    mGrass = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Grass, true);
    mGrassPath = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GrassPath, true);
    mGravel = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Gravel, true);
    mGrayCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GrayCandle, true);
    mGrayCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GrayCandleCake, true);
    mGrayGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GrayGlazedTerracotta, true);
    mGreenCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GreenCandle, true);
    mGreenCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GreenCandleCake, true);
    mGreenGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::GreenGlazedTerracotta, true);
    mGrindstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Grindstone, true);
    mHangingRoots = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HangingRoots, true);
    mHardGlass = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HardGlass, true);
    mHardGlassPane = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HardGlassPane, true);
    mHardStainedGlass = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HardStainedGlass, true);
    mHardStainedGlassPane = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HardStainedGlassPane, true);
    mHardenedClay = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HardenedClay, true);
    mHayBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HayBlock, true);
    mHeavyWeightedPressurePlate =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HeavyWeightedPressurePlate, true);
    mHoneyBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HoneyBlock, true);
    mHoneycombBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::HoneycombBlock, true);
    mHopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Hopper, true);
    mIce = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Ice, true);
    mInfestedDeepslate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::InfestedDeepslate, true);
    mInfoUpdate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::InfoUpdate, true);
    mInfoUpdate2 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::InfoUpdate2, true);
    mInvisibleBedrock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::InvisibleBedrock, true);
    mIronBars = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::IronBars, true);
    mIronBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::IronBlock, true);
    mIronDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::IronDoor, true);
    mIronOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::IronOre, true);
    mIronTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::IronTrapdoor, true);
    mItemFrame = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ItemFrame, true);
    mJigsaw = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Jigsaw, true);
    mJukebox = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Jukebox, true);
    mJungleButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::JungleButton, true);
    mJungleDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::JungleDoor, true);
    mJungleFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::JungleFenceGate, true);
    mJunglePressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::JunglePressurePlate, true);
    mJungleStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::JungleStairs, true);
    mJungleStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::JungleStandingSign, true);
    mJungleTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::JungleTrapdoor, true);
    mJungleWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::JungleWallSign, true);
    mKelp = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Kelp, true);
    mLadder = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Ladder, true);
    mLantern = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Lantern, true);
    mLapisBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LapisBlock, true);
    mLapisOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LapisOre, true);
    mLargeAmethystBud = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LargeAmethystBud, true);
    mLava = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Lava, true);
    mLavaCauldron = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LavaCauldron, true);
    mLeaves = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Leaves, true);
    mLeaves2 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Leaves2, true);
    mLectern = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Lectern, true);
    mLever = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Lever, true);
    mLightBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LightBlock, true);
    mLightBlueCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LightBlueCandle, true);
    mLightBlueCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LightBlueCandleCake, true);
    mLightBlueGlazedTerracotta =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LightBlueGlazedTerracotta, true);
    mLightGrayCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LightGrayCandle, true);
    mLightGrayCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LightGrayCandleCake, true);
    mLightWeightedPressurePlate =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LightWeightedPressurePlate, true);
    mLightningRod = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LightningRod, true);
    mLimeCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LimeCandle, true);
    mLimeCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LimeCandleCake, true);
    mLimeGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LimeGlazedTerracotta, true);
    mLitBlastFurnace = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LitBlastFurnace, true);
    mLitDeepslateRedstoneOre =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LitDeepslateRedstoneOre, true);
    mLitFurnace = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LitFurnace, true);
    mLitPumpkin = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LitPumpkin, true);
    mLitRedstoneLamp = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LitRedstoneLamp, true);
    mLitRedstoneOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LitRedstoneOre, true);
    mLitSmoker = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::LitSmoker, true);
    mLodestone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Lodestone, true);
    mLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Log, true);
    mLog2 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Log2, true);
    mLoom = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Loom, true);
    mMagentaCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MagentaCandle, true);
    mMagentaCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MagentaCandleCake, true);
    mMagentaGlazedTerracotta =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MagentaGlazedTerracotta, true);
    mMagma = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Magma, true);
    mMangroveButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveButton, true);
    mMangroveDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveDoor, true);
    mMangroveDoubleSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveDoubleSlab, true);
    mMangroveFence = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveFence, true);
    mMangroveFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveFenceGate, true);
    mMangroveLeaves = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveLeaves, true);
    mMangroveLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveLog, true);
    mMangrovePlanks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangrovePlanks, true);
    mMangrovePressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangrovePressurePlate, true);
    mMangrovePropagule = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangrovePropagule, true);
    mMangroveRoots = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveRoots, true);
    mMangroveSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveSlab, true);
    mMangroveStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveStairs, true);
    mMangroveStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveStandingSign, true);
    mMangroveTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveTrapdoor, true);
    mMangroveWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveWallSign, true);
    mMangroveWood = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MangroveWood, true);
    mMediumAmethystBud = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MediumAmethystBud, true);
    mMelonBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MelonBlock, true);
    mMelonStem = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MelonStem, true);
    mMobSpawner = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MobSpawner, true);
    mMonsterEgg = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MonsterEgg, true);
    mMossBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MossBlock, true);
    mMossCarpet = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MossCarpet, true);
    mMossyCobblestone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MossyCobblestone, true);
    mMossyCobblestoneStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MossyCobblestoneStairs, true);
    mMossyStoneBrickStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MossyStoneBrickStairs, true);
    mMovingBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MovingBlock, true);
    mMud = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Mud, true);
    mMudBrickDoubleSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MudBrickDoubleSlab, true);
    mMudBrickSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MudBrickSlab, true);
    mMudBrickStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MudBrickStairs, true);
    mMudBrickWall = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MudBrickWall, true);
    mMudBricks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MudBricks, true);
    mMuddyMangroveRoots = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MuddyMangroveRoots, true);
    mMycelium = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Mycelium, true);
    mMysteriousFrame = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MysteriousFrame, true);
    mMysteriousFrameSlot = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::MysteriousFrameSlot, true);
    mNetherBrickBlockName = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NetherBrickBlockName, true);
    mNetherBrickFence = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NetherBrickFence, true);
    mNetherBrickStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NetherBrickStairs, true);
    mNetherGoldOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NetherGoldOre, true);
    mNetherSprouts = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NetherSprouts, true);
    mNetherWart = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NetherWart, true);
    mNetherWartBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NetherWartBlock, true);
    mNetheriteBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NetheriteBlock, true);
    mNetherrack = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Netherrack, true);
    mNetherreactor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Netherreactor, true);
    mNormalStoneStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::NormalStoneStairs, true);
    mNoteblock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Noteblock, true);
    mOakStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OakStairs, true);
    mObserver = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Observer, true);
    mObsidian = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Obsidian, true);
    mOchreFroglight = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OchreFroglight, true);
    mOrangeCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OrangeCandle, true);
    mOrangeCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OrangeCandleCake, true);
    mOrangeGlazedTerracotta =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OrangeGlazedTerracotta, true);
    mOxidizedCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OxidizedCopper, true);
    mOxidizedCutCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OxidizedCutCopper, true);
    mOxidizedCutCopperSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OxidizedCutCopperSlab, true);
    mOxidizedCutCopperStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OxidizedCutCopperStairs, true);
    mOxidizedDoubleCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::OxidizedDoubleCutCopperSlab, true);
    mPackedIce = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PackedIce, true);
    mPackedMud = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PackedMud, true);
    mPearlescentFroglight = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PearlescentFroglight, true);
    mPinkCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PinkCandle, true);
    mPinkCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PinkCandleCake, true);
    mPinkGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PinkGlazedTerracotta, true);
    mPiston = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Piston, true);
    mPistonArmCollision = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PistonArmCollision, true);
    mPlanks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Planks, true);
    mPodzol = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Podzol, true);
    mPointedDripstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PointedDripstone, true);
    mPolishedAndesiteStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedAndesiteStairs, true);
    mPolishedBasalt = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBasalt, true);
    mPolishedBlackstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstone, true);
    mPolishedBlackstoneBrickDoubleSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneBrickDoubleSlab, true);
    mPolishedBlackstoneBrickSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneBrickSlab, true);
    mPolishedBlackstoneBrickStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneBrickStairs, true);
    mPolishedBlackstoneBrickWall =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneBrickWall, true);
    mPolishedBlackstoneBricks =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneBricks, true);
    mPolishedBlackstoneButton =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneButton, true);
    mPolishedBlackstoneDoubleSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneDoubleSlab, true);
    mPolishedBlackstonePressurePlate =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstonePressurePlate, true);
    mPolishedBlackstoneSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneSlab, true);
    mPolishedBlackstoneStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneStairs, true);
    mPolishedBlackstoneWall =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedBlackstoneWall, true);
    mPolishedDeepslate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedDeepslate, true);
    mPolishedDeepslateDoubleSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedDeepslateDoubleSlab, true);
    mPolishedDeepslateSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedDeepslateSlab, true);
    mPolishedDeepslateStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedDeepslateStairs, true);
    mPolishedDeepslateWall = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedDeepslateWall, true);
    mPolishedDioriteStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedDioriteStairs, true);
    mPolishedGraniteStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PolishedGraniteStairs, true);
    mPortal = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Portal, true);
    mPotatoes = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Potatoes, true);
    mPowderSnow = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PowderSnow, true);
    mPoweredComparator = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PoweredComparator, true);
    mPoweredRepeater = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PoweredRepeater, true);
    mPrismarine = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Prismarine, true);
    mPrismarineBricksStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PrismarineBricksStairs, true);
    mPrismarineStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PrismarineStairs, true);
    mPumpkin = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Pumpkin, true);
    mPumpkinStem = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PumpkinStem, true);
    mPurpleCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PurpleCandle, true);
    mPurpleCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PurpleCandleCake, true);
    mPurpleGlazedTerracotta =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PurpleGlazedTerracotta, true);
    mPurpurBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PurpurBlock, true);
    mPurpurStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::PurpurStairs, true);
    mQuartzBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::QuartzBlock, true);
    mQuartzBricks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::QuartzBricks, true);
    mQuartzOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::QuartzOre, true);
    mQuartzStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::QuartzStairs, true);
    mRail = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Rail, true);
    mRawCopperBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RawCopperBlock, true);
    mRawGoldBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RawGoldBlock, true);
    mRawIronBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RawIronBlock, true);
    mRedCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedCandle, true);
    mRedCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedCandleCake, true);
    mRedFlower = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedFlower, true);
    mRedGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedGlazedTerracotta, true);
    mRedMushroom = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedMushroom, true);
    mRedMushroomBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedMushroomBlock, true);
    mRedNetherBrick = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedNetherBrick, true);
    mRedNetherBrickStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedNetherBrickStairs, true);
    mRedSandstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedSandstone, true);
    mRedSandstoneStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedSandstoneStairs, true);
    mRedstoneBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedstoneBlock, true);
    mRedstoneLamp = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedstoneLamp, true);
    mRedstoneOre = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedstoneOre, true);
    mRedstoneTorch = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedstoneTorch, true);
    mRedstoneWire = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RedstoneWire, true);
    mReeds = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Reeds, true);
    mReinforcedDeepslate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ReinforcedDeepslate, true);
    mRepeatingCommandBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RepeatingCommandBlock, true);
    mReserved6 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Reserved6, true);
    mRespawnAnchor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::RespawnAnchor, true);
    mSand = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Sand, true);
    mSandstone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Sandstone, true);
    mSandstoneStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SandstoneStairs, true);
    mSapling = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Sapling, true);
    mScaffolding = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Scaffolding, true);
    mSculk = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Sculk, true);
    mSculkCatalyst = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SculkCatalyst, true);
    mSculkSensor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SculkSensor, true);
    mSculkShrieker = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SculkShrieker, true);
    mSculkVein = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SculkVein, true);
    mSeaLantern = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SeaLantern, true);
    mSeaPickle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SeaPickle, true);
    mSeagrass = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Seagrass, true);
    mShroomlight = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Shroomlight, true);
    mShulkerBox = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::ShulkerBox, true);
    mSilverGlazedTerracotta =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SilverGlazedTerracotta, true);
    mSkull = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Skull, true);
    mSlimeBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SlimeBlock, true);
    mSmallAmethystBud = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SmallAmethystBud, true);
    mSmallDripleaf = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SmallDripleaf, true);
    mSmithingTable = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SmithingTable, true);
    mSmoker = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Smoker, true);
    mSmoothBasalt = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SmoothBasalt, true);
    mSmoothQuartzStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SmoothQuartzStairs, true);
    mSmoothRedSandstoneStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SmoothRedSandstoneStairs, true);
    mSmoothSandstoneStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SmoothSandstoneStairs, true);
    mSmoothStone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SmoothStone, true);
    mSnow = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Snow, true);
    mSnowLayer = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SnowLayer, true);
    mSoulCampfire = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SoulCampfire, true);
    mSoulFire = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SoulFire, true);
    mSoulLantern = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SoulLantern, true);
    mSoulSand = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SoulSand, true);
    mSoulSoil = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SoulSoil, true);
    mSoulTorch = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SoulTorch, true);
    mSponge = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Sponge, true);
    mSporeBlossom = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SporeBlossom, true);
    mSpruceButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SpruceButton, true);
    mSpruceDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SpruceDoor, true);
    mSpruceFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SpruceFenceGate, true);
    mSprucePressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SprucePressurePlate, true);
    mSpruceStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SpruceStairs, true);
    mSpruceStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SpruceStandingSign, true);
    mSpruceTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SpruceTrapdoor, true);
    mSpruceWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SpruceWallSign, true);
    mStainedGlass = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StainedGlass, true);
    mStainedGlassPane = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StainedGlassPane, true);
    mStainedHardenedClay = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StainedHardenedClay, true);
    mStandingBanner = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StandingBanner, true);
    mStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StandingSign, true);
    mStickyPiston = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StickyPiston, true);
    mStickyPistonArmCollision =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StickyPistonArmCollision, true);
    mStone = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Stone, true);
    mStoneBrickStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StoneBrickStairs, true);
    mStoneBricks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StoneBricks, true);
    mStoneButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StoneButton, true);
    mStonePressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StonePressurePlate, true);
    mStoneSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StoneSlab, true);
    mStoneSlab2 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StoneSlab2, true);
    mStoneSlab3 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StoneSlab3, true);
    mStoneSlab4 = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StoneSlab4, true);
    mStoneStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StoneStairs, true);
    mStonecutter = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Stonecutter, true);
    mStonecutterBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StonecutterBlock, true);
    mStrippedAcaciaLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedAcaciaLog, true);
    mStrippedBirchLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedBirchLog, true);
    mStrippedCrimsonHyphae = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedCrimsonHyphae, true);
    mStrippedCrimsonStem = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedCrimsonStem, true);
    mStrippedDarkOakLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedDarkOakLog, true);
    mStrippedJungleLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedJungleLog, true);
    mStrippedMangroveLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedMangroveLog, true);
    mStrippedMangroveWood = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedMangroveWood, true);
    mStrippedOakLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedOakLog, true);
    mStrippedSpruceLog = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedSpruceLog, true);
    mStrippedWarpedHyphae = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedWarpedHyphae, true);
    mStrippedWarpedStem = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StrippedWarpedStem, true);
    mStructureBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StructureBlock, true);
    mStructureVoid = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::StructureVoid, true);
    mSweetBerryBush = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::SweetBerryBush, true);
    mTallGrass = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::TallGrass, true);
    mTarget = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Target, true);
    mTintedGlass = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::TintedGlass, true);
    mTnt = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Tnt, true);
    mTorch = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Torch, true);
    mTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Trapdoor, true);
    mTrappedChest = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::TrappedChest, true);
    mTripWire = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::TripWire, true);
    mTripWireHook = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::TripWireHook, true);
    mTuff = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Tuff, true);
    mTurtleEgg = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::TurtleEgg, true);
    mTwistingVines = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::TwistingVines, true);
    mUnderwaterTorch = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::UnderwaterTorch, true);
    mUndyedShulkerBox = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::UndyedShulkerBox, true);
    mUnlitRedstoneTorch = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::UnlitRedstoneTorch, true);
    mUnpoweredComparator = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::UnpoweredComparator, true);
    mUnpoweredRepeater = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::UnpoweredRepeater, true);
    mVerdantFroglight = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::VerdantFroglight, true);
    mVine = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Vine, true);
    mWallBanner = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WallBanner, true);
    mWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WallSign, true);
    mWarpedButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedButton, true);
    mWarpedDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedDoor, true);
    mWarpedDoubleSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedDoubleSlab, true);
    mWarpedFence = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedFence, true);
    mWarpedFenceGate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedFenceGate, true);
    mWarpedFungus = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedFungus, true);
    mWarpedHyphae = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedHyphae, true);
    mWarpedNylium = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedNylium, true);
    mWarpedPlanks = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedPlanks, true);
    mWarpedPressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedPressurePlate, true);
    mWarpedRoots = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedRoots, true);
    mWarpedSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedSlab, true);
    mWarpedStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedStairs, true);
    mWarpedStandingSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedStandingSign, true);
    mWarpedStem = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedStem, true);
    mWarpedTrapdoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedTrapdoor, true);
    mWarpedWallSign = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedWallSign, true);
    mWarpedWartBlock = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WarpedWartBlock, true);
    mWater = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Water, true);
    mWaterLily = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaterLily, true);
    mWaxedCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedCopper, true);
    mWaxedCutCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedCutCopper, true);
    mWaxedCutCopperSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedCutCopperSlab, true);
    mWaxedCutCopperStairs = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedCutCopperStairs, true);
    mWaxedDoubleCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedDoubleCutCopperSlab, true);
    mWaxedExposedCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedExposedCopper, true);
    mWaxedExposedCutCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedExposedCutCopper, true);
    mWaxedExposedCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedExposedCutCopperSlab, true);
    mWaxedExposedCutCopperStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedExposedCutCopperStairs, true);
    mWaxedExposedDoubleCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedExposedDoubleCutCopperSlab, true);
    mWaxedOxidizedCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedOxidizedCopper, true);
    mWaxedOxidizedCutCopper =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedOxidizedCutCopper, true);
    mWaxedOxidizedCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedOxidizedCutCopperSlab, true);
    mWaxedOxidizedCutCopperStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedOxidizedCutCopperStairs, true);
    mWaxedOxidizedDoubleCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedOxidizedDoubleCutCopperSlab, true);
    mWaxedWeatheredCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedWeatheredCopper, true);
    mWaxedWeatheredCutCopper =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedWeatheredCutCopper, true);
    mWaxedWeatheredCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedWeatheredCutCopperSlab, true);
    mWaxedWeatheredCutCopperStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedWeatheredCutCopperStairs, true);
    mWaxedWeatheredDoubleCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WaxedWeatheredDoubleCutCopperSlab, true);
    mWeatheredCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WeatheredCopper, true);
    mWeatheredCutCopper = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WeatheredCutCopper, true);
    mWeatheredCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WeatheredCutCopperSlab, true);
    mWeatheredCutCopperStairs =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WeatheredCutCopperStairs, true);
    mWeatheredDoubleCutCopperSlab =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WeatheredDoubleCutCopperSlab, true);
    mWeb = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Web, true);
    mWeepingVines = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WeepingVines, true);
    mWheat = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Wheat, true);
    mWhiteCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WhiteCandle, true);
    mWhiteCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WhiteCandleCake, true);
    mWhiteGlazedTerracotta = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WhiteGlazedTerracotta, true);
    mWitherRose = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WitherRose, true);
    mWood = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Wood, true);
    mWoodenButton = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WoodenButton, true);
    mWoodenDoor = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WoodenDoor, true);
    mWoodenPressurePlate = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WoodenPressurePlate, true);
    mWoodenSlab = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::WoodenSlab, true);
    mWool = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::Wool, true);
    mYellowCandle = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::YellowCandle, true);
    mYellowCandleCake = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::YellowCandleCake, true);
    mYellowFlower = &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::YellowFlower, true);
    mYellowGlazedTerracotta =
        &BlockTypeRegistry::getDefaultBlockState(VanillaBlockTypeIds::YellowGlazedTerracotta, true);
}
}; // namespace StaticVanillaBlocks

THook(void, "?assignBlocks@VanillaBlocks@@YAXAEBVExperiments@@@Z", class Experiments const& exp) {
    StaticVanillaBlocks::assignBlocks();
    return original(exp);
}

/**
 * @file  Mob.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
class UserEntityIdentifierComponent;

#undef BEFORE_EXTRA

/**
 * @brief MC class Mob.
 *
 */
class Mob : public Actor {

#define AFTER_EXTRA
// Add Member There
public:
struct JumpPreventionResult {
    JumpPreventionResult() = delete;
    JumpPreventionResult(JumpPreventionResult const&) = delete;
    JumpPreventionResult(JumpPreventionResult const&&) = delete;
};

public:

    LIAPI bool refreshInventory();

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOB
public:
    class Mob& operator=(class Mob const &) = delete;
    Mob(class Mob const &) = delete;
    Mob() = delete;
#endif

public:
    /**
     * @vftbl  2
     * @symbol ?hasComponent@Mob@@UEBA_NAEBVHashedString@@@Z
     * @hash   -1617602986
     */
    virtual bool hasComponent(class HashedString const &) const;
    /**
     * @vftbl  9
     * @symbol ?outOfWorld@Mob@@MEAAXXZ
     * @hash   -1326251715
     */
    virtual void outOfWorld();
    /**
     * @vftbl  10
     * @symbol ?reloadHardcoded@Mob@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   325002541
     */
    virtual void reloadHardcoded(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  11
     * @symbol ?reloadHardcodedClient@Mob@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   -2012465352
     */
    virtual void reloadHardcodedClient(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  12
     * @symbol ?initializeComponents@Mob@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   962944176
     */
    virtual void initializeComponents(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  15
     * @symbol ?_doInitialMove@Mob@@MEAAXXZ
     * @hash   1346171563
     */
    virtual void _doInitialMove();
    /**
     * @vftbl  16
     * @hash   1731873358
     */
    virtual ~Mob();
    /**
     * @vftbl  32
     * @symbol ?getInterpolatedBodyRot@Mob@@UEBAMM@Z
     * @hash   1467157542
     */
    virtual float getInterpolatedBodyRot(float) const;
    /**
     * @vftbl  33
     * @symbol ?getInterpolatedHeadRot@Mob@@UEBAMM@Z
     * @hash   2010294484
     */
    virtual float getInterpolatedHeadRot(float) const;
    /**
     * @vftbl  34
     * @symbol ?getInterpolatedBodyYaw@Mob@@UEBAMM@Z
     * @hash   -691402242
     */
    virtual float getInterpolatedBodyYaw(float) const;
    /**
     * @vftbl  35
     * @symbol ?getYawSpeedInDegreesPerSecond@Mob@@UEBAMXZ
     * @hash   -767029477
     */
    virtual float getYawSpeedInDegreesPerSecond() const;
    /**
     * @vftbl  38
     * @symbol ?resetInterpolated@Mob@@UEAAXXZ
     * @hash   1095893113
     */
    virtual void resetInterpolated();
    /**
     * @vftbl  42
     * @hash   -147616318
     */
    virtual void __unk_vfn_42();
    /**
     * @vftbl  43
     * @symbol ?blockedByShield@Mob@@UEAAXAEBVActorDamageSource@@AEAVActor@@@Z
     * @hash   -1254581040
     */
    virtual void blockedByShield(class ActorDamageSource const &, class Actor &);
    /**
     * @vftbl  45
     * @symbol ?teleportTo@Mob@@UEAAXAEBVVec3@@_NHH1@Z
     * @hash   2098278813
     */
    virtual void teleportTo(class Vec3 const &, bool, int, int, bool);
    /**
     * @vftbl  50
     * @symbol ?normalTick@Mob@@UEAAXXZ
     * @hash   383551643
     */
    virtual void normalTick();
    /**
     * @vftbl  51
     * @symbol ?baseTick@Mob@@UEAAXXZ
     * @hash   -2004815323
     */
    virtual void baseTick();
    /**
     * @vftbl  52
     * @symbol ?passengerTick@Mob@@MEAAXXZ
     * @hash   -595608665
     */
    virtual void passengerTick();
    /**
     * @vftbl  54
     * @symbol ?startRiding@Mob@@UEAA_NAEAVActor@@@Z
     * @hash   -790165161
     */
    virtual bool startRiding(class Actor &);
    /**
     * @vftbl  55
     * @symbol ?addPassenger@Mob@@UEAAXAEAVActor@@@Z
     * @hash   -1623728169
     */
    virtual void addPassenger(class Actor &);
    /**
     * @vftbl  63
     * @hash   -96891855
     */
    virtual void __unk_vfn_63();
    /**
     * @vftbl  70
     * @hash   -63575907
     */
    virtual void __unk_vfn_70();
    /**
     * @vftbl  84
     * @hash   -31252672
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -35939469
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  90
     * @hash   -6317605
     */
    virtual void __unk_vfn_90();
    /**
     * @vftbl  94
     * @symbol ?isImmobile@Mob@@UEBA_NXZ
     * @hash   1089522488
     */
    virtual bool isImmobile() const;
    /**
     * @vftbl  97
     * @symbol ?isPickable@Mob@@UEAA_NXZ
     * @hash   414317134
     */
    virtual bool isPickable();
    /**
     * @vftbl  98
     * @hash   -6386797
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  99
     * @symbol ?isSleeping@Mob@@UEBA_NXZ
     * @hash   -172463683
     */
    virtual bool isSleeping() const;
    /**
     * @vftbl  100
     * @symbol ?setSleeping@Mob@@UEAAX_N@Z
     * @hash   -422442392
     */
    virtual void setSleeping(bool);
    /**
     * @vftbl  101
     * @hash   1421489202
     */
    virtual void __unk_vfn_101();
    /**
     * @vftbl  103
     * @symbol ?isBlocking@Mob@@UEBA_NXZ
     * @hash   908568775
     */
    virtual bool isBlocking() const;
    /**
     * @vftbl  105
     * @symbol ?isAlive@Mob@@UEBA_NXZ
     * @hash   1829767579
     */
    virtual bool isAlive() const;
    /**
     * @vftbl  108
     * @hash   1435411209
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  109
     * @symbol ?isSurfaceMob@Mob@@UEBA_NXZ
     * @hash   -269870587
     */
    virtual bool isSurfaceMob() const;
    /**
     * @vftbl  110
     * @hash   1456652192
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  111
     * @hash   1450118353
     */
    virtual void __unk_vfn_111();
    /**
     * @vftbl  113
     * @hash   1459422755
     */
    virtual void __unk_vfn_113();
    /**
     * @vftbl  116
     * @symbol ?setTarget@Mob@@UEAAXPEAVActor@@@Z
     * @hash   442643401
     */
    virtual void setTarget(class Actor *);
    /**
     * @vftbl  118
     * @symbol ?attack@Mob@@UEAA_NAEAVActor@@AEBW4ActorDamageCause@@@Z
     * @hash   1325764199
     */
    virtual bool attack(class Actor &, enum class ActorDamageCause const &);
    /**
     * @vftbl  129
     * @symbol ?canPowerJump@Mob@@UEBA_NXZ
     * @hash   1517817387
     */
    virtual bool canPowerJump() const;
    /**
     * @vftbl  131
     * @symbol ?isJumping@Mob@@UEBA_NXZ
     * @hash   -813127470
     */
    virtual bool isJumping() const;
    /**
     * @vftbl  138
     * @symbol ?getBlockDamageCause@Mob@@UEBA?AW4ActorDamageCause@@AEBVBlock@@@Z
     * @hash   845934188
     */
    virtual enum class ActorDamageCause getBlockDamageCause(class Block const &) const;
    /**
     * @vftbl  139
     * @symbol ?animateHurt@Mob@@UEAAXXZ
     * @hash   1690310951
     */
    virtual void animateHurt();
    /**
     * @vftbl  140
     * @symbol ?doFireHurt@Mob@@UEAA_NH@Z
     * @hash   -1345643050
     */
    virtual bool doFireHurt(int);
    /**
     * @vftbl  144
     * @symbol ?handleEntityEvent@Mob@@UEAAXW4ActorEvent@@H@Z
     * @hash   -1618705034
     */
    virtual void handleEntityEvent(enum class ActorEvent, int);
    /**
     * @vftbl  158
     * @symbol ?getArmorMaterialTypeInSlot@Mob@@UEBA?AW4ArmorMaterialType@@W4ArmorSlot@@@Z
     * @hash   455400776
     */
    virtual enum class ArmorMaterialType getArmorMaterialTypeInSlot(enum class ArmorSlot) const;
    /**
     * @vftbl  159
     * @symbol ?getArmorMaterialTextureTypeInSlot@Mob@@UEBA?AW4ArmorTextureType@@W4ArmorSlot@@@Z
     * @hash   -646559063
     */
    virtual enum class ArmorTextureType getArmorMaterialTextureTypeInSlot(enum class ArmorSlot) const;
    /**
     * @vftbl  160
     * @symbol ?getArmorColorInSlot@Mob@@UEBAMW4ArmorSlot@@H@Z
     * @hash   -1513624355
     */
    virtual float getArmorColorInSlot(enum class ArmorSlot, int) const;
    /**
     * @vftbl  162
     * @symbol ?setEquippedSlot@Mob@@UEAAXW4EquipmentSlot@@AEBVItemStack@@@Z
     * @hash   -1163443380
     */
    virtual void setEquippedSlot(enum class EquipmentSlot, class ItemStack const &);
    /**
     * @vftbl  176
     * @symbol ?canFreeze@Mob@@UEBA_NXZ
     * @hash   -896244145
     */
    virtual bool canFreeze() const;
    /**
     * @vftbl  182
     * @symbol ?canChangeDimensionsUsingPortal@Mob@@UEBA_NXZ
     * @hash   -1183956837
     */
    virtual bool canChangeDimensionsUsingPortal() const;
    /**
     * @vftbl  183
     * @hash   1602074556
     */
    virtual void __unk_vfn_183();
    /**
     * @vftbl  187
     * @symbol ?causeFallDamage@Mob@@MEAAXMMVActorDamageSource@@@Z
     * @hash   -493871783
     */
    virtual void causeFallDamage(float, float, class ActorDamageSource);
    /**
     * @vftbl  195
     * @symbol ?canBePulledIntoVehicle@Mob@@UEBA_NXZ
     * @hash   -183745891
     */
    virtual bool canBePulledIntoVehicle() const;
    /**
     * @vftbl  196
     * @symbol ?inCaravan@Mob@@UEBA_NXZ
     * @hash   -608713799
     */
    virtual bool inCaravan() const;
    /**
     * @vftbl  197
     * @hash   1692150047
     */
    virtual void __unk_vfn_197();
    /**
     * @vftbl  201
     * @symbol ?stopRiding@Mob@@UEAAX_N00@Z
     * @hash   -1033820226
     */
    virtual void stopRiding(bool, bool, bool);
    /**
     * @vftbl  204
     * @symbol ?buildDebugInfo@Mob@@UEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   1127765108
     */
    virtual void buildDebugInfo(std::string &) const;
    /**
     * @vftbl  209
     * @symbol ?getDeathTime@Mob@@UEBAHXZ
     * @hash   1511584582
     */
    virtual int getDeathTime() const;
    /**
     * @vftbl  220
     * @symbol ?swing@Mob@@UEAAXXZ
     * @hash   1282652965
     */
    virtual void swing();
    /**
     * @vftbl  222
     * @hash   -1937633230
     */
    virtual void __unk_vfn_222();
    /**
     * @vftbl  223
     * @hash   -1919411709
     */
    virtual void __unk_vfn_223();
    /**
     * @vftbl  245
     * @hash   -1918058621
     */
    virtual void __unk_vfn_245();
    /**
     * @vftbl  248
     * @hash   -511059482
     */
    virtual void __unk_vfn_248();
    /**
     * @vftbl  249
     * @symbol ?kill@Mob@@UEAAXXZ
     * @hash   840989045
     */
    virtual void kill();
    /**
     * @vftbl  250
     * @symbol ?die@Mob@@UEAAXAEBVActorDamageSource@@@Z
     * @hash   -297298285
     */
    virtual void die(class ActorDamageSource const &);
    /**
     * @vftbl  251
     * @symbol ?shouldDropDeathLoot@Mob@@UEBA_NXZ
     * @hash   -889497326
     */
    virtual bool shouldDropDeathLoot() const;
    /**
     * @vftbl  264
     * @symbol ?updateEntitySpecificMolangVariables@Mob@@MEAAXAEAVRenderParams@@@Z
     * @hash   775700895
     */
    virtual void updateEntitySpecificMolangVariables(class RenderParams &);
    /**
     * @vftbl  266
     * @hash   -1809581902
     */
    virtual void __unk_vfn_266();
    /**
     * @vftbl  267
     * @symbol ?_hurt@Mob@@MEAA_NAEBVActorDamageSource@@M_N1@Z
     * @hash   1136308768
     */
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  270
     * @symbol ?readAdditionalSaveData@Mob@@MEAAXAEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     * @hash   1168764496
     */
    virtual void readAdditionalSaveData(class CompoundTag const &, class DataLoadHelper &);
    /**
     * @vftbl  271
     * @symbol ?addAdditionalSaveData@Mob@@MEBAXAEAVCompoundTag@@@Z
     * @hash   1965473085
     */
    virtual void addAdditionalSaveData(class CompoundTag &) const;
    /**
     * @vftbl  272
     * @symbol ?_playStepSound@Mob@@MEAAXAEBVBlockPos@@AEBVBlock@@@Z
     * @hash   1719150786
     */
    virtual void _playStepSound(class BlockPos const &, class Block const &);
    /**
     * @vftbl  274
     * @hash   -1775342433
     */
    virtual void __unk_vfn_274();
    /**
     * @vftbl  279
     * @symbol ?_removePassenger@Mob@@MEAAXAEBUActorUniqueID@@_N11@Z
     * @hash   -793751000
     */
    virtual void _removePassenger(struct ActorUniqueID const &, bool, bool, bool);
    /**
     * @vftbl  280
     * @symbol ?_onSizeUpdated@Mob@@MEAAXXZ
     * @hash   -871337364
     */
    virtual void _onSizeUpdated();
    /**
     * @vftbl  281
     * @hash   -1807236101
     */
    virtual void __unk_vfn_281();
    /**
     * @vftbl  282
     * @symbol ?knockback@Mob@@UEAAXPEAVActor@@HMMMMM@Z
     * @hash   1794903332
     */
    virtual void knockback(class Actor *, int, float, float, float, float, float);
    /**
     * @vftbl  283
     * @symbol ?spawnAnim@Mob@@UEAAXXZ
     * @hash   1159409587
     */
    virtual void spawnAnim();
    /**
     * @vftbl  284
     * @symbol ?setSprinting@Mob@@UEAAX_N@Z
     * @hash   106721439
     */
    virtual void setSprinting(bool);
    /**
     * @vftbl  285
     * @symbol ?getHurtSound@Mob@@UEAA?AW4LevelSoundEvent@@XZ
     * @hash   -1246910
     */
    virtual enum class LevelSoundEvent getHurtSound();
    /**
     * @vftbl  286
     * @symbol ?getDeathSound@Mob@@UEAA?AW4LevelSoundEvent@@XZ
     * @hash   56435385
     */
    virtual enum class LevelSoundEvent getDeathSound();
    /**
     * @vftbl  287
     * @symbol ?getSpeed@Mob@@UEBAMXZ
     * @hash   -1327660017
     */
    virtual float getSpeed() const;
    /**
     * @vftbl  288
     * @symbol ?setSpeed@Mob@@UEAAXM@Z
     * @hash   579725622
     */
    virtual void setSpeed(float);
    /**
     * @vftbl  289
     * @hash   1042759315
     */
    virtual void __unk_vfn_289();
    /**
     * @vftbl  290
     * @symbol ?hurtEffects@Mob@@UEAAXAEBVActorDamageSource@@M_N1@Z
     * @hash   -1475478294
     */
    virtual void hurtEffects(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  291
     * @symbol ?getMeleeWeaponDamageBonus@Mob@@UEAAMPEAV1@@Z
     * @hash   -1621879989
     */
    virtual float getMeleeWeaponDamageBonus(class Mob *);
    /**
     * @vftbl  292
     * @symbol ?getMeleeKnockbackBonus@Mob@@UEAAHXZ
     * @hash   -864914466
     */
    virtual int getMeleeKnockbackBonus();
    /**
     * @vftbl  293
     * @symbol ?travel@Mob@@UEAAXMMM@Z
     * @hash   581315665
     */
    virtual void travel(float, float, float);
    /**
     * @vftbl  294
     * @symbol ?applyFinalFriction@Mob@@UEAAXM_N@Z
     * @hash   -706568205
     */
    virtual void applyFinalFriction(float, bool);
    /**
     * @vftbl  295
     * @symbol ?aiStep@Mob@@UEAAXXZ
     * @hash   1360912939
     */
    virtual void aiStep();
    /**
     * @vftbl  296
     * @symbol ?aiStep@Mob@@UEBAXAEAUIMobMovementProxy@@@Z
     * @hash   1348269547
     */
    virtual void aiStep(struct IMobMovementProxy &) const;
    /**
     * @vftbl  297
     * @symbol ?pushActors@Mob@@UEAAXXZ
     * @hash   -1004920065
     */
    virtual void pushActors();
    /**
     * @vftbl  298
     * @symbol ?lookAt@Mob@@UEAAXPEAVActor@@MM@Z
     * @hash   1074639386
     */
    virtual void lookAt(class Actor *, float, float);
    /**
     * @vftbl  299
     * @symbol ?isLookingAtAnEntity@Mob@@UEAA_NXZ
     * @hash   -1689659755
     */
    virtual bool isLookingAtAnEntity();
    /**
     * @vftbl  300
     * @symbol ?checkSpawnRules@Mob@@UEAA_N_N@Z
     * @hash   -106662897
     */
    virtual bool checkSpawnRules(bool);
    /**
     * @vftbl  301
     * @symbol ?checkSpawnObstruction@Mob@@UEBA_NXZ
     * @hash   -1014258907
     */
    virtual bool checkSpawnObstruction() const;
    /**
     * @vftbl  302
     * @symbol ?getAttackAnim@Mob@@UEAAMM@Z
     * @hash   -2018577436
     */
    virtual float getAttackAnim(float);
    /**
     * @vftbl  303
     * @symbol ?getItemUseDuration@Mob@@UEBAHXZ
     * @hash   956899629
     */
    virtual int getItemUseDuration() const;
    /**
     * @vftbl  304
     * @symbol ?getItemUseStartupProgress@Mob@@UEBAMXZ
     * @hash   895309674
     */
    virtual float getItemUseStartupProgress() const;
    /**
     * @vftbl  305
     * @symbol ?getItemUseIntervalProgress@Mob@@UEBAMXZ
     * @hash   -208668178
     */
    virtual float getItemUseIntervalProgress() const;
    /**
     * @vftbl  306
     * @symbol ?getItemUseIntervalAxis@Mob@@UEBAHXZ
     * @hash   -1629471361
     */
    virtual int getItemUseIntervalAxis() const;
    /**
     * @vftbl  307
     * @symbol ?getTimeAlongSwing@Mob@@UEBAHXZ
     * @hash   297103215
     */
    virtual int getTimeAlongSwing() const;
    /**
     * @vftbl  308
     * @hash   -1142300981
     */
    virtual void __unk_vfn_308();
    /**
     * @vftbl  309
     * @symbol ?getMaxHeadXRot@Mob@@UEAAMXZ
     * @hash   1177951884
     */
    virtual float getMaxHeadXRot();
    /**
     * @vftbl  310
     * @symbol ?isAlliedTo@Mob@@UEAA_NPEAV1@@Z
     * @hash   1606788171
     */
    virtual bool isAlliedTo(class Mob *);
    /**
     * @vftbl  311
     * @symbol ?doHurtTarget@Mob@@UEAA_NPEAVActor@@AEBW4ActorDamageCause@@@Z
     * @hash   2045428766
     */
    virtual bool doHurtTarget(class Actor *, enum class ActorDamageCause const &);
    /**
     * @vftbl  312
     * @hash   -1061460700
     */
    virtual void __unk_vfn_312();
    /**
     * @vftbl  313
     * @symbol ?leaveCaravan@Mob@@UEAAXXZ
     * @hash   1679008630
     */
    virtual void leaveCaravan();
    /**
     * @vftbl  314
     * @symbol ?joinCaravan@Mob@@UEAAXPEAV1@@Z
     * @hash   -1728527955
     */
    virtual void joinCaravan(class Mob *);
    /**
     * @vftbl  315
     * @symbol ?hasCaravanTail@Mob@@UEBA_NXZ
     * @hash   1568418900
     */
    virtual bool hasCaravanTail() const;
    /**
     * @vftbl  316
     * @symbol ?getCaravanHead@Mob@@UEBA?AUActorUniqueID@@XZ
     * @hash   142575065
     */
    virtual struct ActorUniqueID getCaravanHead() const;
    /**
     * @vftbl  317
     * @symbol ?getArmorValue@Mob@@UEBAHXZ
     * @hash   -1963198125
     */
    virtual int getArmorValue() const;
    /**
     * @vftbl  318
     * @symbol ?getArmorCoverPercentage@Mob@@UEBAMXZ
     * @hash   -1903030842
     */
    virtual float getArmorCoverPercentage() const;
    /**
     * @vftbl  319
     * @symbol ?getToughnessValue@Mob@@UEBAHXZ
     * @hash   -1068661088
     */
    virtual int getToughnessValue() const;
    /**
     * @vftbl  320
     * @symbol ?hurtArmorSlots@Mob@@UEAAXAEBVActorDamageSource@@HV?$bitset@$03@std@@@Z
     * @hash   1915264884
     */
    virtual void hurtArmorSlots(class ActorDamageSource const &, int, class std::bitset<4>);
    /**
     * @vftbl  321
     * @symbol ?setDamagedArmor@Mob@@UEAAXW4ArmorSlot@@AEBVItemStack@@@Z
     * @hash   -621148294
     */
    virtual void setDamagedArmor(enum class ArmorSlot, class ItemStack const &);
    /**
     * @vftbl  322
     * @symbol ?sendArmorDamage@Mob@@UEAAXV?$bitset@$03@std@@@Z
     * @hash   2082424936
     */
    virtual void sendArmorDamage(class std::bitset<4>);
    /**
     * @vftbl  323
     * @symbol ?sendArmor@Mob@@UEAAXV?$bitset@$03@std@@@Z
     * @hash   203167543
     */
    virtual void sendArmor(class std::bitset<4>);
    /**
     * @vftbl  324
     * @symbol ?containerChanged@Mob@@UEAAXH@Z
     * @hash   -1322719259
     */
    virtual void containerChanged(int);
    /**
     * @vftbl  325
     * @symbol ?updateEquipment@Mob@@UEAAXXZ
     * @hash   282586412
     */
    virtual void updateEquipment();
    /**
     * @vftbl  326
     * @symbol ?clearEquipment@Mob@@UEAAHXZ
     * @hash   -152422035
     */
    virtual int clearEquipment();
    /**
     * @vftbl  327
     * @symbol ?getAllArmorID@Mob@@UEBA?AV?$vector@HV?$allocator@H@std@@@std@@XZ
     * @hash   -211996338
     */
    virtual std::vector<int> getAllArmorID() const;
    /**
     * @vftbl  328
     * @symbol ?getAllHand@Mob@@UEBA?AV?$vector@PEBVItemStack@@V?$allocator@PEBVItemStack@@@std@@@std@@XZ
     * @hash   -943999005
     */
    virtual std::vector<class ItemStack const *> getAllHand() const;
    /**
     * @vftbl  329
     * @symbol ?getAllEquipment@Mob@@UEBA?AV?$vector@PEBVItemStack@@V?$allocator@PEBVItemStack@@@std@@@std@@XZ
     * @hash   421218844
     */
    virtual std::vector<class ItemStack const *> getAllEquipment() const;
    /**
     * @vftbl  330
     * @symbol ?getArmorTypeHash@Mob@@UEAAHXZ
     * @hash   -1439670195
     */
    virtual int getArmorTypeHash();
    /**
     * @vftbl  331
     * @symbol ?dropEquipmentOnDeath@Mob@@UEAAXAEBVActorDamageSource@@H@Z
     * @hash   359821618
     */
    virtual void dropEquipmentOnDeath(class ActorDamageSource const &, int);
    /**
     * @vftbl  332
     * @symbol ?dropEquipmentOnDeath@Mob@@UEAAXXZ
     * @hash   827232893
     */
    virtual void dropEquipmentOnDeath();
    /**
     * @vftbl  333
     * @symbol ?clearVanishEnchantedItemsOnDeath@Mob@@UEAAXXZ
     * @hash   1355174908
     */
    virtual void clearVanishEnchantedItemsOnDeath();
    /**
     * @vftbl  334
     * @symbol ?sendInventory@Mob@@UEAAX_N@Z
     * @hash   1953431633
     */
    virtual void sendInventory(bool);
    /**
     * @vftbl  335
     * @symbol ?getDamageAfterEnchantReduction@Mob@@UEBAMAEBVActorDamageSource@@M@Z
     * @hash   -1429511001
     */
    virtual float getDamageAfterEnchantReduction(class ActorDamageSource const &, float) const;
    /**
     * @vftbl  336
     * @symbol ?getDamageAfterArmorReduction@Mob@@UEBAMAEBVActorDamageSource@@M@Z
     * @hash   356121665
     */
    virtual float getDamageAfterArmorReduction(class ActorDamageSource const &, float) const;
    /**
     * @vftbl  337
     * @symbol ?getDamageAfterResistanceEffect@Mob@@UEBAMAEBVActorDamageSource@@M@Z
     * @hash   -1185795049
     */
    virtual float getDamageAfterResistanceEffect(class ActorDamageSource const &, float) const;
    /**
     * @vftbl  338
     * @symbol ?createAIGoals@Mob@@UEAA_NXZ
     * @hash   2041177333
     */
    virtual bool createAIGoals();
    /**
     * @vftbl  339
     * @symbol ?onBorn@Mob@@UEAAXAEAVActor@@0@Z
     * @hash   1480650159
     */
    virtual void onBorn(class Actor &, class Actor &);
    /**
     * @vftbl  340
     * @symbol ?setItemSlot@Mob@@UEAA_NW4EquipmentSlot@@AEBVItemStack@@@Z
     * @hash   -1035731310
     */
    virtual bool setItemSlot(enum class EquipmentSlot, class ItemStack const &);
    /**
     * @vftbl  341
     * @symbol ?setTransitioningSitting@Mob@@UEAAX_N@Z
     * @hash   -1800152636
     */
    virtual void setTransitioningSitting(bool);
    /**
     * @vftbl  342
     * @symbol ?attackAnimation@Mob@@UEAAXPEAVActor@@M@Z
     * @hash   1725269282
     */
    virtual void attackAnimation(class Actor *, float);
    /**
     * @vftbl  343
     * @symbol ?getAttackTime@Mob@@UEAAHXZ
     * @hash   -637930121
     */
    virtual int getAttackTime();
    /**
     * @vftbl  344
     * @symbol ?_getWalkTargetValue@Mob@@UEAAMAEBVBlockPos@@@Z
     * @hash   -297195669
     */
    virtual float _getWalkTargetValue(class BlockPos const &);
    /**
     * @vftbl  345
     * @symbol ?canExistWhenDisallowMob@Mob@@UEBA_NXZ
     * @hash   -785033540
     */
    virtual bool canExistWhenDisallowMob() const;
    /**
     * @vftbl  346
     * @hash   -979336523
     */
    virtual void __unk_vfn_346();
    /**
     * @vftbl  347
     * @symbol ?ascendLadder@Mob@@UEAAXXZ
     * @hash   963678099
     */
    virtual void ascendLadder();
    /**
     * @vftbl  348
     * @symbol ?ascendBlockByJumping@Mob@@UEAAXXZ
     * @hash   -1775562975
     */
    virtual void ascendBlockByJumping();
    /**
     * @vftbl  349
     * @symbol ?descendBlockByCrouching@Mob@@UEAAXXZ
     * @hash   -902550219
     */
    virtual void descendBlockByCrouching();
    /**
     * @vftbl  350
     * @symbol ?dropContainer@Mob@@UEAAXXZ
     * @hash   -1299159975
     */
    virtual void dropContainer();
    /**
     * @vftbl  351
     * @symbol ?initBodyControl@Mob@@MEAA?AV?$unique_ptr@VBodyControl@@U?$default_delete@VBodyControl@@@std@@@std@@XZ
     * @hash   1480784326
     */
    virtual std::unique_ptr<class BodyControl> initBodyControl();
    /**
     * @vftbl  352
     * @symbol ?jumpFromGround@Mob@@MEAAXXZ
     * @hash   1835685087
     */
    virtual void jumpFromGround();
    /**
     * @vftbl  353
     * @symbol ?jumpFromGround@Mob@@MEBAXAEAUIMobMovementProxy@@@Z
     * @hash   -421896265
     */
    virtual void jumpFromGround(struct IMobMovementProxy &) const;
    /**
     * @vftbl  354
     * @symbol ?updateAi@Mob@@MEAAXXZ
     * @hash   1313194161
     */
    virtual void updateAi();
    /**
     * @vftbl  355
     * @symbol ?newServerAiStep@Mob@@MEAAXXZ
     * @hash   903297847
     */
    virtual void newServerAiStep();
    /**
     * @vftbl  356
     * @symbol ?_serverAiMobStep@Mob@@MEAAXXZ
     * @hash   -285441934
     */
    virtual void _serverAiMobStep();
    /**
     * @vftbl  357
     * @symbol ?dropBags@Mob@@MEAAXXZ
     * @hash   -33938166
     */
    virtual void dropBags();
    /**
     * @vftbl  358
     * @symbol ?tickDeath@Mob@@MEAAXXZ
     * @hash   -318780473
     */
    virtual void tickDeath();
    /**
     * @vftbl  359
     * @symbol ?updateGliding@Mob@@MEAAXXZ
     * @hash   2108830969
     */
    virtual void updateGliding();
    /**
     * @vftbl  360
     * @hash   -927619347
     */
    virtual void __unk_vfn_360();
    /**
     * @vftbl  361
     * @symbol ?_getAdjustedAABBForSpawnCheck@Mob@@MEBA?AVAABB@@AEBV2@AEBVVec3@@@Z
     * @hash   -931945862
     */
    virtual class AABB _getAdjustedAABBForSpawnCheck(class AABB const &, class Vec3 const &) const;
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_MOB
    /**
     * @symbol ?_allowAscendingScaffolding@Mob@@MEBA_NXZ
     * @hash   1270370655
     */
    MCVAPI bool _allowAscendingScaffolding() const;
    /**
     * @symbol ?ate@Mob@@UEAAXXZ
     * @hash   37381721
     */
    MCVAPI void ate();
    /**
     * @symbol ?canBeControlledByPassenger@Mob@@UEAA_NXZ
     * @hash   1183321723
     */
    MCVAPI bool canBeControlledByPassenger();
    /**
     * @symbol ?getSprintSpeedIncrease@Mob@@UEBAMXZ
     * @hash   -1845093369
     */
    MCVAPI float getSprintSpeedIncrease() const;
    /**
     * @symbol ?isShootable@Mob@@UEAA_NXZ
     * @hash   1217156184
     */
    MCVAPI bool isShootable();
    /**
     * @symbol ?renderDebugServerState@Mob@@UEAAXAEBVOptions@@@Z
     * @hash   -276045581
     */
    MCVAPI void renderDebugServerState(class Options const &);
    /**
     * @symbol ?useNewAi@Mob@@UEBA_NXZ
     * @hash   197747273
     */
    MCVAPI bool useNewAi() const;
#endif
    /**
     * @symbol ??0Mob@@QEAA@PEAVActorDefinitionGroup@@AEBUActorDefinitionIdentifier@@AEAVEntityContext@@@Z
     * @hash   550989820
     */
    MCAPI Mob(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    /**
     * @symbol ??0Mob@@QEAA@AEAVLevel@@AEAVEntityContext@@@Z
     * @hash   -2054434492
     */
    MCAPI Mob(class Level &, class EntityContext &);
    /**
     * @symbol ?_endJump@Mob@@QEAAXXZ
     * @hash   661005943
     */
    MCAPI void _endJump();
    /**
     * @symbol ?addSpeedModifier@Mob@@QEAAXAEBVUUID@mce@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@M@Z
     * @hash   1832718508
     */
    MCAPI void addSpeedModifier(class mce::UUID const &, std::string const &, float);
    /**
     * @symbol ?calcMoveRelativeSpeed@Mob@@QEAAMW4TravelType@@@Z
     * @hash   1635752963
     */
    MCAPI float calcMoveRelativeSpeed(enum class TravelType);
    /**
     * @symbol ?checkForPostHitDamageImmunity@Mob@@QEAA_NMAEBVActorDamageSource@@@Z
     * @hash   523230900
     */
    MCAPI bool checkForPostHitDamageImmunity(float, class ActorDamageSource const &);
    /**
     * @symbol ?checkTotemDeathProtection@Mob@@QEAA_NAEBVActorDamageSource@@@Z
     * @hash   -2114896071
     */
    MCAPI bool checkTotemDeathProtection(class ActorDamageSource const &);
    /**
     * @symbol ?createAI@Mob@@QEAAXV?$vector@UGoalDefinition@@V?$allocator@UGoalDefinition@@@std@@@std@@@Z
     * @hash   1702954718
     */
    MCAPI void createAI(std::vector<struct GoalDefinition>);
    /**
     * @symbol ?discardFriction@Mob@@QEBA_NXZ
     * @hash   -1645079122
     */
    MCAPI bool discardFriction() const;
    /**
     * @symbol ?emitJumpPreventedEvent@Mob@@QEAAXAEBVBlockPos@@@Z
     * @hash   1173561850
     */
    MCAPI void emitJumpPreventedEvent(class BlockPos const &);
    /**
     * @symbol ?frostWalk@Mob@@QEAAXXZ
     * @hash   -121681729
     */
    MCAPI void frostWalk();
    /**
     * @symbol ?getBoundOrigin@Mob@@QEBA?AVBlockPos@@XZ
     * @hash   -961978996
     */
    MCAPI class BlockPos getBoundOrigin() const;
    /**
     * @symbol ?getCaravanSize@Mob@@QEBAHXZ
     * @hash   2070944232
     */
    MCAPI int getCaravanSize() const;
    /**
     * @symbol ?getEatCounter@Mob@@QEBAHXZ
     * @hash   1104531308
     */
    MCAPI int getEatCounter() const;
    /**
     * @symbol ?getFirstCaravanHead@Mob@@QEAAPEAV1@XZ
     * @hash   -330113160
     */
    MCAPI class Mob * getFirstCaravanHead();
    /**
     * @symbol ?getFlightSpeed@Mob@@QEBAMXZ
     * @hash   640534694
     */
    MCAPI float getFlightSpeed() const;
    /**
     * @symbol ?getFrictionModifier@Mob@@QEBAMXZ
     * @hash   1347395828
     */
    MCAPI float getFrictionModifier() const;
    /**
     * @symbol ?getGlidingTicks@Mob@@QEBAHXZ
     * @hash   -716313860
     */
    MCAPI int getGlidingTicks() const;
    /**
     * @symbol ?getItemSlot@Mob@@QEBAAEBVItemStack@@W4EquipmentSlot@@@Z
     * @hash   -431836485
     */
    MCAPI class ItemStack const & getItemSlot(enum class EquipmentSlot) const;
    /**
     * @symbol ?getJumpEffectAmplifierValue@Mob@@QEAAMXZ
     * @hash   -134012750
     */
    MCAPI float getJumpEffectAmplifierValue();
    /**
     * @symbol ?getJumpMultiplier@Mob@@QEAAMXZ
     * @hash   -362845630
     */
    MCAPI float getJumpMultiplier();
    /**
     * @symbol ?getJumpPower@Mob@@QEBAMXZ
     * @hash   -1890596954
     */
    MCAPI float getJumpPower() const;
    /**
     * @symbol ?getJumpPrevention@Mob@@QEAA?AUJumpPreventionResult@@XZ
     * @hash   -2107238366
     */
    MCAPI struct JumpPreventionResult getJumpPrevention();
    /**
     * @symbol ?getJumpTicks@Mob@@QEBAHXZ
     * @hash   926007594
     */
    MCAPI int getJumpTicks() const;
    /**
     * @symbol ?getMovementComponentCurrentSpeed@Mob@@QEBAMXZ
     * @hash   184799248
     */
    MCAPI float getMovementComponentCurrentSpeed() const;
    /**
     * @symbol ?getNoActionTime@Mob@@QEBAHXZ
     * @hash   -500022420
     */
    MCAPI int getNoActionTime() const;
    /**
     * @symbol ?getPassengerLockedBodyRot@Mob@@QEBAMXZ
     * @hash   -897189084
     */
    MCAPI float getPassengerLockedBodyRot() const;
    /**
     * @symbol ?getPassengerRotLimit@Mob@@QEBAMXZ
     * @hash   983163156
     */
    MCAPI float getPassengerRotLimit() const;
    /**
     * @symbol ?getRollCounter@Mob@@QEBAHXZ
     * @hash   1249561112
     */
    MCAPI int getRollCounter() const;
    /**
     * @symbol ?getSwimSpeedMultiplier@Mob@@QEBAMXZ
     * @hash   -1978336744
     */
    MCAPI float getSwimSpeedMultiplier() const;
    /**
     * @symbol ?getTargetCaptain@Mob@@QEBA?AUActorUniqueID@@XZ
     * @hash   -106961598
     */
    MCAPI struct ActorUniqueID getTargetCaptain() const;
    /**
     * @symbol ?getTravelType@Mob@@QEAA?AW4TravelType@@XZ
     * @hash   1757388430
     */
    MCAPI enum class TravelType getTravelType();
    /**
     * @symbol ?getYBodyRotation@Mob@@QEBAMXZ
     * @hash   -809314182
     */
    MCAPI float getYBodyRotation() const;
    /**
     * @symbol ?getYBodyRotationsNewOld@Mob@@QEBA?AUInterpolationPair@@XZ
     * @hash   383598038
     */
    MCAPI struct InterpolationPair getYBodyRotationsNewOld() const;
    /**
     * @symbol ?getYRotA@Mob@@QEBAMXZ
     * @hash   -1567409202
     */
    MCAPI float getYRotA() const;
    /**
     * @symbol ?getZza@Mob@@QEBAMXZ
     * @hash   2058822906
     */
    MCAPI float getZza() const;
    /**
     * @symbol ?hasBoundOrigin@Mob@@QEBA_NXZ
     * @hash   -1100285200
     */
    MCAPI bool hasBoundOrigin() const;
    /**
     * @symbol ?hurtArmor@Mob@@QEAAXAEBVActorDamageSource@@H@Z
     * @hash   -433770207
     */
    MCAPI void hurtArmor(class ActorDamageSource const &, int);
    /**
     * @symbol ?isAbleToMove@Mob@@QEBA_NXZ
     * @hash   1610414688
     */
    MCAPI bool isAbleToMove() const;
    /**
     * @symbol ?isEating@Mob@@QEBA_NXZ
     * @hash   1835005216
     */
    MCAPI bool isEating() const;
    /**
     * @symbol ?isFrostWalking@Mob@@QEBA_NXZ
     * @hash   1751149472
     */
    MCAPI bool isFrostWalking() const;
    /**
     * @symbol ?isGliding@Mob@@QEBA_NXZ
     * @hash   1188356782
     */
    MCAPI bool isGliding() const;
    /**
     * @symbol ?isLayingEgg@Mob@@QEBA_NXZ
     * @hash   187257614
     */
    MCAPI bool isLayingEgg() const;
    /**
     * @symbol ?isPregnant@Mob@@QEBA_NXZ
     * @hash   1678535264
     */
    MCAPI bool isPregnant() const;
    /**
     * @symbol ?isRolling@Mob@@QEBA_NXZ
     * @hash   -1759191906
     */
    MCAPI bool isRolling() const;
    /**
     * @symbol ?isSprinting@Mob@@QEBA_NXZ
     * @hash   -1899628194
     */
    MCAPI bool isSprinting() const;
    /**
     * @symbol ?isTransitioningSitting@Mob@@QEBA_NXZ
     * @hash   -1148770224
     */
    MCAPI bool isTransitioningSitting() const;
    /**
     * @symbol ?onPlayerDimensionChanged@Mob@@QEAAXPEAVPlayer@@V?$AutomaticID@VDimension@@H@@1@Z
     * @hash   1859342153
     */
    MCAPI void onPlayerDimensionChanged(class Player *, class AutomaticID<class Dimension, int>, class AutomaticID<class Dimension, int>);
    /**
     * @symbol ?onPlayerJump@Mob@@QEAAXH@Z
     * @hash   1898160524
     */
    MCAPI void onPlayerJump(int);
    /**
     * @symbol ?removeSpeedModifier@Mob@@QEAAXAEBVUUID@mce@@@Z
     * @hash   -903778282
     */
    MCAPI void removeSpeedModifier(class mce::UUID const &);
    /**
     * @symbol ?resetAttributes@Mob@@QEAAXXZ
     * @hash   -1402071023
     */
    MCAPI void resetAttributes();
    /**
     * @symbol ?resetNoActionTime@Mob@@QEAAXXZ
     * @hash   1499713323
     */
    MCAPI void resetNoActionTime();
    /**
     * @symbol ?sendArmorDamageSlot@Mob@@QEAAXW4ArmorSlot@@@Z
     * @hash   -1688927964
     */
    MCAPI void sendArmorDamageSlot(enum class ArmorSlot);
    /**
     * @symbol ?sendArmorSlot@Mob@@QEAAXW4ArmorSlot@@@Z
     * @hash   -431371678
     */
    MCAPI void sendArmorSlot(enum class ArmorSlot);
    /**
     * @symbol ?setEatCounter@Mob@@QEAAXH@Z
     * @hash   -44018438
     */
    MCAPI void setEatCounter(int);
    /**
     * @symbol ?setEating@Mob@@QEAAX_N@Z
     * @hash   1840232846
     */
    MCAPI void setEating(bool);
    /**
     * @symbol ?setFlightSpeed@Mob@@QEAAXM@Z
     * @hash   -75971924
     */
    MCAPI void setFlightSpeed(float);
    /**
     * @symbol ?setFrictionModifier@Mob@@QEAAXM@Z
     * @hash   794327342
     */
    MCAPI void setFrictionModifier(float);
    /**
     * @symbol ?setIsLayingEgg@Mob@@QEAAX_N@Z
     * @hash   -681969428
     */
    MCAPI void setIsLayingEgg(bool);
    /**
     * @symbol ?setIsPregnant@Mob@@QEAAX_N@Z
     * @hash   1476309486
     */
    MCAPI void setIsPregnant(bool);
    /**
     * @symbol ?setJumpTicks@Mob@@QEAAXH@Z
     * @hash   -1516720516
     */
    MCAPI void setJumpTicks(int);
    /**
     * @symbol ?setJumpVelRedux@Mob@@QEAAX_N@Z
     * @hash   -984982898
     */
    MCAPI void setJumpVelRedux(bool);
    /**
     * @symbol ?setJumping@Mob@@QEAAX_N@Z
     * @hash   1058222892
     */
    MCAPI void setJumping(bool);
    /**
     * @symbol ?setMovementComponentCurrentSpeed@Mob@@QEAAXM@Z
     * @hash   -2048654078
     */
    MCAPI void setMovementComponentCurrentSpeed(float);
    /**
     * @symbol ?setNaturallySpawned@Mob@@QEAAX_N@Z
     * @hash   -127518802
     */
    MCAPI void setNaturallySpawned(bool);
    /**
     * @symbol ?setOldYBodyRotation@Mob@@QEAAXM@Z
     * @hash   -1148200116
     */
    MCAPI void setOldYBodyRotation(float);
    /**
     * @symbol ?setPassengerLockedBodyRot@Mob@@QEAAXM@Z
     * @hash   1719347198
     */
    MCAPI void setPassengerLockedBodyRot(float);
    /**
     * @symbol ?setPassengerRotLimit@Mob@@QEAAXM@Z
     * @hash   -540395170
     */
    MCAPI void setPassengerRotLimit(float);
    /**
     * @symbol ?setRolling@Mob@@QEAAX_N@Z
     * @hash   959835276
     */
    MCAPI void setRolling(bool);
    /**
     * @symbol ?setSpawnMethod@Mob@@QEAAXW4MobSpawnMethod@@@Z
     * @hash   112774462
     */
    MCAPI void setSpawnMethod(enum class MobSpawnMethod);
    /**
     * @symbol ?setSpeedModifier@Mob@@QEAAXM@Z
     * @hash   1970256318
     */
    MCAPI void setSpeedModifier(float);
    /**
     * @symbol ?setSurfaceMob@Mob@@QEAAX_N@Z
     * @hash   1004269070
     */
    MCAPI void setSurfaceMob(bool);
    /**
     * @symbol ?setSwimSpeedMultiplier@Mob@@QEAAXM@Z
     * @hash   382451994
     */
    MCAPI void setSwimSpeedMultiplier(float);
    /**
     * @symbol ?setTargetCaptain@Mob@@QEAAXUActorUniqueID@@@Z
     * @hash   128870672
     */
    MCAPI void setTargetCaptain(struct ActorUniqueID);
    /**
     * @symbol ?setXxa@Mob@@QEAAXM@Z
     * @hash   -894960840
     */
    MCAPI void setXxa(float);
    /**
     * @symbol ?setYBodyRotation@Mob@@QEAAXM@Z
     * @hash   2077521688
     */
    MCAPI void setYBodyRotation(float);
    /**
     * @symbol ?setYBodyRotations@Mob@@QEAAXMM@Z
     * @hash   1197631845
     */
    MCAPI void setYBodyRotations(float, float);
    /**
     * @symbol ?setYRotA@Mob@@QEAAXM@Z
     * @hash   421498884
     */
    MCAPI void setYRotA(float);
    /**
     * @symbol ?setYya@Mob@@QEAAXM@Z
     * @hash   2091867288
     */
    MCAPI void setYya(float);
    /**
     * @symbol ?setZza@Mob@@QEAAXM@Z
     * @hash   783466728
     */
    MCAPI void setZza(float);
    /**
     * @symbol ?snapToYBodyRot@Mob@@QEAAXM@Z
     * @hash   -1640296348
     */
    MCAPI void snapToYBodyRot(float);
    /**
     * @symbol ?snapToYHeadRot@Mob@@QEAAXM@Z
     * @hash   138806128
     */
    MCAPI void snapToYHeadRot(float);
    /**
     * @symbol ?tryFrostWalk@Mob@@QEAAXXZ
     * @hash   -951990025
     */
    MCAPI void tryFrostWalk();
    /**
     * @symbol ?tryProcessSoulSpeed@Mob@@QEAAXXZ
     * @hash   -912792347
     */
    MCAPI void tryProcessSoulSpeed();
    /**
     * @symbol ?ARMOR_DAMAGE_DIVISOR@Mob@@2HB
     * @hash   -1939934929
     */
    MCAPI static int const ARMOR_DAMAGE_DIVISOR;
    /**
     * @symbol ?ARMOR_PROTECTION_DIVIDER@Mob@@2MB
     * @hash   -111259103
     */
    MCAPI static float const ARMOR_PROTECTION_DIVIDER;
    /**
     * @symbol ?ASCEND_BLOCK_BY_JUMPING_SPEED@Mob@@2MB
     * @hash   -128235137
     */
    MCAPI static float const ASCEND_BLOCK_BY_JUMPING_SPEED;
    /**
     * @symbol ?BASE_ARMOR_TOUGHNESS@Mob@@2MB
     * @hash   -1673718725
     */
    MCAPI static float const BASE_ARMOR_TOUGHNESS;
    /**
     * @symbol ?DEFAULT_GRAVITY@Mob@@2MB
     * @hash   185918753
     */
    MCAPI static float const DEFAULT_GRAVITY;
    /**
     * @symbol ?FRICTION_CONSTANT@Mob@@2MB
     * @hash   1082466243
     */
    MCAPI static float const FRICTION_CONSTANT;
    /**
     * @symbol ?FRICTION_CONSTANT_MODIFIED@Mob@@2MB
     * @hash   1374843669
     */
    MCAPI static float const FRICTION_CONSTANT_MODIFIED;
    /**
     * @symbol ?FRICTION_MODIFIER@Mob@@2MB
     * @hash   665941997
     */
    MCAPI static float const FRICTION_MODIFIER;
    /**
     * @symbol ?GLIDING_FALL_RESET_DELTA@Mob@@2MB
     * @hash   -84269095
     */
    MCAPI static float const GLIDING_FALL_RESET_DELTA;
    /**
     * @symbol ?LADDER_CLIMB_SPEED@Mob@@2MB
     * @hash   -740338205
     */
    MCAPI static float const LADDER_CLIMB_SPEED;
    /**
     * @symbol ?MAX_ARMOR@Mob@@2MB
     * @hash   2139747477
     */
    MCAPI static float const MAX_ARMOR;
    /**
     * @symbol ?MIN_ARMOR_RATIO@Mob@@2MB
     * @hash   -1887721707
     */
    MCAPI static float const MIN_ARMOR_RATIO;
    /**
     * @symbol ?NUM_ARMOR_ITEMS@Mob@@2MB
     * @hash   -844367073
     */
    MCAPI static float const NUM_ARMOR_ITEMS;
    /**
     * @symbol ?PLAYER_SWIMMING_SURFACE_OFFSET@Mob@@2MB
     * @hash   -1317008291
     */
    MCAPI static float const PLAYER_SWIMMING_SURFACE_OFFSET;
    /**
     * @symbol ?REMOVE_PASSENGERS_DELAY@Mob@@2HB
     * @hash   2095795677
     */
    MCAPI static int const REMOVE_PASSENGERS_DELAY;
    /**
     * @symbol ?SLOW_FALL_GRAVITY@Mob@@2MB
     * @hash   698343821
     */
    MCAPI static float const SLOW_FALL_GRAVITY;
    /**
     * @symbol ?SPAWN_XP_DELAY@Mob@@2HB
     * @hash   1282620367
     */
    MCAPI static int const SPAWN_XP_DELAY;
    /**
     * @symbol ?TOTAL_ROLL_STEPS@Mob@@2HB
     * @hash   -1341638649
     */
    MCAPI static int const TOTAL_ROLL_STEPS;
    /**
     * @symbol ?_aiStep@Mob@@SAXAEAUIMobMovementProxy@@@Z
     * @hash   -1827677642
     */
    MCAPI static void _aiStep(struct IMobMovementProxy &);
    /**
     * @symbol ?_calcMoveRelativeSpeed@Mob@@SAMAEAUIMobMovementProxy@@W4TravelType@@@Z
     * @hash   1608342732
     */
    MCAPI static float _calcMoveRelativeSpeed(struct IMobMovementProxy &, enum class TravelType);
    /**
     * @symbol ?_travel@Mob@@SAXAEAUIMobMovementProxy@@MMM@Z
     * @hash   1403202075
     */
    MCAPI static void _travel(struct IMobMovementProxy &, float, float, float);
    /**
     * @symbol ?_updateMobTravel@Mob@@SAXAEAUIMobMovementProxy@@@Z
     * @hash   -1051433734
     */
    MCAPI static void _updateMobTravel(struct IMobMovementProxy &);
    /**
     * @symbol ?calculateJumpImpulse@Mob@@SAMAEBUIMobMovementProxy@@@Z
     * @hash   11890981
     */
    MCAPI static float calculateJumpImpulse(struct IMobMovementProxy const &);
    /**
     * @symbol ?getJumpEffectAmplifierValue@Mob@@SAMAEBUIMobMovementProxy@@@Z
     * @hash   851996795
     */
    MCAPI static float getJumpEffectAmplifierValue(struct IMobMovementProxy const &);
    /**
     * @symbol ?getJumpPrevention@Mob@@SA?AUJumpPreventionResult@@AEBUIMobMovementProxy@@@Z
     * @hash   -796411397
     */
    MCAPI static struct JumpPreventionResult getJumpPrevention(struct IMobMovementProxy const &);
    /**
     * @symbol ?getTravelType@Mob@@SA?AW4TravelType@@AEAUIMobMovementProxy@@@Z
     * @hash   -1018394921
     */
    MCAPI static enum class TravelType getTravelType(struct IMobMovementProxy &);
    /**
     * @symbol ?isImmobile@Mob@@SA_NAEBUIActorMovementProxy@@@Z
     * @hash   385191243
     */
    MCAPI static bool isImmobile(struct IActorMovementProxy const &);
    /**
     * @symbol ?setSprinting@Mob@@SAXAEAVBaseAttributeMap@@VSynchedActorDataWriter@@_N@Z
     * @hash   1554104668
     */
    MCAPI static void setSprinting(class BaseAttributeMap &, class SynchedActorDataWriter, bool);
    /**
     * @symbol ?shouldApplyWaterGravity@Mob@@SA_NAEBUIActorMovementProxy@@@Z
     * @hash   -409488915
     */
    MCAPI static bool shouldApplyWaterGravity(struct IActorMovementProxy const &);
    /**
     * @symbol ?tryGetFromEntity@Mob@@SAPEAV1@AEAVEntityContext@@_N@Z
     * @hash   -953341878
     */
    MCAPI static class Mob * tryGetFromEntity(class EntityContext &, bool);

//protected:
    /**
     * @symbol ?_doSprintParticleEffect@Mob@@IEAAXXZ
     * @hash   -232840258
     */
    MCAPI void _doSprintParticleEffect();
    /**
     * @symbol ?_processSoulSpeed@Mob@@IEAAXXZ
     * @hash   -1491000569
     */
    MCAPI void _processSoulSpeed();
    /**
     * @symbol ?_registerMobAttributes@Mob@@IEAAXXZ
     * @hash   1759889368
     */
    MCAPI void _registerMobAttributes();
    /**
     * @symbol ?getCurrentSwingDuration@Mob@@IEAAHXZ
     * @hash   -1238980649
     */
    MCAPI int getCurrentSwingDuration();
    /**
     * @symbol ?saveOffhand@Mob@@IEBA?AV?$unique_ptr@VListTag@@U?$default_delete@VListTag@@@std@@@std@@XZ
     * @hash   -908665196
     */
    MCAPI std::unique_ptr<class ListTag> saveOffhand() const;
    /**
     * @symbol ?tickEffects@Mob@@IEAAXXZ
     * @hash   -761693096
     */
    MCAPI void tickEffects();
    /**
     * @symbol ?updateAttackAnim@Mob@@IEAAXXZ
     * @hash   1978354229
     */
    MCAPI void updateAttackAnim();
    /**
     * @symbol ?updateGlidingDurability@Mob@@IEAA_NXZ
     * @hash   908473279
     */
    MCAPI bool updateGlidingDurability();
    /**
     * @symbol ?_jumpFromGround@Mob@@KAXAEAUIMobMovementProxy@@@Z
     * @hash   1953634006
     */
    MCAPI static void _jumpFromGround(struct IMobMovementProxy &);

//private:
    /**
     * @symbol ?_getJumpEffectAddend@Mob@@AEAAMXZ
     * @hash   463798916
     */
    MCAPI float _getJumpEffectAddend();
    /**
     * @symbol ?_initHardCodedComponents@Mob@@AEAA_NXZ
     * @hash   1852635113
     */
    MCAPI bool _initHardCodedComponents();
    /**
     * @symbol ?_initialize@Mob@@AEAAXAEAVEntityContext@@@Z
     * @hash   -105185547
     */
    MCAPI void _initialize(class EntityContext &);
    /**
     * @symbol ?_saveArmor@Mob@@AEBA?AV?$unique_ptr@VListTag@@U?$default_delete@VListTag@@@std@@@std@@XZ
     * @hash   937473807
     */
    MCAPI std::unique_ptr<class ListTag> _saveArmor() const;
    /**
     * @symbol ?_updateSprintingState@Mob@@AEAAXXZ
     * @hash   -1593548259
     */
    MCAPI void _updateSprintingState();
    /**
     * @symbol ?_verifyAttributes@Mob@@AEAAXXZ
     * @hash   -1203803909
     */
    MCAPI void _verifyAttributes();
    /**
     * @symbol ?_executeDash@Mob@@CAXAEAV1@AEAUIMobMovementProxy@@@Z
     * @hash   -2062814749
     */
    MCAPI static void _executeDash(class Mob &, struct IMobMovementProxy &);
    /**
     * @symbol ?_tryApplyingLevitation@Mob@@CA_NAEBUIMobMovementProxy@@AEAVVec3@@@Z
     * @hash   368220608
     */
    MCAPI static bool _tryApplyingLevitation(struct IMobMovementProxy const &, class Vec3 &);

protected:
    /**
     * @symbol ?MAX_INACTIVITY_TIMER@Mob@@1HB
     * @hash   962153587
     */
    MCAPI static int const MAX_INACTIVITY_TIMER;

private:

};
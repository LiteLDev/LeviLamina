/**
 * @file  SendEventGoal.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class SendEventGoal.
 *
 */
class SendEventGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_SENDEVENTGOAL
public:
    class SendEventGoal& operator=(class SendEventGoal const &) = delete;
    SendEventGoal(class SendEventGoal const &) = delete;
    SendEventGoal() = delete;
#endif

public:
    /**
     * @vftbl  0
     * @hash   2070689907
     */
    virtual ~SendEventGoal();
    /**
     * @vftbl  1
     * @symbol ?canUse@SendEventGoal@@UEAA_NXZ
     * @hash   1172984267
     */
    virtual bool canUse();
    /**
     * @vftbl  2
     * @symbol ?canContinueToUse@SendEventGoal@@UEAA_NXZ
     * @hash   2039825689
     */
    virtual bool canContinueToUse();
    /**
     * @vftbl  3
     * @hash   -1264449677
     */
    virtual void __unk_vfn_3();
    /**
     * @vftbl  4
     * @symbol ?start@SendEventGoal@@UEAAXXZ
     * @hash   2030080740
     */
    virtual void start();
    /**
     * @vftbl  5
     * @symbol ?stop@SendEventGoal@@UEAAXXZ
     * @hash   1634894180
     */
    virtual void stop();
    /**
     * @vftbl  6
     * @symbol ?tick@SendEventGoal@@UEAAXXZ
     * @hash   1150541503
     */
    virtual void tick();
    /**
     * @vftbl  7
     * @symbol ?appendDebugInfo@SendEventGoal@@UEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   2122200853
     */
    virtual void appendDebugInfo(std::string &) const;
    /**
     * @symbol ??0SendEventGoal@@QEAA@AEAVMob@@AEBV?$vector@USendEventData@@V?$allocator@USendEventData@@@std@@@std@@@Z
     * @hash   -483145867
     */
    MCAPI SendEventGoal(class Mob &, std::vector<struct SendEventData> const &);

//private:
    /**
     * @symbol ?_selectBestSpell@SendEventGoal@@AEAAHXZ
     * @hash   271696501
     */
    MCAPI int _selectBestSpell();

private:

};
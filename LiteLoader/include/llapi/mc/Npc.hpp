/**
 * @file  Npc.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Mob.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Npc.
 *
 */
class Npc : public Mob {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_NPC
public:
    class Npc& operator=(class Npc const &) = delete;
    Npc(class Npc const &) = delete;
    Npc() = delete;
#endif

public:
    /**
     * @vftbl  10
     * @symbol ?reloadHardcoded@Npc@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   1642708332
     */
    virtual void reloadHardcoded(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  12
     * @symbol ?initializeComponents@Npc@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   -1977860833
     */
    virtual void initializeComponents(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  16
     * @hash   -1646037585
     */
    virtual ~Npc();
    /**
     * @vftbl  42
     * @hash   -155073678
     */
    virtual void __unk_vfn_42();
    /**
     * @vftbl  62
     * @symbol ?canShowNameTag@Npc@@UEBA_NXZ
     * @hash   1999531913
     */
    virtual bool canShowNameTag() const;
    /**
     * @vftbl  63
     * @hash   -96891855
     */
    virtual void __unk_vfn_63();
    /**
     * @vftbl  67
     * @symbol ?getFormattedNameTag@Npc@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   -380686030
     */
    virtual std::string getFormattedNameTag() const;
    /**
     * @vftbl  70
     * @hash   -63575907
     */
    virtual void __unk_vfn_70();
    /**
     * @vftbl  84
     * @hash   -31252672
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -35939469
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  90
     * @hash   -13774965
     */
    virtual void __unk_vfn_90();
    /**
     * @vftbl  98
     * @hash   1070563
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  101
     * @hash   1421489202
     */
    virtual void __unk_vfn_101();
    /**
     * @vftbl  108
     * @hash   1435411209
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  110
     * @hash   1456652192
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  111
     * @hash   1457575713
     */
    virtual void __unk_vfn_111();
    /**
     * @vftbl  113
     * @hash   1459422755
     */
    virtual void __unk_vfn_113();
    /**
     * @vftbl  183
     * @hash   1602074556
     */
    virtual void __unk_vfn_183();
    /**
     * @vftbl  195
     * @symbol ?canBePulledIntoVehicle@Npc@@UEBA_NXZ
     * @hash   -148495924
     */
    virtual bool canBePulledIntoVehicle() const;
    /**
     * @vftbl  197
     * @hash   1692150047
     */
    virtual void __unk_vfn_197();
    /**
     * @vftbl  204
     * @symbol ?buildDebugInfo@Npc@@UEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   1555192997
     */
    virtual void buildDebugInfo(std::string &) const;
    /**
     * @vftbl  212
     * @symbol ?canBeAffected@Npc@@UEBA_NI@Z
     * @hash   -1570629094
     */
    virtual bool canBeAffected(unsigned int) const;
    /**
     * @vftbl  222
     * @hash   -1937633230
     */
    virtual void __unk_vfn_222();
    /**
     * @vftbl  223
     * @hash   -1919411709
     */
    virtual void __unk_vfn_223();
    /**
     * @vftbl  245
     * @hash   -1918058621
     */
    virtual void __unk_vfn_245();
    /**
     * @vftbl  248
     * @hash   -511059482
     */
    virtual void __unk_vfn_248();
    /**
     * @vftbl  250
     * @symbol ?die@Npc@@UEAAXAEBVActorDamageSource@@@Z
     * @hash   733647364
     */
    virtual void die(class ActorDamageSource const &);
    /**
     * @vftbl  266
     * @hash   -1809581902
     */
    virtual void __unk_vfn_266();
    /**
     * @vftbl  267
     * @symbol ?_hurt@Npc@@MEAA_NAEBVActorDamageSource@@M_N1@Z
     * @hash   432816143
     */
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  274
     * @hash   -1775342433
     */
    virtual void __unk_vfn_274();
    /**
     * @vftbl  280
     * @symbol ?_onSizeUpdated@Npc@@EEAAXXZ
     * @hash   -225361180
     */
    virtual void _onSizeUpdated();
    /**
     * @vftbl  281
     * @hash   -1807236101
     */
    virtual void __unk_vfn_281();
    /**
     * @vftbl  282
     * @symbol ?knockback@Npc@@UEAAXPEAVActor@@HMMMMM@Z
     * @hash   -734498459
     */
    virtual void knockback(class Actor *, int, float, float, float, float, float);
    /**
     * @vftbl  289
     * @hash   1042759315
     */
    virtual void __unk_vfn_289();
    /**
     * @vftbl  308
     * @hash   -1142300981
     */
    virtual void __unk_vfn_308();
    /**
     * @vftbl  312
     * @hash   -1061460700
     */
    virtual void __unk_vfn_312();
    /**
     * @vftbl  345
     * @symbol ?canExistWhenDisallowMob@Npc@@UEBA_NXZ
     * @hash   -1467710581
     */
    virtual bool canExistWhenDisallowMob() const;
    /**
     * @vftbl  346
     * @hash   -979336523
     */
    virtual void __unk_vfn_346();
    /**
     * @vftbl  355
     * @symbol ?newServerAiStep@Npc@@UEAAXXZ
     * @hash   -1553669235
     */
    virtual void newServerAiStep();
    /**
     * @vftbl  356
     * @symbol ?_serverAiMobStep@Npc@@MEAAXXZ
     * @hash   -1452152559
     */
    virtual void _serverAiMobStep();
    /**
     * @vftbl  360
     * @hash   -927619347
     */
    virtual void __unk_vfn_360();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_NPC
    /**
     * @symbol ?breaksFallingBlocks@Npc@@UEBA_NXZ
     * @hash   -372372032
     */
    MCVAPI bool breaksFallingBlocks() const;
    /**
     * @symbol ?interactPreventDefault@Npc@@UEAA_NXZ
     * @hash   -9082841
     */
    MCVAPI bool interactPreventDefault();
    /**
     * @symbol ?isFishable@Npc@@UEBA_NXZ
     * @hash   1554865587
     */
    MCVAPI bool isFishable() const;
    /**
     * @symbol ?isTargetable@Npc@@UEBA_NXZ
     * @hash   -112837492
     */
    MCVAPI bool isTargetable() const;
    /**
     * @symbol ?useNewAi@Npc@@UEBA_NXZ
     * @hash   225539880
     */
    MCVAPI bool useNewAi() const;
#endif
    /**
     * @symbol ??0Npc@@QEAA@PEAVActorDefinitionGroup@@AEBUActorDefinitionIdentifier@@AEAVEntityContext@@@Z
     * @hash   -483251
     */
    MCAPI Npc(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    /**
     * @symbol ?SKIN_ID_TAG@Npc@@2V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@B
     * @hash   -1192542991
     */
    MCAPI static std::string const SKIN_ID_TAG;
    /**
     * @symbol ?Skins@Npc@@2V?$vector@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@V?$allocator@U?$pair@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@@std@@@2@@std@@B
     * @hash   -193050386
     */
    MCAPI static std::vector<struct std::pair<std::string, std::string>> const Skins;

};
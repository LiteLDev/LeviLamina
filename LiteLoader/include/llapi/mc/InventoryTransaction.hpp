/**
 * @file  InventoryTransaction.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
#include "InventoryTransactionItemGroup.hpp"
#include "InventoryAction.hpp"

#undef BEFORE_EXTRA

/**
 * @brief MC class InventoryTransaction.
 *
 */
class InventoryTransaction {

#define AFTER_EXTRA
// Add Member There
public:
    std::unordered_map<class InventorySource, std::vector<class InventoryAction>> actions; // 0x0
    std::vector<class InventoryTransactionItemGroup> items;                                // 0x40

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_INVENTORYTRANSACTION
public:
    class InventoryTransaction& operator=(class InventoryTransaction const &) = delete;
    InventoryTransaction() = delete;
#endif

public:
    /**
     * @symbol ??0InventoryTransaction@@QEAA@AEBV0@@Z
     * @hash   -1322319103
     */
    MCAPI InventoryTransaction(class InventoryTransaction const &);
    /**
     * @symbol ?_logTransaction@InventoryTransaction@@QEBAX_N@Z
     * @hash   -672298228
     */
    MCAPI void _logTransaction(bool) const;
    /**
     * @symbol ?addAction@InventoryTransaction@@QEAAXAEBVInventoryAction@@@Z
     * @hash   -296640402
     */
    MCAPI void addAction(class InventoryAction const &);
    /**
     * @symbol ?executeFull@InventoryTransaction@@QEBA?AW4InventoryTransactionError@@AEAVPlayer@@_N@Z
     * @hash   1046359476
     */
    MCAPI enum class InventoryTransactionError executeFull(class Player &, bool) const;
    /**
     * @symbol ?forceBalanceTransaction@InventoryTransaction@@QEAAXXZ
     * @hash   -1741377341
     */
    MCAPI void forceBalanceTransaction();
    /**
     * @symbol ?getActions@InventoryTransaction@@QEBAAEBV?$vector@VInventoryAction@@V?$allocator@VInventoryAction@@@std@@@std@@AEBVInventorySource@@@Z
     * @hash   -113381627
     */
    MCAPI std::vector<class InventoryAction> const & getActions(class InventorySource const &) const;
    /**
     * @symbol ?getVerifyFunction@InventoryTransaction@@QEBA?AV?$function@$$A6A?AW4InventoryTransactionError@@AEAVPlayer@@AEBVInventoryAction@@_N@Z@std@@AEBVInventorySource@@@Z
     * @hash   724513784
     */
    MCAPI class std::function<enum class InventoryTransactionError (class Player &, class InventoryAction const &, bool)> getVerifyFunction(class InventorySource const &) const;
    /**
     * @symbol ?postLoadItems@InventoryTransaction@@QEAAXAEAVBlockPalette@@_N@Z
     * @hash   1359049899
     */
    MCAPI void postLoadItems(class BlockPalette &, bool);
    /**
     * @symbol ?recalculateBalance@InventoryTransaction@@QEAAXXZ
     * @hash   -1329173003
     */
    MCAPI void recalculateBalance();
    /**
     * @symbol ?serialize@InventoryTransaction@@QEBAXAEAVBinaryStream@@_N@Z
     * @hash   -2033614679
     */
    MCAPI void serialize(class BinaryStream &, bool) const;
    /**
     * @symbol ?verifyBalance@InventoryTransaction@@QEBA_NXZ
     * @hash   1237000530
     */
    MCAPI bool verifyBalance() const;
    /**
     * @symbol ?verifyFull@InventoryTransaction@@QEBA?AW4InventoryTransactionError@@AEAVPlayer@@_N@Z
     * @hash   -1547183978
     */
    MCAPI enum class InventoryTransactionError verifyFull(class Player &, bool) const;
    /**
     * @symbol ??1InventoryTransaction@@QEAA@XZ
     * @hash   -1304318452
     */
    MCAPI ~InventoryTransaction();
    /**
     * @symbol ?checkTransactionItemsMatch@InventoryTransaction@@SA_NAEBVItemStack@@0@Z
     * @hash   -1258666817
     */
    MCAPI static bool checkTransactionItemsMatch(class ItemStack const &, class ItemStack const &);
    /**
     * @symbol ?deserialize@InventoryTransaction@@SA?AV1@AEAVReadOnlyBinaryStream@@@Z
     * @hash   -186259502
     */
    MCAPI static class InventoryTransaction deserialize(class ReadOnlyBinaryStream &);
    /**
     * @symbol ?getInventoryTransactionErrorName@InventoryTransaction@@SA?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4InventoryTransactionError@@@Z
     * @hash   -215775441
     */
    MCAPI static std::string const getInventoryTransactionErrorName(enum class InventoryTransactionError);

//private:
    /**
     * @symbol ?_dropCreatedItems@InventoryTransaction@@AEBAXAEAVPlayer@@@Z
     * @hash   -2035622406
     */
    MCAPI void _dropCreatedItems(class Player &) const;
    /**
     * @symbol ?addItemToContent@InventoryTransaction@@AEAAXAEBVItemStack@@H@Z
     * @hash   -1964224289
     */
    MCAPI void addItemToContent(class ItemStack const &, int);

private:
    /**
     * @symbol ?inventoryTransactionErrorMap@InventoryTransaction@@0V?$BidirectionalUnorderedMap@W4InventoryTransactionError@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@@B
     * @hash   389136647
     */
    MCAPI static class BidirectionalUnorderedMap<enum class InventoryTransactionError, std::string> const inventoryTransactionErrorMap;

};
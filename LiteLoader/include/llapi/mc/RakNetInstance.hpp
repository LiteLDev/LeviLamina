/**
 * @file  RakNetInstance.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "RakPeerHelper.hpp"
#include "Bedrock.hpp"
#include "RakNet.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class RakNetInstance.
 *
 */
class RakNetInstance {

#define AFTER_EXTRA
// Add Member There
public:
class RakNetNetworkPeer {
public:
    RakNetNetworkPeer() = delete;
    RakNetNetworkPeer(RakNetNetworkPeer const&) = delete;
    RakNetNetworkPeer(RakNetNetworkPeer const&&) = delete;
};
enum class NATState;

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_RAKNETINSTANCE
public:
    class RakNetInstance& operator=(class RakNetInstance const &) = delete;
    RakNetInstance(class RakNetInstance const &) = delete;
    RakNetInstance() = delete;
#endif

public:
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_RAKNETINSTANCE
    /**
     * @symbol ?_onDisable@RakNetInstance@@EEAAXXZ
     * @hash   -632982179
     */
    MCVAPI void _onDisable();
    /**
     * @symbol ?_onEnable@RakNetInstance@@EEAAXXZ
     * @hash   773471556
     */
    MCVAPI void _onEnable();
    /**
     * @symbol ?addConnectionStateListener@RakNetInstance@@UEAAXPEAVConnectionStateListener@Connector@@@Z
     * @hash   -1313816873
     */
    MCVAPI void addConnectionStateListener(class Connector::ConnectionStateListener *);
    /**
     * @symbol ?closeNetworkConnection@RakNetInstance@@UEAAXAEAVNetworkConnection@@@Z
     * @hash   -2088597861
     */
    MCVAPI void closeNetworkConnection(class NetworkConnection &);
    /**
     * @symbol ?connect@RakNetInstance@@UEAA_NAEBVGameConnectionInfo@Social@@0@Z
     * @hash   -1847072467
     */
    MCVAPI bool connect(class Social::GameConnectionInfo const &, class Social::GameConnectionInfo const &);
    /**
     * @symbol ?disconnect@RakNetInstance@@UEAAXXZ
     * @hash   425963325
     */
    MCVAPI void disconnect();
    /**
     * @symbol ?getConnectedGameInfo@RakNetInstance@@UEBAAEBVGameConnectionInfo@Social@@XZ
     * @hash   1849256391
     */
    MCVAPI class Social::GameConnectionInfo const & getConnectedGameInfo() const;
    /**
     * @symbol ?getIPv4Port@RakNetInstance@@UEBAGXZ
     * @hash   781542527
     */
    MCVAPI unsigned short getIPv4Port() const;
    /**
     * @symbol ?getIPv6Port@RakNetInstance@@UEBAGXZ
     * @hash   -1424515375
     */
    MCVAPI unsigned short getIPv6Port() const;
    /**
     * @symbol ?getLocalIp@RakNetInstance@@UEAA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   -1626864943
     */
    MCVAPI std::string getLocalIp();
    /**
     * @symbol ?getLocalIps@RakNetInstance@@UEBA?AV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@XZ
     * @hash   -1788486890
     */
    MCVAPI std::vector<std::string> getLocalIps() const;
    /**
     * @symbol ?getNatPunchInfo@RakNetInstance@@UEBA?AUNatPunchInfo@Connector@@XZ
     * @hash   -1152416907
     */
    MCVAPI struct Connector::NatPunchInfo getNatPunchInfo() const;
    /**
     * @symbol ?getPeer@RakNetInstance@@UEAAPEAVRakPeerInterface@RakNet@@XZ
     * @hash   -1136759925
     */
    MCVAPI class RakNet::RakPeerInterface * getPeer();
    /**
     * @symbol ?getPeer@RakNetInstance@@UEBAPEBVRakPeerInterface@RakNet@@XZ
     * @hash   -956902585
     */
    MCVAPI class RakNet::RakPeerInterface const * getPeer() const;
    /**
     * @symbol ?getPort@RakNetInstance@@UEBAGXZ
     * @hash   -837259254
     */
    MCVAPI unsigned short getPort() const;
    /**
     * @symbol ?getRefinedLocalIps@RakNetInstance@@UEBA?AV?$vector@USystemAddress@RakNet@@V?$allocator@USystemAddress@RakNet@@@std@@@std@@XZ
     * @hash   829071337
     */
    MCVAPI std::vector<struct RakNet::SystemAddress> getRefinedLocalIps() const;
    /**
     * @symbol ?getTransportIdentifier@RakNetInstance@@UEBA_KXZ
     * @hash   1109510998
     */
    MCVAPI unsigned __int64 getTransportIdentifier() const;
    /**
     * @symbol ?host@RakNetInstance@@UEAA_NAEBUConnectionDefinition@@@Z
     * @hash   1839524338
     */
    MCVAPI bool host(struct ConnectionDefinition const &);
    /**
     * @symbol ?isIPv4Supported@RakNetInstance@@UEBA_NXZ
     * @hash   1261660465
     */
    MCVAPI bool isIPv4Supported() const;
    /**
     * @symbol ?isIPv6Supported@RakNetInstance@@UEBA_NXZ
     * @hash   -987813697
     */
    MCVAPI bool isIPv6Supported() const;
    /**
     * @symbol ?isServer@RakNetInstance@@UEBA_NXZ
     * @hash   475825791
     */
    MCVAPI bool isServer() const;
    /**
     * @symbol ?removeConnectionStateListener@RakNetInstance@@UEAAXPEAVConnectionStateListener@Connector@@@Z
     * @hash   -547848806
     */
    MCVAPI void removeConnectionStateListener(class Connector::ConnectionStateListener *);
    /**
     * @symbol ?runEvents@RakNetInstance@@UEAAXXZ
     * @hash   357488565
     */
    MCVAPI void runEvents();
    /**
     * @symbol ?setupNatPunch@RakNetInstance@@UEAAX_N@Z
     * @hash   -123265583
     */
    MCVAPI void setupNatPunch(bool);
    /**
     * @symbol ?startNatPunchingClient@RakNetInstance@@UEAAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@G@Z
     * @hash   1382855376
     */
    MCVAPI void startNatPunchingClient(std::string const &, unsigned short);
    /**
     * @symbol ?tick@RakNetInstance@@UEAAXXZ
     * @hash   59288686
     */
    MCVAPI void tick();
    /**
     * @symbol ??1RakNetInstance@@UEAA@XZ
     * @hash   1107830420
     */
    MCVAPI ~RakNetInstance();
#endif
    /**
     * @symbol ??0RakNetInstance@@QEAA@AEAUConnectionCallbacks@0@AEAVIPSupportInterface@RakPeerHelper@@AEBV?$NonOwnerPointer@VAppPlatform@@@Bedrock@@@Z
     * @hash   -1776856160
     */
    MCAPI RakNetInstance(struct RakNetInstance::ConnectionCallbacks &, class RakPeerHelper::IPSupportInterface &, class Bedrock::NonOwnerPointer<class AppPlatform> const &);

//private:
    /**
     * @symbol ?_changeNatState@RakNetInstance@@AEAAXW4NATState@1@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   1859298910
     */
    MCAPI void _changeNatState(enum class RakNetInstance::NATState, int, std::string const &);
    /**
     * @symbol ?_createPeer@RakNetInstance@@AEAA?AV?$shared_ptr@VRakNetNetworkPeer@RakNetInstance@@@std@@AEBVNetworkIdentifier@@@Z
     * @hash   -749980344
     */
    MCAPI class std::shared_ptr<class RakNetInstance::RakNetNetworkPeer> _createPeer(class NetworkIdentifier const &);
    /**
     * @symbol ?_openNatConnection@RakNetInstance@@AEAAXAEBUSystemAddress@RakNet@@@Z
     * @hash   -792843172
     */
    MCAPI void _openNatConnection(struct RakNet::SystemAddress const &);
    /**
     * @symbol ?_pingNatService@RakNetInstance@@AEAAX_N@Z
     * @hash   986220681
     */
    MCAPI void _pingNatService(bool);
    /**
     * @symbol ?_storeLocalIP@RakNetInstance@@AEAAXXZ
     * @hash   -1885291434
     */
    MCAPI void _storeLocalIP();

private:

};
/**
 * @file  EnderDragon.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Monster.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class EnderDragon.
 *
 */
class EnderDragon : public Monster {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_ENDERDRAGON
public:
    class EnderDragon& operator=(class EnderDragon const &) = delete;
    EnderDragon(class EnderDragon const &) = delete;
    EnderDragon() = delete;
#endif

public:
    /**
     * @vftbl  10
     * @symbol ?reloadHardcoded@EnderDragon@@UEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   -115573550
     */
    virtual void reloadHardcoded(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  16
     * @hash   -1172919607
     */
    virtual ~EnderDragon();
    /**
     * @vftbl  20
     * @symbol ?remove@EnderDragon@@UEAAXXZ
     * @hash   817459568
     */
    virtual void remove();
    /**
     * @vftbl  42
     * @hash   -147616318
     */
    virtual void __unk_vfn_42();
    /**
     * @vftbl  63
     * @hash   -96891855
     */
    virtual void __unk_vfn_63();
    /**
     * @vftbl  70
     * @hash   -63575907
     */
    virtual void __unk_vfn_70();
    /**
     * @vftbl  82
     * @symbol ?getShadowRadius@EnderDragon@@UEBAMXZ
     * @hash   -1165550485
     */
    virtual float getShadowRadius() const;
    /**
     * @vftbl  83
     * @symbol ?getHeadLookVector@EnderDragon@@UEBA?AVVec3@@M@Z
     * @hash   2100542531
     */
    virtual class Vec3 getHeadLookVector(float) const;
    /**
     * @vftbl  84
     * @hash   -31252672
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -35939469
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  90
     * @hash   -6317605
     */
    virtual void __unk_vfn_90();
    /**
     * @vftbl  94
     * @symbol ?isImmobile@EnderDragon@@UEBA_NXZ
     * @hash   378493357
     */
    virtual bool isImmobile() const;
    /**
     * @vftbl  98
     * @hash   1070563
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  101
     * @hash   1421489202
     */
    virtual void __unk_vfn_101();
    /**
     * @vftbl  108
     * @hash   1435411209
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  110
     * @hash   1456652192
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  111
     * @hash   1450118353
     */
    virtual void __unk_vfn_111();
    /**
     * @vftbl  113
     * @hash   1459422755
     */
    virtual void __unk_vfn_113();
    /**
     * @vftbl  122
     * @symbol ?setSitting@EnderDragon@@UEAAX_N@Z
     * @hash   -460341530
     */
    virtual void setSitting(bool);
    /**
     * @vftbl  137
     * @symbol ?isInvulnerableTo@EnderDragon@@UEBA_NAEBVActorDamageSource@@@Z
     * @hash   1140664841
     */
    virtual bool isInvulnerableTo(class ActorDamageSource const &) const;
    /**
     * @vftbl  144
     * @symbol ?handleEntityEvent@EnderDragon@@UEAAXW4ActorEvent@@H@Z
     * @hash   -1660235861
     */
    virtual void handleEntityEvent(enum class ActorEvent, int);
    /**
     * @vftbl  182
     * @symbol ?canChangeDimensionsUsingPortal@EnderDragon@@UEBA_NXZ
     * @hash   -190869568
     */
    virtual bool canChangeDimensionsUsingPortal() const;
    /**
     * @vftbl  183
     * @hash   1602074556
     */
    virtual void __unk_vfn_183();
    /**
     * @vftbl  195
     * @symbol ?canBePulledIntoVehicle@EnderDragon@@UEBA_NXZ
     * @hash   148496690
     */
    virtual bool canBePulledIntoVehicle() const;
    /**
     * @vftbl  197
     * @hash   1692150047
     */
    virtual void __unk_vfn_197();
    /**
     * @vftbl  212
     * @symbol ?canBeAffected@EnderDragon@@UEBA_NI@Z
     * @hash   57460596
     */
    virtual bool canBeAffected(unsigned int) const;
    /**
     * @vftbl  222
     * @hash   -1937633230
     */
    virtual void __unk_vfn_222();
    /**
     * @vftbl  223
     * @hash   -1919411709
     */
    virtual void __unk_vfn_223();
    /**
     * @vftbl  245
     * @hash   -1918058621
     */
    virtual void __unk_vfn_245();
    /**
     * @vftbl  248
     * @hash   -511059482
     */
    virtual void __unk_vfn_248();
    /**
     * @vftbl  250
     * @symbol ?die@EnderDragon@@UEAAXAEBVActorDamageSource@@@Z
     * @hash   -1457621042
     */
    virtual void die(class ActorDamageSource const &);
    /**
     * @vftbl  264
     * @symbol ?updateEntitySpecificMolangVariables@EnderDragon@@UEAAXAEAVRenderParams@@@Z
     * @hash   -1273722605
     */
    virtual void updateEntitySpecificMolangVariables(class RenderParams &);
    /**
     * @vftbl  266
     * @hash   -1809581902
     */
    virtual void __unk_vfn_266();
    /**
     * @vftbl  267
     * @symbol ?_hurt@EnderDragon@@MEAA_NAEBVActorDamageSource@@M_N1@Z
     * @hash   -1144356219
     */
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  274
     * @hash   -1775342433
     */
    virtual void __unk_vfn_274();
    /**
     * @vftbl  280
     * @symbol ?_onSizeUpdated@EnderDragon@@EEAAXXZ
     * @hash   117577402
     */
    virtual void _onSizeUpdated();
    /**
     * @vftbl  281
     * @hash   -1807236101
     */
    virtual void __unk_vfn_281();
    /**
     * @vftbl  289
     * @hash   1042759315
     */
    virtual void __unk_vfn_289();
    /**
     * @vftbl  295
     * @symbol ?aiStep@EnderDragon@@UEAAXXZ
     * @hash   -93783872
     */
    virtual void aiStep();
    /**
     * @vftbl  308
     * @hash   -1142300981
     */
    virtual void __unk_vfn_308();
    /**
     * @vftbl  312
     * @hash   -1061460700
     */
    virtual void __unk_vfn_312();
    /**
     * @vftbl  346
     * @hash   -979336523
     */
    virtual void __unk_vfn_346();
    /**
     * @vftbl  358
     * @symbol ?tickDeath@EnderDragon@@MEAAXXZ
     * @hash   -1520456388
     */
    virtual void tickDeath();
    /**
     * @vftbl  360
     * @hash   -927619347
     */
    virtual void __unk_vfn_360();
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_ENDERDRAGON
    /**
     * @symbol ?canExistInPeaceful@EnderDragon@@UEBA_NXZ
     * @hash   -324351704
     */
    MCVAPI bool canExistInPeaceful() const;
    /**
     * @symbol ?isFishable@EnderDragon@@UEBA_NXZ
     * @hash   -416662247
     */
    MCVAPI bool isFishable() const;
#endif
    /**
     * @symbol ??0EnderDragon@@QEAA@PEAVActorDefinitionGroup@@AEBUActorDefinitionIdentifier@@AEAVEntityContext@@@Z
     * @hash   549918391
     */
    MCAPI EnderDragon(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    /**
     * @symbol ?dieNaturally@EnderDragon@@QEAAXXZ
     * @hash   895629103
     */
    MCAPI void dieNaturally();
    /**
     * @symbol ?findClosestNode@EnderDragon@@QEAAHAEBVVec3@@@Z
     * @hash   -997772931
     */
    MCAPI int findClosestNode(class Vec3 const &);
    /**
     * @symbol ?findClosestNode@EnderDragon@@QEAAHXZ
     * @hash   -46471426
     */
    MCAPI int findClosestNode();
    /**
     * @symbol ?findPath@EnderDragon@@QEAA?AV?$unique_ptr@VPath@@U?$default_delete@VPath@@@std@@@std@@HHPEAVPathfinderNode@@@Z
     * @hash   -616871146
     */
    MCAPI std::unique_ptr<class Path> findPath(int, int, class PathfinderNode *);
    /**
     * @symbol ?getFlameCount@EnderDragon@@QEBAHXZ
     * @hash   -499576932
     */
    MCAPI int getFlameCount() const;
    /**
     * @symbol ?getFlapTime@EnderDragon@@QEBAMXZ
     * @hash   903961286
     */
    MCAPI float getFlapTime() const;
    /**
     * @symbol ?getHeadPos@EnderDragon@@QEBA?AVBlockPos@@XZ
     * @hash   -353375188
     */
    MCAPI class BlockPos getHeadPos() const;
    /**
     * @symbol ?getLatencyPos@EnderDragon@@QEBA?BV?$vector@MV?$allocator@M@std@@@std@@HM@Z
     * @hash   1698145834
     */
    MCAPI std::vector<float> const getLatencyPos(int, float) const;
    /**
     * @symbol ?getNumCrystalsAlive@EnderDragon@@QEAAHXZ
     * @hash   -1249968950
     */
    MCAPI int getNumCrystalsAlive();
    /**
     * @symbol ?getTargetPos@EnderDragon@@QEBA?AVVec3@@XZ
     * @hash   -2067074822
     */
    MCAPI class Vec3 getTargetPos() const;
    /**
     * @symbol ?incrementFlameCount@EnderDragon@@QEAAXXZ
     * @hash   974811723
     */
    MCAPI void incrementFlameCount();
    /**
     * @symbol ?onCrystalDestroyed@EnderDragon@@QEAAXAEBVEnderCrystal@@VBlockPos@@AEBVActorDamageSource@@@Z
     * @hash   -505301866
     */
    MCAPI void onCrystalDestroyed(class EnderCrystal const &, class BlockPos, class ActorDamageSource const &);
    /**
     * @symbol ?postAiStep@EnderDragon@@QEAAXXZ
     * @hash   -1353860837
     */
    MCAPI void postAiStep();
    /**
     * @symbol ?resetFlameCount@EnderDragon@@QEAAXXZ
     * @hash   -1950855717
     */
    MCAPI void resetFlameCount();
    /**
     * @symbol ?setDragonKilledCallback@EnderDragon@@QEAAXV?$function@$$A6AXAEAVEnderDragon@@@Z@std@@@Z
     * @hash   152199389
     */
    MCAPI void setDragonKilledCallback(class std::function<void (class EnderDragon &)>);
    /**
     * @symbol ?setHasDragonPreviouslyBeenKilled@EnderDragon@@QEAAX_N@Z
     * @hash   -1373329950
     */
    MCAPI void setHasDragonPreviouslyBeenKilled(bool);
    /**
     * @symbol ?setNumCrystalsAlive@EnderDragon@@QEAAXH@Z
     * @hash   -1721276786
     */
    MCAPI void setNumCrystalsAlive(int);
    /**
     * @symbol ?setTargetPos@EnderDragon@@QEAAXVVec3@@@Z
     * @hash   -729525714
     */
    MCAPI void setTargetPos(class Vec3);
    /**
     * @symbol ?setTurnSpeed@EnderDragon@@QEAAXM@Z
     * @hash   -2073415130
     */
    MCAPI void setTurnSpeed(float);

//protected:
    /**
     * @symbol ?_hurt@EnderDragon@@IEAA_NPEAVAABB@@AEBVActorDamageSource@@M@Z
     * @hash   -2064668304
     */
    MCAPI bool _hurt(class AABB *, class ActorDamageSource const &, float);

//private:
    /**
     * @symbol ?_checkCrystals@EnderDragon@@AEAAXXZ
     * @hash   -1648986393
     */
    MCAPI void _checkCrystals();
    /**
     * @symbol ?_checkWalls@EnderDragon@@AEAA_NVAABB@@@Z
     * @hash   -1591209752
     */
    MCAPI bool _checkWalls(class AABB);
    /**
     * @symbol ?_hurtEntities@EnderDragon@@AEBAXV?$span@V?$not_null@PEAVActor@@@gsl@@$0?0@gsl@@@Z
     * @hash   -254478298
     */
    MCAPI void _hurtEntities(class gsl::span<class gsl::not_null<class Actor *>, -1>) const;
    /**
     * @symbol ?_knockBack@EnderDragon@@AEBAXV?$span@V?$not_null@PEAVActor@@@gsl@@$0?0@gsl@@@Z
     * @hash   2144412121
     */
    MCAPI void _knockBack(class gsl::span<class gsl::not_null<class Actor *>, -1>) const;
    /**
     * @symbol ?_reconstructPath@EnderDragon@@AEAA?AV?$unique_ptr@VPath@@U?$default_delete@VPath@@@std@@@std@@AEAVPathfinderNode@@0W4PathCompletionType@@@Z
     * @hash   -1481588037
     */
    MCAPI std::unique_ptr<class Path> _reconstructPath(class PathfinderNode &, class PathfinderNode &, enum class PathCompletionType);
    /**
     * @symbol ?_isDragonImmuneBlock@EnderDragon@@CA_NAEBVBlockLegacy@@@Z
     * @hash   135020474
     */
    MCAPI static bool _isDragonImmuneBlock(class BlockLegacy const &);

protected:

private:
    /**
     * @symbol ?GROWL_INTERVAL_MAX@EnderDragon@@0HA
     * @hash   90595324
     */
    MCAPI static int GROWL_INTERVAL_MAX;
    /**
     * @symbol ?GROWL_INTERVAL_MIN@EnderDragon@@0HA
     * @hash   109528358
     */
    MCAPI static int GROWL_INTERVAL_MIN;
    /**
     * @symbol ?MAX_PATH_RADIUS@EnderDragon@@0HA
     * @hash   187878885
     */
    MCAPI static int MAX_PATH_RADIUS;
    /**
     * @symbol ?SITTING_ALLOWED_DAMAGE_PERCENTAGE@EnderDragon@@0MA
     * @hash   1970149123
     */
    MCAPI static float SITTING_ALLOWED_DAMAGE_PERCENTAGE;

};
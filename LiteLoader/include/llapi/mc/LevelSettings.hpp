/**
 * @file  LevelSettings.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Social.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class LevelSettings.
 *
 */
class LevelSettings {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_LEVELSETTINGS
public:
    class LevelSettings& operator=(class LevelSettings const &) = delete;
#endif

public:
    /**
     * @symbol ??0LevelSettings@@QEAA@AEBVLevelData@@V?$AutomaticID@VDimension@@H@@@Z
     * @hash   975558297
     */
    MCAPI LevelSettings(class LevelData const &, class AutomaticID<class Dimension, int>);
    /**
     * @symbol ??0LevelSettings@@QEAA@XZ
     * @hash   -850970125
     */
    MCAPI LevelSettings();
    /**
     * @symbol ??0LevelSettings@@QEAA@$$QEAV0@@Z
     * @hash   -420038905
     */
    MCAPI LevelSettings(class LevelSettings &&);
    /**
     * @symbol ??0LevelSettings@@QEAA@AEBV0@@Z
     * @hash   -1308174415
     */
    MCAPI LevelSettings(class LevelSettings const &);
    /**
     * @symbol ?achievementsWillBeDisabledOnLoad@LevelSettings@@QEBA_NXZ
     * @hash   -1382739198
     */
    MCAPI bool achievementsWillBeDisabledOnLoad() const;
    /**
     * @symbol ?educationFeaturesEnabled@LevelSettings@@QEBA_NXZ
     * @hash   -578798638
     */
    MCAPI bool educationFeaturesEnabled() const;
    /**
     * @symbol ?educationProductID@LevelSettings@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   -433132352
     */
    MCAPI std::string const & educationProductID() const;
    /**
     * @symbol ?forceGameType@LevelSettings@@QEBA_NXZ
     * @hash   1769248064
     */
    MCAPI bool forceGameType() const;
    /**
     * @symbol ?getBaseGameVersion@LevelSettings@@QEBAAEBVBaseGameVersion@@XZ
     * @hash   573473076
     */
    MCAPI class BaseGameVersion const & getBaseGameVersion() const;
    /**
     * @symbol ?getBiomeOverride@LevelSettings@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   -406174392
     */
    MCAPI std::string const & getBiomeOverride() const;
    /**
     * @symbol ?getChatRestrictionLevel@LevelSettings@@QEBA?AW4ChatRestrictionLevel@@XZ
     * @hash   1434130504
     */
    MCAPI enum class ChatRestrictionLevel getChatRestrictionLevel() const;
    /**
     * @symbol ?getCustomSkinsDisabled@LevelSettings@@QEBA_NXZ
     * @hash   -842572494
     */
    MCAPI bool getCustomSkinsDisabled() const;
    /**
     * @symbol ?getDefaultPermissions@LevelSettings@@QEBAAEBVPermissionsHandler@@XZ
     * @hash   -405092048
     */
    MCAPI class PermissionsHandler const & getDefaultPermissions() const;
    /**
     * @symbol ?getDefaultSpawn@LevelSettings@@QEBAAEBVBlockPos@@XZ
     * @hash   57872814
     */
    MCAPI class BlockPos const & getDefaultSpawn() const;
    /**
     * @symbol ?getDisablePlayerInteractions@LevelSettings@@QEBA_NXZ
     * @hash   -1734351822
     */
    MCAPI bool getDisablePlayerInteractions() const;
    /**
     * @symbol ?getEduSharedUriResource@LevelSettings@@QEBAAEBUEduSharedUriResource@@XZ
     * @hash   587683292
     */
    MCAPI struct EduSharedUriResource const & getEduSharedUriResource() const;
    /**
     * @symbol ?getEducationEditionOffer@LevelSettings@@QEBA?AW4EducationEditionOffer@@XZ
     * @hash   1556783676
     */
    MCAPI enum class EducationEditionOffer getEducationEditionOffer() const;
    /**
     * @symbol ?getEducationLevelSettings@LevelSettings@@QEBAAEBV?$optional@UEducationLevelSettings@@@std@@XZ
     * @hash   -1811982813
     */
    MCAPI class std::optional<struct EducationLevelSettings> const & getEducationLevelSettings() const;
    /**
     * @symbol ?getExperiments@LevelSettings@@QEBAAEBVExperiments@@XZ
     * @hash   1446506548
     */
    MCAPI class Experiments const & getExperiments() const;
    /**
     * @symbol ?getGameDifficulty@LevelSettings@@QEBA?AW4Difficulty@@XZ
     * @hash   -1071391998
     */
    MCAPI enum class Difficulty getGameDifficulty() const;
    /**
     * @symbol ?getGameRules@LevelSettings@@QEBAAEBVGameRules@@XZ
     * @hash   -1113857884
     */
    MCAPI class GameRules const & getGameRules() const;
    /**
     * @symbol ?getGameType@LevelSettings@@QEBA?AW4GameType@@XZ
     * @hash   -1799500400
     */
    MCAPI enum class GameType getGameType() const;
    /**
     * @symbol ?getGenerator@LevelSettings@@QEBA?AW4GeneratorType@@XZ
     * @hash   -605147608
     */
    MCAPI enum class GeneratorType getGenerator() const;
    /**
     * @symbol ?getImmutableWorld@LevelSettings@@QEBA_NXZ
     * @hash   -1525660288
     */
    MCAPI bool getImmutableWorld() const;
    /**
     * @symbol ?getLanBroadcastIntent@LevelSettings@@QEBA_NXZ
     * @hash   1796225264
     */
    MCAPI bool getLanBroadcastIntent() const;
    /**
     * @symbol ?getLightningLevel@LevelSettings@@QEBAMXZ
     * @hash   1675179462
     */
    MCAPI float getLightningLevel() const;
    /**
     * @symbol ?getLimitedWorldDepth@LevelSettings@@QEBAHXZ
     * @hash   -1802025136
     */
    MCAPI int getLimitedWorldDepth() const;
    /**
     * @symbol ?getLimitedWorldWidth@LevelSettings@@QEBAHXZ
     * @hash   -557200746
     */
    MCAPI int getLimitedWorldWidth() const;
    /**
     * @symbol ?getMultiplayerGameIntent@LevelSettings@@QEBA_NXZ
     * @hash   799094706
     */
    MCAPI bool getMultiplayerGameIntent() const;
    /**
     * @symbol ?getNetherType@LevelSettings@@QEBA?AW4NetherWorldType@@XZ
     * @hash   -1517160366
     */
    MCAPI enum class NetherWorldType getNetherType() const;
    /**
     * @symbol ?getOnlySpawnV1Villagers@LevelSettings@@QEBA_NXZ
     * @hash   -1143569728
     */
    MCAPI bool getOnlySpawnV1Villagers() const;
    /**
     * @symbol ?getPersonaDisabled@LevelSettings@@QEBA_NXZ
     * @hash   -1546829678
     */
    MCAPI bool getPersonaDisabled() const;
    /**
     * @symbol ?getPlatformBroadcastIntent@LevelSettings@@QEBA?AW4GamePublishSetting@Social@@XZ
     * @hash   -1132283320
     */
    MCAPI enum class Social::GamePublishSetting getPlatformBroadcastIntent() const;
    /**
     * @symbol ?getRainLevel@LevelSettings@@QEBAMXZ
     * @hash   630689944
     */
    MCAPI float getRainLevel() const;
    /**
     * @symbol ?getSeed@LevelSettings@@QEBA?AVLevelSeed64@@XZ
     * @hash   826297292
     */
    MCAPI class LevelSeed64 getSeed() const;
    /**
     * @symbol ?getServerChunkTickRange@LevelSettings@@QEBAIXZ
     * @hash   -1654800406
     */
    MCAPI unsigned int getServerChunkTickRange() const;
    /**
     * @symbol ?getSpawnSettings@LevelSettings@@QEBA?AUSpawnSettings@@XZ
     * @hash   901841034
     */
    MCAPI struct SpawnSettings getSpawnSettings() const;
    /**
     * @symbol ?getTime@LevelSettings@@QEBAHXZ
     * @hash   -1802759874
     */
    MCAPI int getTime() const;
    /**
     * @symbol ?getWorldVersion@LevelSettings@@QEBA?AW4WorldVersion@@XZ
     * @hash   475281388
     */
    MCAPI enum class WorldVersion getWorldVersion() const;
    /**
     * @symbol ?getXBLBroadcastIntent@LevelSettings@@QEBA?AW4GamePublishSetting@Social@@XZ
     * @hash   -920209260
     */
    MCAPI enum class Social::GamePublishSetting getXBLBroadcastIntent() const;
    /**
     * @symbol ?hasAchievementsDisabled@LevelSettings@@QEBA_NXZ
     * @hash   668940144
     */
    MCAPI bool hasAchievementsDisabled() const;
    /**
     * @symbol ?hasBonusChestEnabled@LevelSettings@@QEBA_NXZ
     * @hash   194897602
     */
    MCAPI bool hasBonusChestEnabled() const;
    /**
     * @symbol ?hasCommandsEnabled@LevelSettings@@QEBA_NXZ
     * @hash   946008914
     */
    MCAPI bool hasCommandsEnabled() const;
    /**
     * @symbol ?hasConfirmedPlatformLockedContent@LevelSettings@@QEBA_NXZ
     * @hash   1566849920
     */
    MCAPI bool hasConfirmedPlatformLockedContent() const;
    /**
     * @symbol ?hasLockedBehaviorPack@LevelSettings@@QEBA_NXZ
     * @hash   1432484112
     */
    MCAPI bool hasLockedBehaviorPack() const;
    /**
     * @symbol ?hasLockedResourcePack@LevelSettings@@QEBA_NXZ
     * @hash   -1386847584
     */
    MCAPI bool hasLockedResourcePack() const;
    /**
     * @symbol ?hasStartWithMapEnabled@LevelSettings@@QEBA_NXZ
     * @hash   -1254891630
     */
    MCAPI bool hasStartWithMapEnabled() const;
    /**
     * @symbol ?isEditorWorld@LevelSettings@@QEBA_NXZ
     * @hash   -324815952
     */
    MCAPI bool isEditorWorld() const;
    /**
     * @symbol ?isFromLockedTemplate@LevelSettings@@QEBA_NXZ
     * @hash   1819022594
     */
    MCAPI bool isFromLockedTemplate() const;
    /**
     * @symbol ?isFromWorldTemplate@LevelSettings@@QEBA_NXZ
     * @hash   1630109872
     */
    MCAPI bool isFromWorldTemplate() const;
    /**
     * @symbol ?isTexturepacksRequired@LevelSettings@@QEBA_NXZ
     * @hash   -41557278
     */
    MCAPI bool isTexturepacksRequired() const;
    /**
     * @symbol ?isWorldTemplateOptionLocked@LevelSettings@@QEBA_NXZ
     * @hash   524204400
     */
    MCAPI bool isWorldTemplateOptionLocked() const;
    /**
     * @symbol ??4LevelSettings@@QEAAAEAV0@$$QEAV0@@Z
     * @hash   1214835074
     */
    MCAPI class LevelSettings & operator=(class LevelSettings &&);
    /**
     * @symbol ?overrideSavedSettings@LevelSettings@@QEBAXAEAVLevelData@@@Z
     * @hash   613435052
     */
    MCAPI void overrideSavedSettings(class LevelData &) const;
    /**
     * @symbol ?setBaseGameVersion@LevelSettings@@QEAAAEAV1@AEBVBaseGameVersion@@@Z
     * @hash   1253723521
     */
    MCAPI class LevelSettings & setBaseGameVersion(class BaseGameVersion const &);
    /**
     * @symbol ?setChatRestrictionLevel@LevelSettings@@QEAAAEAV1@W4ChatRestrictionLevel@@@Z
     * @hash   -50703313
     */
    MCAPI class LevelSettings & setChatRestrictionLevel(enum class ChatRestrictionLevel);
    /**
     * @symbol ?setCommandsEnabled@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   1421804237
     */
    MCAPI class LevelSettings & setCommandsEnabled(bool);
    /**
     * @symbol ?setCustomSkinsDisabled@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   -989419251
     */
    MCAPI class LevelSettings & setCustomSkinsDisabled(bool);
    /**
     * @symbol ?setDefaultPlayerPermissions@LevelSettings@@QEAAAEAV1@W4PlayerPermissionLevel@@@Z
     * @hash   851443195
     */
    MCAPI class LevelSettings & setDefaultPlayerPermissions(enum class PlayerPermissionLevel);
    /**
     * @symbol ?setDifficulty@LevelSettings@@QEAAAEAV1@W4Difficulty@@@Z
     * @hash   1341044435
     */
    MCAPI class LevelSettings & setDifficulty(enum class Difficulty);
    /**
     * @symbol ?setDisablePlayerInteractions@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   1855727163
     */
    MCAPI class LevelSettings & setDisablePlayerInteractions(bool);
    /**
     * @symbol ?setEduSharedUriResource@LevelSettings@@QEAAAEAV1@AEBUEduSharedUriResource@@@Z
     * @hash   -1336887277
     */
    MCAPI class LevelSettings & setEduSharedUriResource(struct EduSharedUriResource const &);
    /**
     * @symbol ?setEducationFeaturesEnabled@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   141448877
     */
    MCAPI class LevelSettings & setEducationFeaturesEnabled(bool);
    /**
     * @symbol ?setEducationProductID@LevelSettings@@QEAAAEAV1@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   1113649025
     */
    MCAPI class LevelSettings & setEducationProductID(std::string);
    /**
     * @symbol ?setForceGameType@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   1567050481
     */
    MCAPI class LevelSettings & setForceGameType(bool);
    /**
     * @symbol ?setGameRules@LevelSettings@@QEAAAEAV1@VGameRules@@@Z
     * @hash   -317459649
     */
    MCAPI class LevelSettings & setGameRules(class GameRules);
    /**
     * @symbol ?setGameType@LevelSettings@@QEAAAEAV1@W4GameType@@@Z
     * @hash   1350064415
     */
    MCAPI class LevelSettings & setGameType(enum class GameType);
    /**
     * @symbol ?setGeneratorType@LevelSettings@@QEAAAEAV1@W4GeneratorType@@@Z
     * @hash   -1194679481
     */
    MCAPI class LevelSettings & setGeneratorType(enum class GeneratorType);
    /**
     * @symbol ?setIsEditorWorld@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   -629900935
     */
    MCAPI class LevelSettings & setIsEditorWorld(bool);
    /**
     * @symbol ?setOnlySpawnV1Villagers@LevelSettings@@QEAAX_N@Z
     * @hash   -1107313284
     */
    MCAPI void setOnlySpawnV1Villagers(bool);
    /**
     * @symbol ?setOverrideSavedSettings@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   -272171885
     */
    MCAPI class LevelSettings & setOverrideSavedSettings(bool);
    /**
     * @symbol ?setPlatformBroadcastIntent@LevelSettings@@QEAAAEAV1@W4GamePublishSetting@Social@@@Z
     * @hash   -1257357463
     */
    MCAPI class LevelSettings & setPlatformBroadcastIntent(enum class Social::GamePublishSetting);
    /**
     * @symbol ?setRandomSeed@LevelSettings@@QEAAAEAV1@VLevelSeed64@@@Z
     * @hash   -929319573
     */
    MCAPI class LevelSettings & setRandomSeed(class LevelSeed64);
    /**
     * @symbol ?setServerChunkTickRange@LevelSettings@@QEAAAEAV1@I@Z
     * @hash   381651389
     */
    MCAPI class LevelSettings & setServerChunkTickRange(unsigned int);
    /**
     * @symbol ?setSpawnSettings@LevelSettings@@QEAAAEAV1@USpawnSettings@@@Z
     * @hash   -197974163
     */
    MCAPI class LevelSettings & setSpawnSettings(struct SpawnSettings);
    /**
     * @symbol ?setTexturePackRequired@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   1578575001
     */
    MCAPI class LevelSettings & setTexturePackRequired(bool);
    /**
     * @symbol ?setUseMsaGamertagsOnly@LevelSettings@@QEAAAEAV1@_N@Z
     * @hash   2082135725
     */
    MCAPI class LevelSettings & setUseMsaGamertagsOnly(bool);
    /**
     * @symbol ?setXblBroadcastIntent@LevelSettings@@QEAAAEAV1@W4GamePublishSetting@Social@@@Z
     * @hash   -1097240533
     */
    MCAPI class LevelSettings & setXblBroadcastIntent(enum class Social::GamePublishSetting);
    /**
     * @symbol ?shouldOverrideSavedSettings@LevelSettings@@QEBA_NXZ
     * @hash   424425664
     */
    MCAPI bool shouldOverrideSavedSettings() const;
    /**
     * @symbol ?useMsaGamertagsOnly@LevelSettings@@QEBA_NXZ
     * @hash   -303691888
     */
    MCAPI bool useMsaGamertagsOnly() const;
    /**
     * @symbol ??1LevelSettings@@QEAA@XZ
     * @hash   1985937459
     */
    MCAPI ~LevelSettings();
    /**
     * @symbol ?parseSeedString@LevelSettings@@SA?AV?$optional@VLevelSeed64@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@@Z
     * @hash   1060427114
     */
    MCAPI static class std::optional<class LevelSeed64> parseSeedString(std::string const &);

};
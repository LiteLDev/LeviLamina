/**
 * @file  LevelChunk.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "SubChunkPacket.hpp"
#include "Bedrock.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
#include "BoundingBox.hpp"

#undef BEFORE_EXTRA

/**
 * @brief MC class LevelChunk.
 *
 */
class LevelChunk {

#define AFTER_EXTRA
// Add Member There
public:
enum class Finalization : int {
    Requeue = 0x0,
    Done = 0x1,
    Noop = 0x2,
};

class Neighbors {
public:
    Neighbors() = delete;
    Neighbors(Neighbors const&) = delete;
    Neighbors(Neighbors const&&) = delete;
};

enum class HardcodedSpawnAreaType : char {
    NONE = 0,
    NETHER_FORTRESS = 1,
    SWAMP_HUT = 2,
    OCEAN_MONUMENT = 3,
    UNKNOWN4 = 4,
    PILLAGER_OUTPOST = 5,
};

struct HardcodedSpawningArea {
    class BoundingBox aabb;
    enum class HardcodedSpawnAreaType type;
};
#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_LEVELCHUNK
public:
    class LevelChunk& operator=(class LevelChunk const &) = delete;
    LevelChunk(class LevelChunk const &) = delete;
    LevelChunk() = delete;
#endif

public:
    /**
     * @symbol ??0LevelChunk@@QEAA@AEAVDimension@@AEBVChunkPos@@_NW4SubChunkInitMode@@2@Z
     * @hash   1947225295
     */
    MCAPI LevelChunk(class Dimension &, class ChunkPos const &, bool, enum class SubChunkInitMode, bool);
    /**
     * @symbol ?_changeTerrainDataState@LevelChunk@@QEAAXW4ChunkTerrainDataState@@0@Z
     * @hash   498521037
     */
    MCAPI void _changeTerrainDataState(enum class ChunkTerrainDataState, enum class ChunkTerrainDataState);
    /**
     * @symbol ?_getTerrainDataState@LevelChunk@@QEBA?AW4ChunkTerrainDataState@@XZ
     * @hash   1030222284
     */
    MCAPI enum class ChunkTerrainDataState _getTerrainDataState() const;
    /**
     * @symbol ?_onRandomTickingQueueChanged@LevelChunk@@QEAAXXZ
     * @hash   931994517
     */
    MCAPI void _onRandomTickingQueueChanged();
    /**
     * @symbol ?_onTickingQueueChanged@LevelChunk@@QEAAXXZ
     * @hash   -1657027899
     */
    MCAPI void _onTickingQueueChanged();
    /**
     * @symbol ?_setGenerator@LevelChunk@@QEAAXPEAVChunkSource@@@Z
     * @hash   2096662835
     */
    MCAPI void _setGenerator(class ChunkSource *);
    /**
     * @symbol ?_setOnChunkLoadedCalled@LevelChunk@@QEAA_NXZ
     * @hash   1276600504
     */
    MCAPI bool _setOnChunkLoadedCalled();
    /**
     * @symbol ?actorDataNeedsSaving@LevelChunk@@QEBA_NHH@Z
     * @hash   -1292674684
     */
    MCAPI bool actorDataNeedsSaving(int, int) const;
    /**
     * @symbol ?addEntity@LevelChunk@@QEAAXVWeakEntityRef@@@Z
     * @hash   -967327030
     */
    MCAPI void addEntity(class WeakEntityRef);
    /**
     * @symbol ?addHardcodedSpawningArea@LevelChunk@@QEAAXAEBVBoundingBox@@W4HardcodedSpawnAreaType@@@Z
     * @hash   1210460177
     */
    MCAPI void addHardcodedSpawningArea(class BoundingBox const &, enum class HardcodedSpawnAreaType);
    /**
     * @symbol ?addSubChunkBlockEntitiesToLevelChunk@LevelChunk@@QEAAXAEAV?$unordered_map@VChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@U?$hash@VChunkBlockPos@@@3@U?$equal_to@VChunkBlockPos@@@3@V?$allocator@U?$pair@$$CBVChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@@std@@@3@@std@@@Z
     * @hash   -1963434593
     */
    MCAPI void addSubChunkBlockEntitiesToLevelChunk(class std::unordered_map<class ChunkBlockPos, class std::shared_ptr<class BlockActor>, struct std::hash<class ChunkBlockPos>, struct std::equal_to<class ChunkBlockPos>, class std::allocator<struct std::pair<class ChunkBlockPos const, class std::shared_ptr<class BlockActor>>>> &);
    /**
     * @symbol ?applySeasonsPostProcess@LevelChunk@@QEAA_NAEAVBlockSource@@@Z
     * @hash   808415617
     */
    MCAPI bool applySeasonsPostProcess(class BlockSource &);
    /**
     * @symbol ?changeState@LevelChunk@@QEAAXW4ChunkState@@0@Z
     * @hash   -914085306
     */
    MCAPI void changeState(enum class ChunkState, enum class ChunkState);
    /**
     * @symbol ?checkSeasonsPostProcessDirty@LevelChunk@@QEAA_NXZ
     * @hash   10275762
     */
    MCAPI bool checkSeasonsPostProcessDirty();
    /**
     * @symbol ?chunkHasConvertedDataTag@LevelChunk@@QEBA_NXZ
     * @hash   -427711966
     */
    MCAPI bool chunkHasConvertedDataTag() const;
    /**
     * @symbol ?clearDirtyTickCounters@LevelChunk@@QEAAXXZ
     * @hash   1546350341
     */
    MCAPI void clearDirtyTickCounters();
    /**
     * @symbol ?clearPreservedEntities@LevelChunk@@QEAAXXZ
     * @hash   1980317797
     */
    MCAPI void clearPreservedEntities();
    /**
     * @symbol ?clientSubChunkRequestGenerateLightingForSubChunk@LevelChunk@@QEAAXAEAVChunkViewSource@@F@Z
     * @hash   609752302
     */
    MCAPI void clientSubChunkRequestGenerateLightingForSubChunk(class ChunkViewSource &, short);
    /**
     * @symbol ?deserializeBiomes@LevelChunk@@QEAAXAEAVIDataInput@@@Z
     * @hash   959747610
     */
    MCAPI void deserializeBiomes(class IDataInput &);
    /**
     * @symbol ?deserializeBlockEntities@LevelChunk@@QEAAXAEAVIDataInput@@@Z
     * @hash   660324770
     */
    MCAPI void deserializeBlockEntities(class IDataInput &);
    /**
     * @symbol ?deserializeFinalization@LevelChunk@@QEAAXAEAVIDataInput@@@Z
     * @hash   1221459524
     */
    MCAPI void deserializeFinalization(class IDataInput &);
    /**
     * @symbol ?deserializeHardcodedSpawners@LevelChunk@@QEAAXAEAVIDataInput@@@Z
     * @hash   -1904414272
     */
    MCAPI void deserializeHardcodedSpawners(class IDataInput &);
    /**
     * @symbol ?deserializeKey@LevelChunk@@QEAA_NV?$basic_string_span@$$CBD$0?0@gsl@@0@Z
     * @hash   -1542869908
     */
    MCAPI bool deserializeKey(class gsl::basic_string_span<char const, -1>, class gsl::basic_string_span<char const, -1>);
    /**
     * @symbol ?deserializeLoadedVersion@LevelChunk@@QEAAXAEAVIDataInput@@@Z
     * @hash   188042344
     */
    MCAPI void deserializeLoadedVersion(class IDataInput &);
    /**
     * @symbol ?deserializeMetaDataHash@LevelChunk@@QEAAXAEAVIDataInput@@@Z
     * @hash   1337680310
     */
    MCAPI void deserializeMetaDataHash(class IDataInput &);
    /**
     * @symbol ?deserializeSubChunk@LevelChunk@@QEAAXEAEAVIDataInput@@V?$optional@C@std@@V?$optional@PEAUDeserializationChanges@@@4@@Z
     * @hash   -1532508876
     */
    MCAPI void deserializeSubChunk(unsigned char, class IDataInput &, class std::optional<signed char>, class std::optional<struct DeserializationChanges *>);
    /**
     * @symbol ?deserializeSubChunkBlockEntities@LevelChunk@@QEAAXAEAVIDataInput@@AEAV?$unordered_map@VChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@U?$hash@VChunkBlockPos@@@3@U?$equal_to@VChunkBlockPos@@@3@V?$allocator@U?$pair@$$CBVChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@@std@@@3@@std@@@Z
     * @hash   466623540
     */
    MCAPI void deserializeSubChunkBlockEntities(class IDataInput &, class std::unordered_map<class ChunkBlockPos, class std::shared_ptr<class BlockActor>, struct std::hash<class ChunkBlockPos>, struct std::equal_to<class ChunkBlockPos>, class std::allocator<struct std::pair<class ChunkBlockPos const, class std::shared_ptr<class BlockActor>>>> &);
    /**
     * @symbol ?enableBlockEntityAccessForThisThread@LevelChunk@@QEBA?AVLevelChunkBlockActorAccessToken@@XZ
     * @hash   -599659162
     */
    MCAPI class LevelChunkBlockActorAccessToken enableBlockEntityAccessForThisThread() const;
    /**
     * @symbol ?fetchBiomes@LevelChunk@@QEBAXAEAV?$vector@PEBVBiome@@V?$allocator@PEBVBiome@@@std@@@std@@@Z
     * @hash   1107801144
     */
    MCAPI void fetchBiomes(std::vector<class Biome const *> &) const;
    /**
     * @symbol ?fetchBlocks@LevelChunk@@QEBAXAEBVBlockPos@@AEAVBlockVolume@@@Z
     * @hash   -1127835497
     */
    MCAPI void fetchBlocks(class BlockPos const &, class BlockVolume &) const;
    /**
     * @symbol ?fillBiomes@LevelChunk@@QEAAXAEBUBiomeChunkData@@@Z
     * @hash   1293170624
     */
    MCAPI void fillBiomes(struct BiomeChunkData const &);
    /**
     * @symbol ?finalizeDeserialization@LevelChunk@@QEAAXXZ
     * @hash   -178055805
     */
    MCAPI void finalizeDeserialization();
    /**
     * @symbol ?finalizePostProcessing@LevelChunk@@QEAAXXZ
     * @hash   152481605
     */
    MCAPI void finalizePostProcessing();
    /**
     * @symbol ?finalizeSubChunkDeserialization@LevelChunk@@QEAAXAEAV?$unordered_map@VChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@U?$hash@VChunkBlockPos@@@3@U?$equal_to@VChunkBlockPos@@@3@V?$allocator@U?$pair@$$CBVChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@@std@@@3@@std@@V?$buffer_span_mut@USubChunk@@@@@Z
     * @hash   -619385337
     */
    MCAPI void finalizeSubChunkDeserialization(class std::unordered_map<class ChunkBlockPos, class std::shared_ptr<class BlockActor>, struct std::hash<class ChunkBlockPos>, struct std::equal_to<class ChunkBlockPos>, class std::allocator<struct std::pair<class ChunkBlockPos const, class std::shared_ptr<class BlockActor>>>> &, class buffer_span_mut<struct SubChunk>);
    /**
     * @symbol ?findExposedLightningRod@LevelChunk@@QEAA?AV?$optional@VBlockPos@@@std@@AEBVBlockPos@@AEAVBlockSource@@@Z
     * @hash   -1030828351
     */
    MCAPI class std::optional<class BlockPos> findExposedLightningRod(class BlockPos const &, class BlockSource &);
    /**
     * @symbol ?findLightningTarget@LevelChunk@@QEAA?AVVec3@@AEBVBlockPos@@AEAVBlockSource@@@Z
     * @hash   -1058709490
     */
    MCAPI class Vec3 findLightningTarget(class BlockPos const &, class BlockSource &);
    /**
     * @symbol ?generateOriginalLighting@LevelChunk@@QEAA_NAEAVChunkViewSource@@_N@Z
     * @hash   -98625088
     */
    MCAPI bool generateOriginalLighting(class ChunkViewSource &, bool);
    /**
     * @symbol ?getAboveTopSolidBlock@LevelChunk@@QEAA?AVChunkLocalHeight@@AEBVChunkBlockPos@@_N11@Z
     * @hash   -1047909988
     */
    MCAPI class ChunkLocalHeight getAboveTopSolidBlock(class ChunkBlockPos const &, bool, bool, bool);
    /**
     * @symbol ?getActors@LevelChunk@@QEBAXAEBUActorDefinitionIdentifier@@AEBVAABB@@AEAV?$vector@PEAVActor@@V?$allocator@PEAVActor@@@std@@@std@@@Z
     * @hash   -1340370544
     */
    MCAPI void getActors(struct ActorDefinitionIdentifier const &, class AABB const &, std::vector<class Actor *> &) const;
    /**
     * @symbol ?getBiome@LevelChunk@@QEBAAEAVBiome@@AEBVChunkBlockPos@@@Z
     * @hash   -1672590827
     */
    MCAPI class Biome & getBiome(class ChunkBlockPos const &) const;
    /**
     * @symbol ?getBlock@LevelChunk@@QEBAAEBVBlock@@AEBVChunkBlockPos@@@Z
     * @hash   1715628163
     */
    MCAPI class Block const & getBlock(class ChunkBlockPos const &) const;
    /**
     * @symbol ?getBlockEntities@LevelChunk@@QEBAAEBV?$unordered_map@VChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@U?$hash@VChunkBlockPos@@@3@U?$equal_to@VChunkBlockPos@@@3@V?$allocator@U?$pair@$$CBVChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@@std@@@3@@std@@XZ
     * @hash   1459146241
     */
    MCAPI class std::unordered_map<class ChunkBlockPos, class std::shared_ptr<class BlockActor>, struct std::hash<class ChunkBlockPos>, struct std::equal_to<class ChunkBlockPos>, class std::allocator<struct std::pair<class ChunkBlockPos const, class std::shared_ptr<class BlockActor>>>> const & getBlockEntities() const;
    /**
     * @symbol ?getBlockEntity@LevelChunk@@QEAAPEAVBlockActor@@AEBVChunkBlockPos@@@Z
     * @hash   -1272478828
     */
    MCAPI class BlockActor * getBlockEntity(class ChunkBlockPos const &);
    /**
     * @symbol ?getBorder@LevelChunk@@QEBA_NAEBVChunkBlockPos@@@Z
     * @hash   873065657
     */
    MCAPI bool getBorder(class ChunkBlockPos const &) const;
    /**
     * @symbol ?getBrightness@LevelChunk@@QEBA?AUBrightnessPair@@AEBVChunkBlockPos@@@Z
     * @hash   -134450827
     */
    MCAPI struct BrightnessPair getBrightness(class ChunkBlockPos const &) const;
    /**
     * @symbol ?getCachedTemperatureNoise@LevelChunk@@QEAACAEBVChunkBlockPos@@@Z
     * @hash   1512661435
     */
    MCAPI signed char getCachedTemperatureNoise(class ChunkBlockPos const &);
    /**
     * @symbol ?getChunkEntities@LevelChunk@@QEAAAEAV?$vector@VWeakEntityRef@@V?$allocator@VWeakEntityRef@@@std@@@std@@XZ
     * @hash   -864474870
     */
    MCAPI std::vector<class WeakEntityRef> & getChunkEntities();
    /**
     * @symbol ?getDimension@LevelChunk@@QEBAAEAVDimension@@XZ
     * @hash   570935834
     */
    MCAPI class Dimension & getDimension() const;
    /**
     * @symbol ?getEntities@LevelChunk@@QEBAXW4ActorType@@AEBVAABB@@AEAV?$vector@PEAVActor@@V?$allocator@PEAVActor@@@std@@@std@@_N@Z
     * @hash   38445793
     */
    MCAPI void getEntities(enum class ActorType, class AABB const &, std::vector<class Actor *> &, bool) const;
    /**
     * @symbol ?getEntities@LevelChunk@@QEBAXV?$span@V?$not_null@PEBVActor@@@gsl@@$0?0@gsl@@AEBVAABB@@AEAV?$vector@PEAVActor@@V?$allocator@PEAVActor@@@std@@@std@@_N@Z
     * @hash   -157048706
     */
    MCAPI void getEntities(class gsl::span<class gsl::not_null<class Actor const *>, -1>, class AABB const &, std::vector<class Actor *> &, bool) const;
    /**
     * @symbol ?getEntity@LevelChunk@@QEBAPEAVActor@@AEBUActorUniqueID@@@Z
     * @hash   -342300948
     */
    MCAPI class Actor * getEntity(struct ActorUniqueID const &) const;
    /**
     * @symbol ?getExtraBlock@LevelChunk@@QEBAAEBVBlock@@AEBVChunkBlockPos@@@Z
     * @hash   1972680805
     */
    MCAPI class Block const & getExtraBlock(class ChunkBlockPos const &) const;
    /**
     * @symbol ?getFinalized@LevelChunk@@QEBA?AW4Finalization@1@XZ
     * @hash   -1509995820
     */
    MCAPI enum class LevelChunk::Finalization getFinalized() const;
    /**
     * @symbol ?getGameEventListenerRegistry@LevelChunk@@QEBAAEAVGameEventListenerRegistry@@XZ
     * @hash   1322060068
     */
    MCAPI class GameEventListenerRegistry & getGameEventListenerRegistry() const;
    /**
     * @symbol ?getGenerator@LevelChunk@@QEBAPEAVChunkSource@@XZ
     * @hash   -895600861
     */
    MCAPI class ChunkSource * getGenerator() const;
    /**
     * @symbol ?getGrassColor@LevelChunk@@QEAAHAEBVChunkBlockPos@@@Z
     * @hash   308948037
     */
    MCAPI int getGrassColor(class ChunkBlockPos const &);
    /**
     * @symbol ?getHeightRange@LevelChunk@@QEBAAEBVDimensionHeightRange@@XZ
     * @hash   -235902152
     */
    MCAPI class DimensionHeightRange const & getHeightRange() const;
    /**
     * @symbol ?getHeightmap@LevelChunk@@QEBAFAEBVChunkBlockPos@@@Z
     * @hash   1848844798
     */
    MCAPI short getHeightmap(class ChunkBlockPos const &) const;
    /**
     * @symbol ?getHighestNonAirSubChunkIndex@LevelChunk@@QEBAFXZ
     * @hash   -775339189
     */
    MCAPI short getHighestNonAirSubChunkIndex() const;
    /**
     * @symbol ?getInterpolant@LevelChunk@@QEBAM_K0@Z
     * @hash   1484560602
     */
    MCAPI float getInterpolant(unsigned __int64, unsigned __int64) const;
    /**
     * @symbol ?getLastTick@LevelChunk@@QEBAAEBUTick@@XZ
     * @hash   -984764000
     */
    MCAPI struct Tick const & getLastTick() const;
    /**
     * @symbol ?getLevel@LevelChunk@@QEBAAEAVLevel@@XZ
     * @hash   -1908099954
     */
    MCAPI class Level & getLevel() const;
    /**
     * @symbol ?getLoadedFormat@LevelChunk@@QEBA?AV?$optional@W4LevelChunkFormat@@@std@@XZ
     * @hash   128953921
     */
    MCAPI class std::optional<enum class LevelChunkFormat> getLoadedFormat() const;
    /**
     * @symbol ?getMax@LevelChunk@@QEBAAEBVBlockPos@@XZ
     * @hash   -2033205770
     */
    MCAPI class BlockPos const & getMax() const;
    /**
     * @symbol ?getMaxAllocatedY@LevelChunk@@QEBAFXZ
     * @hash   1046000013
     */
    MCAPI short getMaxAllocatedY() const;
    /**
     * @symbol ?getMaxSubChunkCnt@LevelChunk@@QEBA_KXZ
     * @hash   648535221
     */
    MCAPI unsigned __int64 getMaxSubChunkCnt() const;
    /**
     * @symbol ?getMaxY@LevelChunk@@QEBAFXZ
     * @hash   867427819
     */
    MCAPI short getMaxY() const;
    /**
     * @symbol ?getMetaData@LevelChunk@@QEBA?AV?$shared_ptr@$$CBVLevelChunkMetaData@@@std@@XZ
     * @hash   -152025635
     */
    MCAPI class std::shared_ptr<class LevelChunkMetaData const> getMetaData() const;
    /**
     * @symbol ?getMetaDataCopy@LevelChunk@@QEBA?AV?$shared_ptr@VLevelChunkMetaData@@@std@@XZ
     * @hash   1728688859
     */
    MCAPI class std::shared_ptr<class LevelChunkMetaData> getMetaDataCopy() const;
    /**
     * @symbol ?getMin@LevelChunk@@QEBAAEBVBlockPos@@XZ
     * @hash   833957490
     */
    MCAPI class BlockPos const & getMin() const;
    /**
     * @symbol ?getMinY@LevelChunk@@QEBAFXZ
     * @hash   -1007196757
     */
    MCAPI short getMinY() const;
    /**
     * @symbol ?getNonAirMaxHeight@LevelChunk@@QEBAFXZ
     * @hash   911004221
     */
    MCAPI short getNonAirMaxHeight() const;
    /**
     * @symbol ?getPosition@LevelChunk@@QEBAAEBVChunkPos@@XZ
     * @hash   -1544501126
     */
    MCAPI class ChunkPos const & getPosition() const;
    /**
     * @symbol ?getPreWorldGenHeightmap@LevelChunk@@QEBA?AVHeightmapWrapper@@XZ
     * @hash   1275479874
     */
    MCAPI class HeightmapWrapper getPreWorldGenHeightmap() const;
    /**
     * @symbol ?getPreWorldGenHeightmap@LevelChunk@@QEBA?AVChunkLocalHeight@@AEBVChunkBlockPos@@@Z
     * @hash   1225202039
     */
    MCAPI class ChunkLocalHeight getPreWorldGenHeightmap(class ChunkBlockPos const &) const;
    /**
     * @symbol ?getPreservedBlockEntities@LevelChunk@@QEBAAEBV?$vector@V?$shared_ptr@VBlockActor@@@std@@V?$allocator@V?$shared_ptr@VBlockActor@@@std@@@2@@std@@XZ
     * @hash   1468574611
     */
    MCAPI std::vector<class std::shared_ptr<class BlockActor>> const & getPreservedBlockEntities() const;
    /**
     * @symbol ?getRandomTickQueue@LevelChunk@@QEAAAEAVBlockTickingQueue@@XZ
     * @hash   214266918
     */
    MCAPI class BlockTickingQueue & getRandomTickQueue();
    /**
     * @symbol ?getRawBrightness@LevelChunk@@QEBA?AUBrightness@@AEBVChunkBlockPos@@U2@@Z
     * @hash   187988551
     */
    MCAPI struct Brightness getRawBrightness(class ChunkBlockPos const &, struct Brightness) const;
    /**
     * @symbol ?getSpawningAreas@LevelChunk@@QEBAAEBV?$vector@UHardcodedSpawningArea@LevelChunk@@V?$allocator@UHardcodedSpawningArea@LevelChunk@@@std@@@std@@XZ
     * @hash   521444510
     */
    MCAPI std::vector<struct LevelChunk::HardcodedSpawningArea> const & getSpawningAreas() const;
    /**
     * @symbol ?getState@LevelChunk@@QEBAAEBU?$atomic@W4ChunkState@@@std@@XZ
     * @hash   -1494019919
     */
    MCAPI struct std::atomic<enum class ChunkState> const & getState() const;
    /**
     * @symbol ?getSubChunk@LevelChunk@@QEAAPEAUSubChunk@@F@Z
     * @hash   -207178593
     */
    MCAPI struct SubChunk * getSubChunk(short);
    /**
     * @symbol ?getSubChunk@LevelChunk@@QEBAPEBUSubChunk@@F@Z
     * @hash   -36487489
     */
    MCAPI struct SubChunk const * getSubChunk(short) const;
    /**
     * @symbol ?getSurfaceBiome@LevelChunk@@QEBAAEBVBiome@@VChunkBlockPos@@@Z
     * @hash   1345655383
     */
    MCAPI class Biome const & getSurfaceBiome(class ChunkBlockPos) const;
    /**
     * @symbol ?getTickQueue@LevelChunk@@QEAAAEAVBlockTickingQueue@@XZ
     * @hash   30607190
     */
    MCAPI class BlockTickingQueue & getTickQueue();
    /**
     * @symbol ?getTickQueue@LevelChunk@@QEBAAEBVBlockTickingQueue@@XZ
     * @hash   171862736
     */
    MCAPI class BlockTickingQueue const & getTickQueue() const;
    /**
     * @symbol ?getTopRainBlockPos@LevelChunk@@QEAA?BVBlockPos@@AEBVChunkBlockPos@@@Z
     * @hash   -1196200325
     */
    MCAPI class BlockPos const getTopRainBlockPos(class ChunkBlockPos const &);
    /**
     * @symbol ?getTotalAllocatedHeight@LevelChunk@@QEBA?AVChunkLocalHeight@@XZ
     * @hash   851979604
     */
    MCAPI class ChunkLocalHeight getTotalAllocatedHeight() const;
    /**
     * @symbol ?hasAnyBiomeStates@LevelChunk@@QEBA_NXZ
     * @hash   -56760690
     */
    MCAPI bool hasAnyBiomeStates() const;
    /**
     * @symbol ?hasBlockEntitiesToSerialize@LevelChunk@@QEBA_NXZ
     * @hash   458995552
     */
    MCAPI bool hasBlockEntitiesToSerialize() const;
    /**
     * @symbol ?hasEntitiesPendingToLoad@LevelChunk@@QEBA_NXZ
     * @hash   1491387958
     */
    MCAPI bool hasEntitiesPendingToLoad() const;
    /**
     * @symbol ?hasEntitiesToSerialize@LevelChunk@@QEBA_NXZ
     * @hash   2079081120
     */
    MCAPI bool hasEntitiesToSerialize() const;
    /**
     * @symbol ?hasEntity@LevelChunk@@QEAA_NVWeakEntityRef@@@Z
     * @hash   415664857
     */
    MCAPI bool hasEntity(class WeakEntityRef);
    /**
     * @symbol ?isBlockInChunk@LevelChunk@@QEBA_NAEBVBlockPos@@@Z
     * @hash   -220602895
     */
    MCAPI bool isBlockInChunk(class BlockPos const &) const;
    /**
     * @symbol ?isClientGeneratedChunk@LevelChunk@@QEBA_NXZ
     * @hash   345243266
     */
    MCAPI bool isClientGeneratedChunk() const;
    /**
     * @symbol ?isFullyLoaded@LevelChunk@@QEBA_NXZ
     * @hash   -1206467240
     */
    MCAPI bool isFullyLoaded() const;
    /**
     * @symbol ?isNonActorDataDirty@LevelChunk@@QEBA_NXZ
     * @hash   -1198310502
     */
    MCAPI bool isNonActorDataDirty() const;
    /**
     * @symbol ?isReadOnly@LevelChunk@@QEBA_NXZ
     * @hash   1034384644
     */
    MCAPI bool isReadOnly() const;
    /**
     * @symbol ?isSkyLit@LevelChunk@@QEBA_NAEBVChunkBlockPos@@@Z
     * @hash   575042335
     */
    MCAPI bool isSkyLit(class ChunkBlockPos const &) const;
    /**
     * @symbol ?legacyDeserializeBlockExtraData@LevelChunk@@QEAAXAEAVIDataInput@@@Z
     * @hash   -729022872
     */
    MCAPI void legacyDeserializeBlockExtraData(class IDataInput &);
    /**
     * @symbol ?legacyDeserializeTerrain@LevelChunk@@QEAAXAEAVIDataInput@@@Z
     * @hash   500784338
     */
    MCAPI void legacyDeserializeTerrain(class IDataInput &);
    /**
     * @symbol ?levelChunkHad3dBiomeTagOnLastDeserialize@LevelChunk@@QEBA_NXZ
     * @hash   -1122866842
     */
    MCAPI bool levelChunkHad3dBiomeTagOnLastDeserialize() const;
    /**
     * @symbol ?markSaveIfNeverSaved@LevelChunk@@QEAAXXZ
     * @hash   -742371435
     */
    MCAPI void markSaveIfNeverSaved();
    /**
     * @symbol ?markSaveNonActorDataIfDirty@LevelChunk@@QEAAXXZ
     * @hash   1720382499
     */
    MCAPI void markSaveNonActorDataIfDirty();
    /**
     * @symbol ?metaDataDirty@LevelChunk@@QEBA_NXZ
     * @hash   1797486868
     */
    MCAPI bool metaDataDirty() const;
    /**
     * @symbol ?needsUpgradeFix@LevelChunk@@QEBA_NXZ
     * @hash   -1430327942
     */
    MCAPI bool needsUpgradeFix() const;
    /**
     * @symbol ?needsWallFix@LevelChunk@@QEBA_NXZ
     * @hash   -385464056
     */
    MCAPI bool needsWallFix() const;
    /**
     * @symbol ?nonActorDataNeedsSaving@LevelChunk@@QEBA_NHH@Z
     * @hash   1779843648
     */
    MCAPI bool nonActorDataNeedsSaving(int, int) const;
    /**
     * @symbol ?onBlockEntityChanged@LevelChunk@@QEAAXXZ
     * @hash   -1824188363
     */
    MCAPI void onBlockEntityChanged();
    /**
     * @symbol ?onDiscarded@LevelChunk@@QEAAXXZ
     * @hash   1186185027
     */
    MCAPI void onDiscarded();
    /**
     * @symbol ??4LevelChunk@@QEAAAEAV0@$$QEAV0@@Z
     * @hash   709921886
     */
    MCAPI class LevelChunk & operator=(class LevelChunk &&);
    /**
     * @symbol ?placeCallbacks@LevelChunk@@QEAAXAEBVChunkBlockPos@@AEBVBlock@@1PEAVBlockSource@@V?$shared_ptr@VBlockActor@@@std@@@Z
     * @hash   760537572
     */
    MCAPI void placeCallbacks(class ChunkBlockPos const &, class Block const &, class Block const &, class BlockSource *, class std::shared_ptr<class BlockActor>);
    /**
     * @symbol ?populateHeightMapDataForSubChunkPacket@LevelChunk@@QEBAXFAEAUSubChunkPacketData@SubChunkPacket@@@Z
     * @hash   -1145536650
     */
    MCAPI void populateHeightMapDataForSubChunkPacket(short, struct SubChunkPacket::SubChunkPacketData &) const;
    /**
     * @symbol ?pruneBiomesAboveHeightmap@LevelChunk@@QEAAXXZ
     * @hash   153273155
     */
    MCAPI void pruneBiomesAboveHeightmap();
    /**
     * @symbol ?recalculateSubchunkHashes@LevelChunk@@QEAAX_N@Z
     * @hash   704682150
     */
    MCAPI void recalculateSubchunkHashes(bool);
    /**
     * @symbol ?recomputeHeightMap@LevelChunk@@QEAAX_N@Z
     * @hash   1008711294
     */
    MCAPI void recomputeHeightMap(bool);
    /**
     * @symbol ?removeBlockEntity@LevelChunk@@QEAA?AV?$shared_ptr@VBlockActor@@@std@@AEBVBlockPos@@@Z
     * @hash   -411322386
     */
    MCAPI class std::shared_ptr<class BlockActor> removeBlockEntity(class BlockPos const &);
    /**
     * @symbol ?removeEntityFromChunk@LevelChunk@@QEAA_NVWeakEntityRef@@@Z
     * @hash   -292832727
     */
    MCAPI bool removeEntityFromChunk(class WeakEntityRef);
    /**
     * @symbol ?removeEntityFromWorld@LevelChunk@@QEAA_NVWeakEntityRef@@@Z
     * @hash   -1366827351
     */
    MCAPI bool removeEntityFromWorld(class WeakEntityRef);
    /**
     * @symbol ?removeHardcodedSpawningArea@LevelChunk@@QEAAXW4HardcodedSpawnAreaType@@@Z
     * @hash   -426789532
     */
    MCAPI void removeHardcodedSpawningArea(enum class HardcodedSpawnAreaType);
    /**
     * @symbol ?runtimeRelightSubchunk@LevelChunk@@QEAAXAEAVBlockSource@@_KAEBV?$vector@USubChunkLightUpdate@@V?$allocator@USubChunkLightUpdate@@@std@@@std@@AEAV?$vector@VBlockPos@@V?$allocator@VBlockPos@@@std@@@4@@Z
     * @hash   1622615291
     */
    MCAPI void runtimeRelightSubchunk(class BlockSource &, unsigned __int64, std::vector<struct SubChunkLightUpdate> const &, std::vector<class BlockPos> &);
    /**
     * @symbol ?serialize2DMaps@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   -1807043586
     */
    MCAPI void serialize2DMaps(class IDataOutput &) const;
    /**
     * @symbol ?serialize3DMaps@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   -333721570
     */
    MCAPI void serialize3DMaps(class IDataOutput &) const;
    /**
     * @symbol ?serializeBiomeStates@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   1961871276
     */
    MCAPI void serializeBiomeStates(class IDataOutput &) const;
    /**
     * @symbol ?serializeBiomes@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   -1596171346
     */
    MCAPI void serializeBiomes(class IDataOutput &) const;
    /**
     * @symbol ?serializeBlockEntities@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   1921870844
     */
    MCAPI void serializeBlockEntities(class IDataOutput &) const;
    /**
     * @symbol ?serializeBlockEntitiesForSubChunk@LevelChunk@@QEBAXAEAVIDataOutput@@AEBVSubChunkPos@@@Z
     * @hash   -1768796065
     */
    MCAPI void serializeBlockEntitiesForSubChunk(class IDataOutput &, class SubChunkPos const &) const;
    /**
     * @symbol ?serializeBorderBlocks@LevelChunk@@QEBA_NAEAVIDataOutput@@@Z
     * @hash   -829243475
     */
    MCAPI bool serializeBorderBlocks(class IDataOutput &) const;
    /**
     * @symbol ?serializeEntities@LevelChunk@@QEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_NV?$function@$$A6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@3@22@Z
     * @hash   739769493
     */
    MCAPI void serializeEntities(std::string &, bool, class std::function<void (std::string const &)>, class std::function<void (std::string const &)>, class std::function<void (std::string const &)>) const;
    /**
     * @symbol ?serializeEntityRemovals@LevelChunk@@QEAAXV?$function@$$A6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@std@@@Z
     * @hash   -2028726479
     */
    MCAPI void serializeEntityRemovals(class std::function<void (std::string const &)>);
    /**
     * @symbol ?serializeFinalization@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   665656046
     */
    MCAPI void serializeFinalization(class IDataOutput &) const;
    /**
     * @symbol ?serializeHardcodedSpawners@LevelChunk@@QEBA_NAEAVIDataOutput@@@Z
     * @hash   -272473243
     */
    MCAPI bool serializeHardcodedSpawners(class IDataOutput &) const;
    /**
     * @symbol ?serializeMetaDataHash@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   -1821712802
     */
    MCAPI void serializeMetaDataHash(class IDataOutput &) const;
    /**
     * @symbol ?serializeRandomTicks@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   -1535528180
     */
    MCAPI void serializeRandomTicks(class IDataOutput &) const;
    /**
     * @symbol ?serializeTicks@LevelChunk@@QEBAXAEAVIDataOutput@@@Z
     * @hash   1098929868
     */
    MCAPI void serializeTicks(class IDataOutput &) const;
    /**
     * @symbol ?setAllLegacyBlockIDAndData@LevelChunk@@QEAAXV?$buffer_span@UBlockID@@@@V?$buffer_span@UNibblePair@@@@@Z
     * @hash   -1249513949
     */
    MCAPI void setAllLegacyBlockIDAndData(class buffer_span<struct BlockID>, class buffer_span<struct NibblePair>);
    /**
     * @symbol ?setBiome2d@LevelChunk@@QEAAXAEBVBiome@@AEBVChunkBlockPos@@@Z
     * @hash   -990837899
     */
    MCAPI void setBiome2d(class Biome const &, class ChunkBlockPos const &);
    /**
     * @symbol ?setBiomeFromVolume@LevelChunk@@QEAAXAEBV?$VolumeOf@PEBVBiome@@@ClientBlockPipeline@@I@Z
     * @hash   -63551642
     */
    MCAPI void setBiomeFromVolume(class ClientBlockPipeline::VolumeOf<class Biome const *> const &, unsigned int);
    /**
     * @symbol ?setBlock@LevelChunk@@QEAAAEBVBlock@@AEBVChunkBlockPos@@AEBV2@PEAVBlockSource@@V?$shared_ptr@VBlockActor@@@std@@@Z
     * @hash   294554595
     */
    MCAPI class Block const & setBlock(class ChunkBlockPos const &, class Block const &, class BlockSource *, class std::shared_ptr<class BlockActor>);
    /**
     * @symbol ?setBlockSimple@LevelChunk@@QEAAXAEBVChunkBlockPos@@AEBVBlock@@@Z
     * @hash   -169433973
     */
    MCAPI void setBlockSimple(class ChunkBlockPos const &, class Block const &);
    /**
     * @symbol ?setBlockVolume@LevelChunk@@QEAAXAEBVBlockVolume@@I@Z
     * @hash   1428284907
     */
    MCAPI void setBlockVolume(class BlockVolume const &, unsigned int);
    /**
     * @symbol ?setBorder@LevelChunk@@QEAAXAEBVChunkBlockPos@@_N@Z
     * @hash   -1264160173
     */
    MCAPI void setBorder(class ChunkBlockPos const &, bool);
    /**
     * @symbol ?setCachedTemperatureNoise@LevelChunk@@QEAAXAEBVChunkBlockPos@@C@Z
     * @hash   1359980115
     */
    MCAPI void setCachedTemperatureNoise(class ChunkBlockPos const &, signed char);
    /**
     * @symbol ?setChunkInterpolants@LevelChunk@@QEAAXAEBVNeighbors@1@@Z
     * @hash   493705974
     */
    MCAPI void setChunkInterpolants(class LevelChunk::Neighbors const &);
    /**
     * @symbol ?setExtraBlock@LevelChunk@@QEAAAEBVBlock@@AEBVChunkBlockPos@@AEBV2@PEAVBlockSource@@@Z
     * @hash   -1491663703
     */
    MCAPI class Block const & setExtraBlock(class ChunkBlockPos const &, class Block const &, class BlockSource *);
    /**
     * @symbol ?setExtraBlockSimple@LevelChunk@@QEAAXAEBVChunkBlockPos@@AEBVBlock@@@Z
     * @hash   1601335977
     */
    MCAPI void setExtraBlockSimple(class ChunkBlockPos const &, class Block const &);
    /**
     * @symbol ?setFinalized@LevelChunk@@QEAAXW4Finalization@1@@Z
     * @hash   530843264
     */
    MCAPI void setFinalized(enum class LevelChunk::Finalization);
    /**
     * @symbol ?setHadSerializedEntities@LevelChunk@@QEAAXXZ
     * @hash   840944773
     */
    MCAPI void setHadSerializedEntities();
    /**
     * @symbol ?setIsClientGeneratedChunk@LevelChunk@@QEAAX_N@Z
     * @hash   -210176076
     */
    MCAPI void setIsClientGeneratedChunk(bool);
    /**
     * @symbol ?setMetaData@LevelChunk@@QEAAXV?$shared_ptr@VLevelChunkMetaData@@@std@@@Z
     * @hash   257098619
     */
    MCAPI void setMetaData(class std::shared_ptr<class LevelChunkMetaData>);
    /**
     * @symbol ?setPendingEntities@LevelChunk@@QEAAXV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   -1536482588
     */
    MCAPI void setPendingEntities(std::string);
    /**
     * @symbol ?setPreWorldGenHeightMap@LevelChunk@@QEAAXV?$unique_ptr@V?$vector@FV?$allocator@F@std@@@std@@U?$default_delete@V?$vector@FV?$allocator@F@std@@@std@@@2@@std@@@Z
     * @hash   1330901351
     */
    MCAPI void setPreWorldGenHeightMap(std::unique_ptr<std::vector<short>>);
    /**
     * @symbol ?setSaved@LevelChunk@@QEAAXXZ
     * @hash   334397749
     */
    MCAPI void setSaved();
    /**
     * @symbol ?setUnsaved@LevelChunk@@QEAAXXZ
     * @hash   773288133
     */
    MCAPI void setUnsaved();
    /**
     * @symbol ?setupRedstoneCircuit@LevelChunk@@QEAAXAEAVBlockSource@@@Z
     * @hash   2063969124
     */
    MCAPI void setupRedstoneCircuit(class BlockSource &);
    /**
     * @symbol ?shouldSaveIfNeverSaved@LevelChunk@@QEBA_NXZ
     * @hash   117141052
     */
    MCAPI bool shouldSaveIfNeverSaved() const;
    /**
     * @symbol ?shouldSaveNonActorDataIfDirty@LevelChunk@@QEBA_NXZ
     * @hash   1038162052
     */
    MCAPI bool shouldSaveNonActorDataIfDirty() const;
    /**
     * @symbol ?subChunkIsSafeReference@LevelChunk@@QEBA_NAEBVBlockPos@@@Z
     * @hash   -801216013
     */
    MCAPI bool subChunkIsSafeReference(class BlockPos const &) const;
    /**
     * @symbol ?tick@LevelChunk@@QEAAXAEAVBlockSource@@AEBUTick@@@Z
     * @hash   1014154941
     */
    MCAPI void tick(class BlockSource &, struct Tick const &);
    /**
     * @symbol ?tickBlockEntities@LevelChunk@@QEAAXAEAVBlockSource@@@Z
     * @hash   -2029435994
     */
    MCAPI void tickBlockEntities(class BlockSource &);
    /**
     * @symbol ?tickBlocks@LevelChunk@@QEAAXAEAVBlockSource@@@Z
     * @hash   1617525796
     */
    MCAPI void tickBlocks(class BlockSource &);
    /**
     * @symbol ?toWorldPos@LevelChunk@@QEBA?AVBlockPos@@AEBVChunkBlockPos@@@Z
     * @hash   1222997481
     */
    MCAPI class BlockPos toWorldPos(class ChunkBlockPos const &) const;
    /**
     * @symbol ?tryChangeState@LevelChunk@@QEAA_NW4ChunkState@@0@Z
     * @hash   -922974273
     */
    MCAPI bool tryChangeState(enum class ChunkState, enum class ChunkState);
    /**
     * @symbol ?trySpawnSkeletonTrap@LevelChunk@@QEAAXAEAVBlockSource@@AEBVBlockPos@@@Z
     * @hash   1653676997
     */
    MCAPI void trySpawnSkeletonTrap(class BlockSource &, class BlockPos const &);
    /**
     * @symbol ?updateLoadedMetaDataHash@LevelChunk@@QEAAXXZ
     * @hash   -1086680107
     */
    MCAPI void updateLoadedMetaDataHash();
    /**
     * @symbol ?validateAndFixBiomeStates@LevelChunk@@QEAAXXZ
     * @hash   -1833231805
     */
    MCAPI void validateAndFixBiomeStates();
    /**
     * @symbol ?wasTickedThisTick@LevelChunk@@QEBA_NAEBUTick@@@Z
     * @hash   -1029414523
     */
    MCAPI bool wasTickedThisTick(struct Tick const &) const;
    /**
     * @symbol ??1LevelChunk@@QEAA@XZ
     * @hash   580752243
     */
    MCAPI ~LevelChunk();
    /**
     * @symbol ?borderBlocksAreEnabled@LevelChunk@@SA_NXZ
     * @hash   1815954036
     */
    MCAPI static bool borderBlocksAreEnabled();
    /**
     * @symbol ?createNew@LevelChunk@@SA?AV?$unique_ptr@VLevelChunk@@ULevelChunkPhase1Deleter@@@std@@AEAVDimension@@VChunkPos@@_NW4SubChunkInitMode@@@Z
     * @hash   715825771
     */
    MCAPI static class std::unique_ptr<class LevelChunk, struct LevelChunkPhase1Deleter> createNew(class Dimension &, class ChunkPos, bool, enum class SubChunkInitMode);
    /**
     * @symbol ?deserialize2DData@LevelChunk@@SA?AV?$tuple@V?$array@VChunkLocalHeight@@$0BAA@@std@@V?$array@UBiomeChunkData@@$0BAA@@2@@std@@AEAVIDataInput@@@Z
     * @hash   591563577
     */
    MCAPI static class std::tuple<class std::array<class ChunkLocalHeight, 256>, class std::array<struct BiomeChunkData, 256>> deserialize2DData(class IDataInput &);
    /**
     * @symbol ?deserialize3DBiomes@LevelChunk@@SA?AU?$pair@GV?$vector@V?$unique_ptr@V?$SubChunkStorage@VBiome@@@@U?$default_delete@V?$SubChunkStorage@VBiome@@@@@std@@@std@@V?$allocator@V?$unique_ptr@V?$SubChunkStorage@VBiome@@@@U?$default_delete@V?$SubChunkStorage@VBiome@@@@@std@@@std@@@2@@std@@@std@@AEAVIDataInput@@AEBVBiomeRegistry@@GPEAVBiome@@@Z
     * @hash   2146142226
     */
    MCAPI static struct std::pair<unsigned short, std::vector<std::unique_ptr<class SubChunkStorage<class Biome>>>> deserialize3DBiomes(class IDataInput &, class BiomeRegistry const &, unsigned short, class Biome *);
    /**
     * @symbol ?deserialize3DData@LevelChunk@@SA?AV?$tuple@V?$array@VChunkLocalHeight@@$0BAA@@std@@GV?$vector@V?$unique_ptr@V?$SubChunkStorage@VBiome@@@@U?$default_delete@V?$SubChunkStorage@VBiome@@@@@std@@@std@@V?$allocator@V?$unique_ptr@V?$SubChunkStorage@VBiome@@@@U?$default_delete@V?$SubChunkStorage@VBiome@@@@@std@@@std@@@2@@2@@std@@AEAVIDataInput@@AEBVBiomeRegistry@@GPEAVBiome@@@Z
     * @hash   -267642979
     */
    MCAPI static class std::tuple<class std::array<class ChunkLocalHeight, 256>, unsigned short, std::vector<std::unique_ptr<class SubChunkStorage<class Biome>>>> deserialize3DData(class IDataInput &, class BiomeRegistry const &, unsigned short, class Biome *);
    /**
     * @symbol ?deserializeSubChunk@LevelChunk@@SAXAEAVIDataInput@@AEBVChunkPos@@V?$optional@C@std@@AEAUSubChunk@@AEAVBlockPalette@@V?$optional@PEAUDeserializationChanges@@@5@@Z
     * @hash   1437281112
     */
    MCAPI static void deserializeSubChunk(class IDataInput &, class ChunkPos const &, class std::optional<signed char>, struct SubChunk &, class BlockPalette &, class std::optional<struct DeserializationChanges *>);
    /**
     * @symbol ?flushGarbageCollector@LevelChunk@@SAXXZ
     * @hash   -1215269695
     */
    MCAPI static void flushGarbageCollector();
    /**
     * @symbol ?getTagAndSubIndexFromKey@LevelChunk@@SA?AU?$pair@W4LevelChunkTag@@F@std@@V?$basic_string_span@$$CBD$0?0@gsl@@@Z
     * @hash   476254616
     */
    MCAPI static struct std::pair<enum class LevelChunkTag, short> getTagAndSubIndexFromKey(class gsl::basic_string_span<char const, -1>);
    /**
     * @symbol ?serializeEntities@LevelChunk@@SAXAEBV?$vector@VWeakEntityRef@@V?$allocator@VWeakEntityRef@@@std@@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@AEAV43@_NV?$function@$$A6AXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z@3@44@Z
     * @hash   -1429711101
     */
    MCAPI static void serializeEntities(std::vector<class WeakEntityRef> const &, std::string const &, std::string &, bool, class std::function<void (std::string const &)>, class std::function<void (std::string const &)>, class std::function<void (std::string const &)>);

//protected:
    /**
     * @symbol ?_deserializeBlockEntities@LevelChunk@@IEAAXAEAVIDataInput@@AEAV?$unordered_map@VChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@U?$hash@VChunkBlockPos@@@3@U?$equal_to@VChunkBlockPos@@@3@V?$allocator@U?$pair@$$CBVChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@@std@@@3@@std@@@Z
     * @hash   1155627480
     */
    MCAPI void _deserializeBlockEntities(class IDataInput &, class std::unordered_map<class ChunkBlockPos, class std::shared_ptr<class BlockActor>, struct std::hash<class ChunkBlockPos>, struct std::equal_to<class ChunkBlockPos>, class std::allocator<struct std::pair<class ChunkBlockPos const, class std::shared_ptr<class BlockActor>>>> &);
    /**
     * @symbol ?_deserializeEntity@LevelChunk@@IEAAXAEAVBlockSource@@AEAVIDataInput@@AEAV?$vector@UActorLink@@V?$allocator@UActorLink@@@std@@@std@@@Z
     * @hash   617380348
     */
    MCAPI void _deserializeEntity(class BlockSource &, class IDataInput &, std::vector<struct ActorLink> &);
    /**
     * @symbol ?_fixupCorruptedBlockActors@LevelChunk@@IEAAXAEAV?$unordered_map@VChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@U?$hash@VChunkBlockPos@@@3@U?$equal_to@VChunkBlockPos@@@3@V?$allocator@U?$pair@$$CBVChunkBlockPos@@V?$shared_ptr@VBlockActor@@@std@@@std@@@3@@std@@V?$buffer_span_mut@USubChunk@@@@@Z
     * @hash   1694715964
     */
    MCAPI void _fixupCorruptedBlockActors(class std::unordered_map<class ChunkBlockPos, class std::shared_ptr<class BlockActor>, struct std::hash<class ChunkBlockPos>, struct std::equal_to<class ChunkBlockPos>, class std::allocator<struct std::pair<class ChunkBlockPos const, class std::shared_ptr<class BlockActor>>>> &, class buffer_span_mut<struct SubChunk>);
    /**
     * @symbol ?_generateOriginalLighting@LevelChunk@@IEAAXAEAVChunkViewSource@@_N@Z
     * @hash   -1654616368
     */
    MCAPI void _generateOriginalLighting(class ChunkViewSource &, bool);
    /**
     * @symbol ?_generateOriginalLightingSubChunk@LevelChunk@@IEAAXAEAVBlockSource@@_K_N@Z
     * @hash   699223204
     */
    MCAPI void _generateOriginalLightingSubChunk(class BlockSource &, unsigned __int64, bool);
    /**
     * @symbol ?_lightingCallbacks@LevelChunk@@IEAAXAEBVChunkBlockPos@@AEBVBlock@@1PEAVBlockSource@@@Z
     * @hash   -889014456
     */
    MCAPI void _lightingCallbacks(class ChunkBlockPos const &, class Block const &, class Block const &, class BlockSource *);
    /**
     * @symbol ?_placeBlockEntity@LevelChunk@@IEAAXV?$shared_ptr@VBlockActor@@@std@@@Z
     * @hash   1448531912
     */
    MCAPI void _placeBlockEntity(class std::shared_ptr<class BlockActor>);
    /**
     * @symbol ?_recalcHeight@LevelChunk@@IEAA_NAEBVChunkBlockPos@@PEAVBlockSource@@@Z
     * @hash   -1781382003
     */
    MCAPI bool _recalcHeight(class ChunkBlockPos const &, class BlockSource *);
    /**
     * @symbol ?_removeCallbacks@LevelChunk@@IEAAXAEBVChunkBlockPos@@AEBVBlock@@1PEAVBlockSource@@@Z
     * @hash   -27167904
     */
    MCAPI void _removeCallbacks(class ChunkBlockPos const &, class Block const &, class Block const &, class BlockSource *);
    /**
     * @symbol ?_setAllBiomesFrom2D@LevelChunk@@IEAAXAEAV?$array@UBiomeChunkData@@$0BAA@@std@@@Z
     * @hash   -561523318
     */
    MCAPI void _setAllBiomesFrom2D(class std::array<struct BiomeChunkData, 256> &);

//private:
    /**
     * @symbol ?_addEntityToVolumes@LevelChunk@@AEAAXV?$not_null@PEAVActor@@@gsl@@@Z
     * @hash   -1092178505
     */
    MCAPI void _addEntityToVolumes(class gsl::not_null<class Actor *>);
    /**
     * @symbol ?_deserializeCCsubChunks@LevelChunk@@AEAAXFAEAVStringByteInput@@@Z
     * @hash   835119410
     */
    MCAPI void _deserializeCCsubChunks(short, class StringByteInput &);
    /**
     * @symbol ?_deserializeSubChunk@LevelChunk@@AEAA_NFAEAVStringByteInput@@@Z
     * @hash   -42634749
     */
    MCAPI bool _deserializeSubChunk(short, class StringByteInput &);
    /**
     * @symbol ?_disableBlockEntityAccessForThisThread@LevelChunk@@AEBAXXZ
     * @hash   2010362104
     */
    MCAPI void _disableBlockEntityAccessForThisThread() const;
    /**
     * @symbol ?_enableBlockEntityAccessForThisThread@LevelChunk@@AEBAXXZ
     * @hash   2017085201
     */
    MCAPI void _enableBlockEntityAccessForThisThread() const;
    /**
     * @symbol ?_fixupCommandBlocksOnTickingQueue@LevelChunk@@AEAAXAEAVBlockSource@@@Z
     * @hash   900626854
     */
    MCAPI void _fixupCommandBlocksOnTickingQueue(class BlockSource &);
    /**
     * @symbol ?_makeUniformBiomes@LevelChunk@@AEAAXAEBVBiome@@@Z
     * @hash   368619244
     */
    MCAPI void _makeUniformBiomes(class Biome const &);
    /**
     * @symbol ?_replaceBiomeStorage@LevelChunk@@AEAAXGV?$unique_ptr@V?$SubChunkStorage@VBiome@@@@U?$default_delete@V?$SubChunkStorage@VBiome@@@@@std@@@std@@AEBV?$UniqueLock@Vshared_mutex@std@@@Threading@Bedrock@@@Z
     * @hash   -564577598
     */
    MCAPI void _replaceBiomeStorage(unsigned short, std::unique_ptr<class SubChunkStorage<class Biome>>, class Bedrock::Threading::UniqueLock<class std::shared_mutex> const &);
    /**
     * @symbol ?_setBiome@LevelChunk@@AEAAXAEBVBiome@@AEBVChunkBlockPos@@_N@Z
     * @hash   -240351400
     */
    MCAPI void _setBiome(class Biome const &, class ChunkBlockPos const &, bool);
    /**
     * @symbol ?_setBiome@LevelChunk@@AEAAXAEBVBiome@@GGAEBV?$UniqueLock@Vshared_mutex@std@@@Threading@Bedrock@@@Z
     * @hash   -518331852
     */
    MCAPI void _setBiome(class Biome const &, unsigned short, unsigned short, class Bedrock::Threading::UniqueLock<class std::shared_mutex> const &);

protected:
    /**
     * @symbol ?UPDATE_MAP_BIT_SHIFT@LevelChunk@@1HB
     * @hash   1360407720
     */
    MCAPI static int const UPDATE_MAP_BIT_SHIFT;

private:

};
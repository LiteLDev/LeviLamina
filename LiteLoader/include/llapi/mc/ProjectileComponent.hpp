/**
 * @file  ProjectileComponent.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class ProjectileComponent.
 *
 */
class ProjectileComponent {

#define AFTER_EXTRA
// Add Member There
public:
enum class EAxis;

#undef AFTER_EXTRA
public:
    /**
     * @symbol ??0ProjectileComponent@@QEAA@XZ
     * @hash   51700832
     */
    MCAPI ProjectileComponent();
    /**
     * @symbol ??0ProjectileComponent@@QEAA@AEBV0@@Z
     * @hash   493300033
     */
    MCAPI ProjectileComponent(class ProjectileComponent const &);
    /**
     * @symbol ?addAdditionalSaveData@ProjectileComponent@@QEBAXAEAVCompoundTag@@@Z
     * @hash   470090248
     */
    MCAPI void addAdditionalSaveData(class CompoundTag &) const;
    /**
     * @symbol ?getAnchor@ProjectileComponent@@QEAA?AW4ProjectileAnchor@@XZ
     * @hash   1652386834
     */
    MCAPI enum class ProjectileAnchor getAnchor();
    /**
     * @symbol ?getCatchFire@ProjectileComponent@@QEBA_NXZ
     * @hash   -1196308392
     */
    MCAPI bool getCatchFire() const;
    /**
     * @symbol ?getEnchantChanneling@ProjectileComponent@@QEBA_NXZ
     * @hash   -1820151032
     */
    MCAPI bool getEnchantChanneling() const;
    /**
     * @symbol ?getGravity@ProjectileComponent@@QEAAMXZ
     * @hash   -885064026
     */
    MCAPI float getGravity();
    /**
     * @symbol ?getIsDangerous@ProjectileComponent@@QEAA_NXZ
     * @hash   -342490296
     */
    MCAPI bool getIsDangerous();
    /**
     * @symbol ?getKnockbackForce@ProjectileComponent@@QEBAMXZ
     * @hash   -1762164078
     */
    MCAPI float getKnockbackForce() const;
    /**
     * @symbol ?getNoPhysics@ProjectileComponent@@QEBA_NXZ
     * @hash   -515578200
     */
    MCAPI bool getNoPhysics() const;
    /**
     * @symbol ?getOffset@ProjectileComponent@@QEAA?AVVec3@@XZ
     * @hash   -982484778
     */
    MCAPI class Vec3 getOffset();
    /**
     * @symbol ?getShootSound@ProjectileComponent@@QEAA?AW4LevelSoundEvent@@XZ
     * @hash   -1912575414
     */
    MCAPI enum class LevelSoundEvent getShootSound();
    /**
     * @symbol ?getShootTarget@ProjectileComponent@@QEAA_NXZ
     * @hash   538967704
     */
    MCAPI bool getShootTarget();
    /**
     * @symbol ?getShooterAngle@ProjectileComponent@@QEBA?AVVec3@@AEAVActor@@@Z
     * @hash   856393633
     */
    MCAPI class Vec3 getShooterAngle(class Actor &) const;
    /**
     * @symbol ?getThrowPower@ProjectileComponent@@QEBAMXZ
     * @hash   -1633960160
     */
    MCAPI float getThrowPower() const;
    /**
     * @symbol ?getUncertainty@ProjectileComponent@@QEBAMW4Difficulty@@@Z
     * @hash   -642123831
     */
    MCAPI float getUncertainty(enum class Difficulty) const;
    /**
     * @symbol ?getUncertaintyBase@ProjectileComponent@@QEBAMXZ
     * @hash   1257939622
     */
    MCAPI float getUncertaintyBase() const;
    /**
     * @symbol ?getUncertaintyMultiplier@ProjectileComponent@@QEBAMXZ
     * @hash   786121046
     */
    MCAPI float getUncertaintyMultiplier() const;
    /**
     * @symbol ?handleMovementGravity@ProjectileComponent@@QEAAXAEAVActor@@@Z
     * @hash   1351109404
     */
    MCAPI void handleMovementGravity(class Actor &);
    /**
     * @symbol ?handleMovementHoming@ProjectileComponent@@QEAAXAEAVActor@@@Z
     * @hash   1335786966
     */
    MCAPI void handleMovementHoming(class Actor &);
    /**
     * @symbol ?hurt@ProjectileComponent@@QEAAXAEAVActor@@AEBVActorDamageSource@@@Z
     * @hash   137684161
     */
    MCAPI void hurt(class Actor &, class ActorDamageSource const &);
    /**
     * @symbol ?incrementFlightTime@ProjectileComponent@@QEAAHXZ
     * @hash   -1671998862
     */
    MCAPI int incrementFlightTime();
    /**
     * @symbol ?incrementLife@ProjectileComponent@@QEAAHXZ
     * @hash   -2091300544
     */
    MCAPI int incrementLife();
    /**
     * @symbol ?incrementOnGroundTime@ProjectileComponent@@QEAAHXZ
     * @hash   -1517317378
     */
    MCAPI int incrementOnGroundTime();
    /**
     * @symbol ?initFromDefinition@ProjectileComponent@@QEAAXAEAVActor@@@Z
     * @hash   178257298
     */
    MCAPI void initFromDefinition(class Actor &);
    /**
     * @symbol ?lerpMotion@ProjectileComponent@@QEAAXAEAVActor@@AEBVVec3@@@Z
     * @hash   -1936429907
     */
    MCAPI void lerpMotion(class Actor &, class Vec3 const &);
    /**
     * @symbol ?onHit@ProjectileComponent@@QEAAXAEAVActor@@AEBVHitResult@@@Z
     * @hash   1943380891
     */
    MCAPI void onHit(class Actor &, class HitResult const &);
    /**
     * @symbol ??4ProjectileComponent@@QEAAAEAV0@AEBV0@@Z
     * @hash   -2079209508
     */
    MCAPI class ProjectileComponent & operator=(class ProjectileComponent const &);
    /**
     * @symbol ?readAdditionalSaveData@ProjectileComponent@@QEAAXAEAVActor@@AEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     * @hash   1267572104
     */
    MCAPI void readAdditionalSaveData(class Actor &, class CompoundTag const &, class DataLoadHelper &);
    /**
     * @symbol ?setActiveTarget@ProjectileComponent@@QEAAXAEAVActor@@PEAV2@@Z
     * @hash   1215283859
     */
    MCAPI void setActiveTarget(class Actor &, class Actor *);
    /**
     * @symbol ?setChanneling@ProjectileComponent@@QEAAXXZ
     * @hash   -940659769
     */
    MCAPI void setChanneling();
    /**
     * @symbol ?setEnchantImpaler@ProjectileComponent@@QEAAXAEBH@Z
     * @hash   157515097
     */
    MCAPI void setEnchantImpaler(int const &);
    /**
     * @symbol ?setKnockbackForce@ProjectileComponent@@QEAAXM@Z
     * @hash   881853744
     */
    MCAPI void setKnockbackForce(float);
    /**
     * @symbol ?setNoPhysics@ProjectileComponent@@QEAAX_N@Z
     * @hash   -239489532
     */
    MCAPI void setNoPhysics(bool);
    /**
     * @symbol ?setOwnerId@ProjectileComponent@@QEAAXUActorUniqueID@@@Z
     * @hash   118494680
     */
    MCAPI void setOwnerId(struct ActorUniqueID);
    /**
     * @symbol ?setPotionEffect@ProjectileComponent@@QEAAXH@Z
     * @hash   -1943154598
     */
    MCAPI void setPotionEffect(int);
    /**
     * @symbol ?setSplashRange@ProjectileComponent@@QEAAXM@Z
     * @hash   -99586690
     */
    MCAPI void setSplashRange(float);
    /**
     * @symbol ?shoot@ProjectileComponent@@QEAAXAEAVActor@@0@Z
     * @hash   -1841126313
     */
    MCAPI void shoot(class Actor &, class Actor &);
    /**
     * @symbol ?shoot@ProjectileComponent@@QEAAXAEAVActor@@AEBVVec3@@MM1PEAV2@@Z
     * @hash   996253297
     */
    MCAPI void shoot(class Actor &, class Vec3 const &, float, float, class Vec3 const &, class Actor *);
    /**
     * @symbol ??1ProjectileComponent@@QEAA@XZ
     * @hash   -10066032
     */
    MCAPI ~ProjectileComponent();
    /**
     * @symbol ?DELAY_ON_HIT@ProjectileComponent@@2IB
     * @hash   -966488987
     */
    MCAPI static unsigned int const DELAY_ON_HIT;

//private:
    /**
     * @symbol ?_handleLightningOnHit@ProjectileComponent@@AEAAXAEAVActor@@@Z
     * @hash   -1112434194
     */
    MCAPI void _handleLightningOnHit(class Actor &);
    /**
     * @symbol ?_selectNextMoveDirection@ProjectileComponent@@AEAAXAEAVActor@@W4EAxis@1@@Z
     * @hash   -1085540261
     */
    MCAPI void _selectNextMoveDirection(class Actor &, enum class ProjectileComponent::EAxis);

private:

};
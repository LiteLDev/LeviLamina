/**
 * @file  CampfireBlockActor.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockActor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class CampfireBlockActor.
 *
 */
class CampfireBlockActor : public BlockActor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_CAMPFIREBLOCKACTOR
public:
    class CampfireBlockActor& operator=(class CampfireBlockActor const &) = delete;
    CampfireBlockActor(class CampfireBlockActor const &) = delete;
    CampfireBlockActor() = delete;
#endif

public:
    /**
     * @vftbl  0
     * @hash   1871792457
     */
    virtual ~CampfireBlockActor();
    /**
     * @vftbl  1
     * @symbol ?load@CampfireBlockActor@@UEAAXAEAVLevel@@AEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     * @hash   395848550
     */
    virtual void load(class Level &, class CompoundTag const &, class DataLoadHelper &);
    /**
     * @vftbl  2
     * @symbol ?save@CampfireBlockActor@@UEBA_NAEAVCompoundTag@@@Z
     * @hash   -537172555
     */
    virtual bool save(class CompoundTag &) const;
    /**
     * @vftbl  7
     * @symbol ?tick@CampfireBlockActor@@UEAAXAEAVBlockSource@@@Z
     * @hash   -795610897
     */
    virtual void tick(class BlockSource &);
    /**
     * @vftbl  8
     * @symbol ?onChanged@CampfireBlockActor@@UEAAXAEAVBlockSource@@@Z
     * @hash   -820357369
     */
    virtual void onChanged(class BlockSource &);
    /**
     * @vftbl  12
     * @hash   -291256027
     */
    virtual void __unk_vfn_12();
    /**
     * @vftbl  18
     * @hash   -285714901
     */
    virtual void __unk_vfn_18();
    /**
     * @vftbl  19
     * @symbol ?getShadowRadius@CampfireBlockActor@@UEBAMAEAVBlockSource@@@Z
     * @hash   1764508955
     */
    virtual float getShadowRadius(class BlockSource &) const;
    /**
     * @vftbl  31
     * @hash   -234921246
     */
    virtual void __unk_vfn_31();
    /**
     * @vftbl  32
     * @hash   -233997725
     */
    virtual void __unk_vfn_32();
    /**
     * @vftbl  33
     * @hash   -233074204
     */
    virtual void __unk_vfn_33();
    /**
     * @vftbl  34
     * @hash   -232150683
     */
    virtual void __unk_vfn_34();
    /**
     * @vftbl  35
     * @hash   -190772906
     */
    virtual void __unk_vfn_35();
    /**
     * @vftbl  36
     * @hash   -189849385
     */
    virtual void __unk_vfn_36();
    /**
     * @vftbl  37
     * @symbol ?_getUpdatePacket@CampfireBlockActor@@MEAA?AV?$unique_ptr@VBlockActorDataPacket@@U?$default_delete@VBlockActorDataPacket@@@std@@@std@@AEAVBlockSource@@@Z
     * @hash   -1905828040
     */
    virtual std::unique_ptr<class BlockActorDataPacket> _getUpdatePacket(class BlockSource &);
    /**
     * @vftbl  38
     * @symbol ?_onUpdatePacket@CampfireBlockActor@@MEAAXAEBVCompoundTag@@AEAVBlockSource@@@Z
     * @hash   1486049146
     */
    virtual void _onUpdatePacket(class CompoundTag const &, class BlockSource &);
    /**
     * @symbol ??0CampfireBlockActor@@QEAA@AEBVBlockPos@@@Z
     * @hash   -1724247870
     */
    MCAPI CampfireBlockActor(class BlockPos const &);
    /**
     * @symbol ?dropAllItems@CampfireBlockActor@@QEAAXAEAVBlockSource@@@Z
     * @hash   1943390932
     */
    MCAPI void dropAllItems(class BlockSource &);
    /**
     * @symbol ?getCampfireTag@CampfireBlockActor@@QEBAAEBVHashedString@@AEBVBlockSource@@@Z
     * @hash   508946009
     */
    MCAPI class HashedString const & getCampfireTag(class BlockSource const &) const;
    /**
     * @symbol ?getCookingItem@CampfireBlockActor@@QEAAAEBVItemInstance@@H@Z
     * @hash   -1663700159
     */
    MCAPI class ItemInstance const & getCookingItem(int);
    /**
     * @symbol ?setItem@CampfireBlockActor@@QEAA_NAEAVBlockSource@@AEBVItemInstance@@@Z
     * @hash   202799722
     */
    MCAPI bool setItem(class BlockSource &, class ItemInstance const &);
    /**
     * @symbol ?MAX_SMOKE_THRESHOLD_COUNTER@CampfireBlockActor@@2HB
     * @hash   -741082653
     */
    MCAPI static int const MAX_SMOKE_THRESHOLD_COUNTER;
    /**
     * @symbol ?MIN_SMOKE_THRESHOLD_COUNTER@CampfireBlockActor@@2HB
     * @hash   -405615713
     */
    MCAPI static int const MIN_SMOKE_THRESHOLD_COUNTER;

//private:
    /**
     * @symbol ?_finishCooking@CampfireBlockActor@@AEAAXAEAVBlockSource@@H@Z
     * @hash   1740027680
     */
    MCAPI void _finishCooking(class BlockSource &, int);
    /**
     * @symbol ?_removeItem@CampfireBlockActor@@AEAAXH@Z
     * @hash   907471484
     */
    MCAPI void _removeItem(int);

private:

};
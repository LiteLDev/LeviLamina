/**
 * @file  Biome.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here
enum class VanillaBiomeTypes;

#undef BEFORE_EXTRA

/**
 * @brief MC class Biome.
 *
 */
class Biome {

#define AFTER_EXTRA
    // Add Member There
public:
    enum class BiomeTempCategory;
    LIAPI int getId() const;
    LIAPI std::string const& getName() const;
    LIAPI static Biome* fromId(int id);
    LIAPI static Biome* fromName(std::string const& name);
    LIAPI static std::vector<Biome*> getBiomesByType(VanillaBiomeTypes type);

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_BIOME
public:
    class Biome& operator=(class Biome const &) = delete;
    Biome(class Biome const &) = delete;
    Biome() = delete;
#endif

public:
    /**
     * @symbol ??0Biome@@QEAA@H@Z
     * @hash   -1369009825
     */
    MCAPI Biome(int);
    /**
     * @symbol ?addTag@Biome@@QEAAAEAV1@VHashedString@@AEAV?$TagRegistry@U?$IDType@UBiomeTagIDType@@@@U?$IDType@UBiomeTagSetIDType@@@@@@@Z
     * @hash   -1961504938
     */
    MCAPI class Biome & addTag(class HashedString, class TagRegistry<struct IDType<struct BiomeTagIDType>, struct IDType<struct BiomeTagSetIDType>> &);
    /**
     * @symbol ?cacheClientComponentData@Biome@@QEAAXXZ
     * @hash   -1107598201
     */
    MCAPI void cacheClientComponentData();
    /**
     * @symbol ?canHaveSnowfall@Biome@@QEBA_NAEBVBlockSource@@AEBVBlockPos@@@Z
     * @hash   1915565098
     */
    MCAPI bool canHaveSnowfall(class BlockSource const &, class BlockPos const &) const;
    /**
     * @symbol ?getBiomeType@Biome@@QEBA?AW4VanillaBiomeTypes@@XZ
     * @hash   -636073336
     */
    MCAPI enum class VanillaBiomeTypes getBiomeType() const;
    /**
     * @symbol ?getBirchFoliageColor@Biome@@QEBAHAEBVBlockPos@@@Z
     * @hash   -661401549
     */
    MCAPI int getBirchFoliageColor(class BlockPos const &) const;
    /**
     * @symbol ?getDefaultBiomeTemperature@Biome@@QEBAMXZ
     * @hash   -1824142446
     */
    MCAPI float getDefaultBiomeTemperature() const;
    /**
     * @symbol ?getDownfall@Biome@@QEBAMXZ
     * @hash   2025310092
     */
    MCAPI float getDownfall() const;
    /**
     * @symbol ?getEvergreenFoliageColor@Biome@@QEBAHAEBVBlockPos@@@Z
     * @hash   1946079059
     */
    MCAPI int getEvergreenFoliageColor(class BlockPos const &) const;
    /**
     * @symbol ?getFoliageColor@Biome@@QEBAHAEBVBlockPos@@@Z
     * @hash   -1336062779
     */
    MCAPI int getFoliageColor(class BlockPos const &) const;
    /**
     * @symbol ?getMapBirchFoliageColor@Biome@@QEBAHAEBVBlockPos@@@Z
     * @hash   -1953923675
     */
    MCAPI int getMapBirchFoliageColor(class BlockPos const &) const;
    /**
     * @symbol ?getMapEvergreenFoliageColor@Biome@@QEBAHAEBVBlockPos@@@Z
     * @hash   898572213
     */
    MCAPI int getMapEvergreenFoliageColor(class BlockPos const &) const;
    /**
     * @symbol ?getMapFoliageColor@Biome@@QEBAHAEBVBlockPos@@@Z
     * @hash   273686435
     */
    MCAPI int getMapFoliageColor(class BlockPos const &) const;
    /**
     * @symbol ?getMapGrassColor@Biome@@QEBAHAEBVBlockPos@@@Z
     * @hash   679970547
     */
    MCAPI int getMapGrassColor(class BlockPos const &) const;
    /**
     * @symbol ?getMobs@Biome@@QEBAAEBV?$vector@VMobSpawnerData@@V?$allocator@VMobSpawnerData@@@std@@@std@@XZ
     * @hash   834399578
     */
    MCAPI std::vector<class MobSpawnerData> const & getMobs() const;
    /**
     * @symbol ?getMobsMutable@Biome@@QEAAAEAV?$vector@VMobSpawnerData@@V?$allocator@VMobSpawnerData@@@std@@@std@@XZ
     * @hash   471468670
     */
    MCAPI std::vector<class MobSpawnerData> & getMobsMutable();
    /**
     * @symbol ?getSnowAccumulationLayers@Biome@@QEBAHXZ
     * @hash   96871288
     */
    MCAPI int getSnowAccumulationLayers() const;
    /**
     * @symbol ?getTemperature@Biome@@QEBAMAEBVBlockSource@@AEBVBlockPos@@@Z
     * @hash   254700996
     */
    MCAPI float getTemperature(class BlockSource const &, class BlockPos const &) const;
    /**
     * @symbol ?getTemperatureCategory@Biome@@QEBA?AW4BiomeTempCategory@1@XZ
     * @hash   1107258457
     */
    MCAPI enum class Biome::BiomeTempCategory getTemperatureCategory() const;
    /**
     * @symbol ?getTemperatureWorldGen@Biome@@QEBAMAEBVBlockPos@@F@Z
     * @hash   -1217539477
     */
    MCAPI float getTemperatureWorldGen(class BlockPos const &, short) const;
    /**
     * @symbol ?hasTag@Biome@@QEBA_NAEBU?$IDType@UBiomeTagIDType@@@@AEBV?$TagRegistry@U?$IDType@UBiomeTagIDType@@@@U?$IDType@UBiomeTagSetIDType@@@@@@@Z
     * @hash   840832762
     */
    MCAPI bool hasTag(struct IDType<struct BiomeTagIDType> const &, class TagRegistry<struct IDType<struct BiomeTagIDType>, struct IDType<struct BiomeTagSetIDType>> const &) const;
    /**
     * @symbol ?hasTag@Biome@@QEBA_NAEBVWellKnownTagID@@@Z
     * @hash   834255569
     */
    MCAPI bool hasTag(class WellKnownTagID const &) const;
    /**
     * @symbol ?hasTag@Biome@@QEBA_N_KAEBV?$TagRegistry@U?$IDType@UBiomeTagIDType@@@@U?$IDType@UBiomeTagSetIDType@@@@@@@Z
     * @hash   1377615462
     */
    MCAPI bool hasTag(unsigned __int64, class TagRegistry<struct IDType<struct BiomeTagIDType>, struct IDType<struct BiomeTagSetIDType>> const &) const;
    /**
     * @symbol ?initEntity@Biome@@QEAAXAEAVEntityRegistry@@@Z
     * @hash   1293732714
     */
    MCAPI void initEntity(class EntityRegistry &);
    /**
     * @symbol ?isHumid@Biome@@QEBA_NXZ
     * @hash   860203774
     */
    MCAPI bool isHumid() const;
    /**
     * @symbol ?isSnowCovered@Biome@@QEBA_NXZ
     * @hash   -1871192178
     */
    MCAPI bool isSnowCovered() const;
    /**
     * @symbol ?setColor@Biome@@QEAAAEAV1@H@Z
     * @hash   -2003613908
     */
    MCAPI class Biome & setColor(int);
    /**
     * @symbol ?setColor@Biome@@QEAAAEAV1@H_N@Z
     * @hash   755989757
     */
    MCAPI class Biome & setColor(int, bool);
    /**
     * @symbol ?setDepthAndScale@Biome@@QEAAAEAV1@AEBUBiomeHeight@@@Z
     * @hash   -543605046
     */
    MCAPI class Biome & setDepthAndScale(struct BiomeHeight const &);
    /**
     * @symbol ?setMapWaterColor@Biome@@QEAAAEAV1@H@Z
     * @hash   -85328372
     */
    MCAPI class Biome & setMapWaterColor(int);
    /**
     * @symbol ?setName@Biome@@QEAAAEAV1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   -189881052
     */
    MCAPI class Biome & setName(std::string const &);
    /**
     * @symbol ?setNoRain@Biome@@QEAAAEAV1@XZ
     * @hash   -244196035
     */
    MCAPI class Biome & setNoRain();
    /**
     * @symbol ?setOceanRuinConfig@Biome@@QEAAAEAV1@AEBUOceanRuinConfiguration@@@Z
     * @hash   565539954
     */
    MCAPI class Biome & setOceanRuinConfig(struct OceanRuinConfiguration const &);
    /**
     * @symbol ?setOddColor@Biome@@QEAAAEAV1@H@Z
     * @hash   471054302
     */
    MCAPI class Biome & setOddColor(int);
    /**
     * @symbol ?setSnowAccumulation@Biome@@QEAAAEAV1@MM@Z
     * @hash   -2015861787
     */
    MCAPI class Biome & setSnowAccumulation(float, float);
    /**
     * @symbol ?writePacketData@Biome@@QEAAXAEAVCompoundTag@@AEAV?$TagRegistry@U?$IDType@UBiomeTagIDType@@@@U?$IDType@UBiomeTagSetIDType@@@@@@@Z
     * @hash   468092904
     */
    MCAPI void writePacketData(class CompoundTag &, class TagRegistry<struct IDType<struct BiomeTagIDType>, struct IDType<struct BiomeTagSetIDType>> &);
    /**
     * @symbol ?BACKCOMPAT_FOG_NAME@Biome@@2V?$basic_string_span@$$CBD$0?0@gsl@@B
     * @hash   643499621
     */
    MCAPI static class gsl::basic_string_span<char const, -1> const BACKCOMPAT_FOG_NAME;
    /**
     * @symbol ?DEFAULT_FOG_COLOR@Biome@@2VColor@mce@@B
     * @hash   235020791
     */
    MCAPI static class mce::Color const DEFAULT_FOG_COLOR;
    /**
     * @symbol ?DEFAULT_FOG_ID@Biome@@2V?$basic_string_span@$$CBD$0?0@gsl@@B
     * @hash   468141815
     */
    MCAPI static class gsl::basic_string_span<char const, -1> const DEFAULT_FOG_ID;
    /**
     * @symbol ?DEFAULT_UNDERWATER_COLOR@Biome@@2VColor@mce@@B
     * @hash   -1186284647
     */
    MCAPI static class mce::Color const DEFAULT_UNDERWATER_COLOR;
    /**
     * @symbol ?DEFAULT_WATER_COLOR@Biome@@2VColor@mce@@B
     * @hash   -1193727577
     */
    MCAPI static class mce::Color const DEFAULT_WATER_COLOR;
    /**
     * @symbol ?RAIN_TEMP_THRESHOLD@Biome@@2MB
     * @hash   514781547
     */
    MCAPI static float const RAIN_TEMP_THRESHOLD;
    /**
     * @symbol ?buildCachedTemperatureNoise@Biome@@SAXAEAVLevelChunk@@@Z
     * @hash   977093428
     */
    MCAPI static void buildCachedTemperatureNoise(class LevelChunk &);

};
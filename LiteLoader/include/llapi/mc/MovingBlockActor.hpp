/**
 * @file  MovingBlockActor.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "BlockActor.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class MovingBlockActor.
 *
 */
class MovingBlockActor : public BlockActor {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MOVINGBLOCKACTOR
public:
    class MovingBlockActor& operator=(class MovingBlockActor const &) = delete;
    MovingBlockActor(class MovingBlockActor const &) = delete;
    MovingBlockActor() = delete;
#endif

public:
    /**
     * @vftbl  0
     * @hash   -668719968
     */
    virtual ~MovingBlockActor();
    /**
     * @vftbl  1
     * @symbol ?load@MovingBlockActor@@UEAAXAEAVLevel@@AEBVCompoundTag@@AEAVDataLoadHelper@@@Z
     * @hash   -1504780115
     */
    virtual void load(class Level &, class CompoundTag const &, class DataLoadHelper &);
    /**
     * @vftbl  2
     * @symbol ?save@MovingBlockActor@@UEBA_NAEAVCompoundTag@@@Z
     * @hash   -507969092
     */
    virtual bool save(class CompoundTag &) const;
    /**
     * @vftbl  7
     * @symbol ?tick@MovingBlockActor@@UEAAXAEAVBlockSource@@@Z
     * @hash   723216246
     */
    virtual void tick(class BlockSource &);
    /**
     * @vftbl  12
     * @hash   -291256027
     */
    virtual void __unk_vfn_12();
    /**
     * @vftbl  14
     * @symbol ?isPreserved@MovingBlockActor@@UEBA_NAEAVBlockSource@@@Z
     * @hash   348095186
     */
    virtual bool isPreserved(class BlockSource &) const;
    /**
     * @vftbl  15
     * @symbol ?shouldPreserve@MovingBlockActor@@UEAA_NAEAVBlockSource@@@Z
     * @hash   2134259282
     */
    virtual bool shouldPreserve(class BlockSource &);
    /**
     * @vftbl  18
     * @hash   -285714901
     */
    virtual void __unk_vfn_18();
    /**
     * @vftbl  22
     * @symbol ?getCollisionShape@MovingBlockActor@@UEBA?AVAABB@@AEBVIConstBlockSource@@@Z
     * @hash   -1877304629
     */
    virtual class AABB getCollisionShape(class IConstBlockSource const &) const;
    /**
     * @vftbl  30
     * @symbol ?getOwningPiston@MovingBlockActor@@UEAAPEAVPistonBlockActor@@AEAVBlockSource@@@Z
     * @hash   -62675917
     */
    virtual class PistonBlockActor * getOwningPiston(class BlockSource &);
    /**
     * @vftbl  31
     * @hash   -234921246
     */
    virtual void __unk_vfn_31();
    /**
     * @vftbl  32
     * @hash   -233997725
     */
    virtual void __unk_vfn_32();
    /**
     * @vftbl  33
     * @hash   -233074204
     */
    virtual void __unk_vfn_33();
    /**
     * @vftbl  34
     * @hash   -232150683
     */
    virtual void __unk_vfn_34();
    /**
     * @vftbl  35
     * @hash   -190772906
     */
    virtual void __unk_vfn_35();
    /**
     * @vftbl  36
     * @hash   -189849385
     */
    virtual void __unk_vfn_36();
    /**
     * @vftbl  37
     * @symbol ?_getUpdatePacket@MovingBlockActor@@MEAA?AV?$unique_ptr@VBlockActorDataPacket@@U?$default_delete@VBlockActorDataPacket@@@std@@@std@@AEAVBlockSource@@@Z
     * @hash   -594800017
     */
    virtual std::unique_ptr<class BlockActorDataPacket> _getUpdatePacket(class BlockSource &);
    /**
     * @vftbl  38
     * @symbol ?_onUpdatePacket@MovingBlockActor@@MEAAXAEBVCompoundTag@@AEAVBlockSource@@@Z
     * @hash   1380925795
     */
    virtual void _onUpdatePacket(class CompoundTag const &, class BlockSource &);
    /**
     * @symbol ??0MovingBlockActor@@QEAA@AEBVBlockPos@@@Z
     * @hash   -126615591
     */
    MCAPI MovingBlockActor(class BlockPos const &);
    /**
     * @symbol ?_validPistonPos@MovingBlockActor@@QEBA_NAEBVIConstBlockSource@@@Z
     * @hash   -611485561
     */
    MCAPI bool _validPistonPos(class IConstBlockSource const &) const;
    /**
     * @symbol ?aquireWrappedBlockActor@MovingBlockActor@@QEAA?AV?$shared_ptr@VBlockActor@@@std@@XZ
     * @hash   -857485427
     */
    MCAPI class std::shared_ptr<class BlockActor> aquireWrappedBlockActor();
    /**
     * @symbol ?getDrawPos@MovingBlockActor@@QEBA?AVVec3@@AEBVIConstBlockSource@@M@Z
     * @hash   439201514
     */
    MCAPI class Vec3 getDrawPos(class IConstBlockSource const &, float) const;
    /**
     * @symbol ?getWrappedBlock@MovingBlockActor@@QEBAAEBVBlock@@XZ
     * @hash   2004525702
     */
    MCAPI class Block const & getWrappedBlock() const;
    /**
     * @symbol ?getWrappedExtraBlock@MovingBlockActor@@QEAAAEBVBlock@@XZ
     * @hash   548786730
     */
    MCAPI class Block const & getWrappedExtraBlock();
    /**
     * @symbol ?moveCollidedEntities@MovingBlockActor@@QEAAXAEAVPistonBlockActor@@AEAVBlockSource@@@Z
     * @hash   767597035
     */
    MCAPI void moveCollidedEntities(class PistonBlockActor &, class BlockSource &);
    /**
     * @symbol ?registerPiston@MovingBlockActor@@QEAAXAEBVBlockSource@@AEBVBlockPos@@@Z
     * @hash   -2119409375
     */
    MCAPI void registerPiston(class BlockSource const &, class BlockPos const &);
    /**
     * @symbol ?setWrappedBlock@MovingBlockActor@@QEAAXAEBVBlock@@@Z
     * @hash   -1785077832
     */
    MCAPI void setWrappedBlock(class Block const &);
    /**
     * @symbol ?setWrappedBlockActor@MovingBlockActor@@QEAAXV?$shared_ptr@VBlockActor@@@std@@@Z
     * @hash   1100300393
     */
    MCAPI void setWrappedBlockActor(class std::shared_ptr<class BlockActor>);
    /**
     * @symbol ?setWrappedExtraBlock@MovingBlockActor@@QEAAXAEBVBlock@@@Z
     * @hash   -209123162
     */
    MCAPI void setWrappedExtraBlock(class Block const &);

};
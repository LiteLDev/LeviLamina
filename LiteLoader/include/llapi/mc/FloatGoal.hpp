/**
 * @file  FloatGoal.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class FloatGoal.
 *
 */
class FloatGoal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_FLOATGOAL
public:
    class FloatGoal& operator=(class FloatGoal const &) = delete;
    FloatGoal(class FloatGoal const &) = delete;
    FloatGoal() = delete;
#endif

public:
    /**
     * @vftbl  0
     * @hash   -184219171
     */
    virtual ~FloatGoal();
    /**
     * @vftbl  1
     * @symbol ?canUse@FloatGoal@@UEAA_NXZ
     * @hash   -2061331839
     */
    virtual bool canUse();
    /**
     * @vftbl  2
     * @hash   -1315668094
     */
    virtual void __unk_vfn_2();
    /**
     * @vftbl  3
     * @hash   -1314744573
     */
    virtual void __unk_vfn_3();
    /**
     * @vftbl  4
     * @hash   -1263526156
     */
    virtual void __unk_vfn_4();
    /**
     * @vftbl  5
     * @hash   738599141
     */
    virtual void __unk_vfn_5();
    /**
     * @vftbl  6
     * @symbol ?tick@FloatGoal@@UEAAXXZ
     * @hash   151171493
     */
    virtual void tick();
    /**
     * @vftbl  7
     * @symbol ?appendDebugInfo@FloatGoal@@UEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
     * @hash   -1988168337
     */
    virtual void appendDebugInfo(std::string &) const;
    /**
     * @symbol ??0FloatGoal@@QEAA@AEAVMob@@_N@Z
     * @hash   206106767
     */
    MCAPI FloatGoal(class Mob &, bool);

};
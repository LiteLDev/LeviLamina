/**
 * @file  Potion.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Potion.
 *
 */
class Potion {

#define AFTER_EXTRA
// Add Member There
public:
enum class PotionType;
enum class PotionVariant;

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_POTION
public:
    class Potion& operator=(class Potion const &) = delete;
    Potion() = delete;
#endif

public:
    /**
     * @symbol ??0Potion@@QEAA@AEBV0@@Z
     * @hash   1080165489
     */
    MCAPI Potion(class Potion const &);
    /**
     * @symbol ?appendFormattedPotionText@Potion@@QEBAXAEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PotionType@1@W4PotionVariant@1@AEBVPlayer@@M@Z
     * @hash   -1791375274
     */
    MCAPI void appendFormattedPotionText(std::string &, enum class Potion::PotionType, enum class Potion::PotionVariant, class Player const &, float) const;
    /**
     * @symbol ?effectDurationToString@Potion@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PotionType@1@MAEBVMobEffectInstance@@@Z
     * @hash   -263272623
     */
    MCAPI std::string effectDurationToString(enum class Potion::PotionType, float, class MobEffectInstance const &) const;
    /**
     * @symbol ?effectPotencyToString@Potion@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBVMobEffectInstance@@@Z
     * @hash   -740787311
     */
    MCAPI std::string effectPotencyToString(class MobEffectInstance const &) const;
    /**
     * @symbol ?getDescriptionId@Potion@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PotionType@1@@Z
     * @hash   -1759734031
     */
    MCAPI std::string getDescriptionId(enum class Potion::PotionType) const;
    /**
     * @symbol ?getDescriptionId@Potion@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   691496232
     */
    MCAPI std::string getDescriptionId() const;
    /**
     * @symbol ?getMobEffect@Potion@@QEBAAEBVMobEffectInstance@@XZ
     * @hash   -1568867658
     */
    MCAPI class MobEffectInstance const & getMobEffect() const;
    /**
     * @symbol ?getMobEffectId@Potion@@QEBAHXZ
     * @hash   -387463720
     */
    MCAPI int getMobEffectId() const;
    /**
     * @symbol ?getMobEffects@Potion@@QEBAAEBV?$vector@VMobEffectInstance@@V?$allocator@VMobEffectInstance@@@std@@@std@@XZ
     * @hash   1600838906
     */
    MCAPI std::vector<class MobEffectInstance> const & getMobEffects() const;
    /**
     * @symbol ?getPotentencyDescription@Potion@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PotionType@1@M@Z
     * @hash   -1197590242
     */
    MCAPI std::string getPotentencyDescription(enum class Potion::PotionType, float) const;
    /**
     * @symbol ?getPotentencyDescription@Potion@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PotionType@1@MV?$basic_string_span@$$CBD$0?0@gsl@@AEBVMobEffectInstance@@@Z
     * @hash   -354729400
     */
    MCAPI std::string getPotentencyDescription(enum class Potion::PotionType, float, class gsl::basic_string_span<char const, -1>, class MobEffectInstance const &) const;
    /**
     * @symbol ?getPotionId@Potion@@QEBAHXZ
     * @hash   1200146470
     */
    MCAPI int getPotionId() const;
    /**
     * @symbol ?getPotionVariant@Potion@@QEBA?AW4PotionVariant@1@XZ
     * @hash   -268702934
     */
    MCAPI enum class Potion::PotionVariant getPotionVariant() const;
    /**
     * @symbol ?getPrefix@Potion@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   2011940888
     */
    MCAPI std::string getPrefix() const;
    /**
     * @symbol ??1Potion@@QEAA@XZ
     * @hash   71031917
     */
    MCAPI ~Potion();
    /**
     * @symbol ?Awkward@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   11979316
     */
    MCAPI static class std::shared_ptr<class Potion const> const Awkward;
    /**
     * @symbol ?FireResistance@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1416517098
     */
    MCAPI static class std::shared_ptr<class Potion const> const FireResistance;
    /**
     * @symbol ?Harming@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -329843692
     */
    MCAPI static class std::shared_ptr<class Potion const> const Harming;
    /**
     * @symbol ?Healing@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   2137952628
     */
    MCAPI static class std::shared_ptr<class Potion const> const Healing;
    /**
     * @symbol ?Invisibility@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1461483770
     */
    MCAPI static class std::shared_ptr<class Potion const> const Invisibility;
    /**
     * @symbol ?Leaping@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   671863972
     */
    MCAPI static class std::shared_ptr<class Potion const> const Leaping;
    /**
     * @symbol ?LongFireResistance@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   392138022
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongFireResistance;
    /**
     * @symbol ?LongInvisibility@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   703539734
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongInvisibility;
    /**
     * @symbol ?LongLeaping@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   691816884
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongLeaping;
    /**
     * @symbol ?LongMundane@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1959014708
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongMundane;
    /**
     * @symbol ?LongNightvision@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   325947572
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongNightvision;
    /**
     * @symbol ?LongPoison@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   294077222
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongPoison;
    /**
     * @symbol ?LongRegeneration@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1254987274
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongRegeneration;
    /**
     * @symbol ?LongSlowFalling@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1664677452
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongSlowFalling;
    /**
     * @symbol ?LongSlowness@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -975553450
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongSlowness;
    /**
     * @symbol ?LongStrength@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1952119654
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongStrength;
    /**
     * @symbol ?LongSwiftness@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1037328316
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongSwiftness;
    /**
     * @symbol ?LongTurtleMaster@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -840217626
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongTurtleMaster;
    /**
     * @symbol ?LongWaterBreathing@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1258528038
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongWaterBreathing;
    /**
     * @symbol ?LongWeakness@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1905911638
     */
    MCAPI static class std::shared_ptr<class Potion const> const LongWeakness;
    /**
     * @symbol ?Mundane@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1939061796
     */
    MCAPI static class std::shared_ptr<class Potion const> const Mundane;
    /**
     * @symbol ?Nightvision@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   117545892
     */
    MCAPI static class std::shared_ptr<class Potion const> const Nightvision;
    /**
     * @symbol ?Poison@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1507696618
     */
    MCAPI static class std::shared_ptr<class Potion const> const Poison;
    /**
     * @symbol ?Regeneration@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   874956518
     */
    MCAPI static class std::shared_ptr<class Potion const> const Regeneration;
    /**
     * @symbol ?SlowFalling@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1873079132
     */
    MCAPI static class std::shared_ptr<class Potion const> const SlowFalling;
    /**
     * @symbol ?Slowness@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1593632442
     */
    MCAPI static class std::shared_ptr<class Potion const> const Slowness;
    /**
     * @symbol ?Strength@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1334040662
     */
    MCAPI static class std::shared_ptr<class Potion const> const Strength;
    /**
     * @symbol ?StrongHarming@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1687602948
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongHarming;
    /**
     * @symbol ?StrongHealing@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -139568028
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongHealing;
    /**
     * @symbol ?StrongLeaping@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1605641308
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongLeaping;
    /**
     * @symbol ?StrongPoison@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1304040106
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongPoison;
    /**
     * @symbol ?StrongRegeneration@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -642909146
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongRegeneration;
    /**
     * @symbol ?StrongSlowness@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   817225350
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongSlowness;
    /**
     * @symbol ?StrongStrength@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -550068842
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongStrength;
    /**
     * @symbol ?StrongSwiftness@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -1296221644
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongSwiftness;
    /**
     * @symbol ?StrongTurtleMaster@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -228139498
     */
    MCAPI static class std::shared_ptr<class Potion const> const StrongTurtleMaster;
    /**
     * @symbol ?Swiftness@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1277520692
     */
    MCAPI static class std::shared_ptr<class Potion const> const Swiftness;
    /**
     * @symbol ?Thick@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -311811228
     */
    MCAPI static class std::shared_ptr<class Potion const> const Thick;
    /**
     * @symbol ?TurtleMaster@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1289726166
     */
    MCAPI static class std::shared_ptr<class Potion const> const TurtleMaster;
    /**
     * @symbol ?Water@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1843871860
     */
    MCAPI static class std::shared_ptr<class Potion const> const Water;
    /**
     * @symbol ?WaterBreathing@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -550127082
     */
    MCAPI static class std::shared_ptr<class Potion const> const WaterBreathing;
    /**
     * @symbol ?Weakness@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   1287832646
     */
    MCAPI static class std::shared_ptr<class Potion const> const Weakness;
    /**
     * @symbol ?Wither@Potion@@2V?$shared_ptr@$$CBVPotion@@@std@@B
     * @hash   -140637914
     */
    MCAPI static class std::shared_ptr<class Potion const> const Wither;
    /**
     * @symbol ?getBasePotion@Potion@@SA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PotionType@1@@Z
     * @hash   1251345449
     */
    MCAPI static std::string getBasePotion(enum class Potion::PotionType);
    /**
     * @symbol ?getPotion@Potion@@SA?AV?$shared_ptr@$$CBVPotion@@@std@@V?$basic_string_span@$$CBD$0?0@gsl@@@Z
     * @hash   1822085026
     */
    MCAPI static class std::shared_ptr<class Potion const> getPotion(class gsl::basic_string_span<char const, -1>);
    /**
     * @symbol ?getPotion@Potion@@SA?AV?$shared_ptr@$$CBVPotion@@@std@@H@Z
     * @hash   994775202
     */
    MCAPI static class std::shared_ptr<class Potion const> getPotion(int);
    /**
     * @symbol ?getPotionCount@Potion@@SAHXZ
     * @hash   -1324448472
     */
    MCAPI static int getPotionCount();
    /**
     * @symbol ?initPotions@Potion@@SAXXZ
     * @hash   1227114289
     */
    MCAPI static void initPotions();
    /**
     * @symbol ?shutdownPotions@Potion@@SAXXZ
     * @hash   1205822401
     */
    MCAPI static void shutdownPotions();

//private:
    /**
     * @symbol ??0Potion@@AEAA@V?$basic_string_span@$$CBD$0?0@gsl@@V?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@V?$vector@VMobEffectInstance@@V?$allocator@VMobEffectInstance@@@std@@@4@W4PotionVariant@0@@Z
     * @hash   -705152680
     */
    MCAPI Potion(class gsl::basic_string_span<char const, -1>, std::vector<std::string>, std::vector<class MobEffectInstance>, enum class Potion::PotionVariant);
    /**
     * @symbol ??0Potion@@AEAA@V?$basic_string_span@$$CBD$0?0@gsl@@0AEBVMobEffectInstance@@W4PotionVariant@0@@Z
     * @hash   -586450076
     */
    MCAPI Potion(class gsl::basic_string_span<char const, -1>, class gsl::basic_string_span<char const, -1>, class MobEffectInstance const &, enum class Potion::PotionVariant);
    /**
     * @symbol ?_getDescriptionIdCombiningStrings@Potion@@AEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PotionType@1@@Z
     * @hash   -637963200
     */
    MCAPI std::string _getDescriptionIdCombiningStrings(enum class Potion::PotionType) const;
    /**
     * @symbol ?_getDescriptionIdSingleString@Potion@@AEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@W4PotionType@1@@Z
     * @hash   -212674451
     */
    MCAPI std::string _getDescriptionIdSingleString(enum class Potion::PotionType) const;
    /**
     * @symbol ?addPotion@Potion@@CAXV?$shared_ptr@$$CBVPotion@@@std@@@Z
     * @hash   -1445826853
     */
    MCAPI static void addPotion(class std::shared_ptr<class Potion const>);

private:
    /**
     * @symbol ?mLastId@Potion@@0HA
     * @hash   820171342
     */
    MCAPI static int mLastId;
    /**
     * @symbol ?mPotionsById@Potion@@0PAV?$shared_ptr@$$CBVPotion@@@std@@A
     * @hash   -896341089
     */
    MCAPI static class std::shared_ptr<class Potion const> mPotionsById[];
    /**
     * @symbol ?mPotionsByName@Potion@@0V?$unordered_map@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HU?$hash@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@U?$equal_to@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@H@std@@@2@@std@@A
     * @hash   1749611150
     */
    MCAPI static class std::unordered_map<std::string, int, struct std::hash<std::string>, struct std::equal_to<std::string>, class std::allocator<struct std::pair<std::string const, int>>> mPotionsByName;

};
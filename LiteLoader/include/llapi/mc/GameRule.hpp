/**
 * @file  GameRule.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class GameRule.
 *
 */
class GameRule {

#define AFTER_EXTRA
// Add Member There
public:
union Value;
class ValidationError {
public:
    ValidationError() = delete;
    ValidationError(ValidationError const&) = delete;
    ValidationError(ValidationError const&&) = delete;
};
enum class Type;

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_GAMERULE
public:
    class GameRule& operator=(class GameRule const &) = delete;
    GameRule() = delete;
#endif

public:
    /**
     * @symbol ??0GameRule@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@_N@Z
     * @hash   -1335271336
     */
    MCAPI GameRule(std::string const &, bool);
    /**
     * @symbol ??0GameRule@@QEAA@$$QEAV0@@Z
     * @hash   855429749
     */
    MCAPI GameRule(class GameRule &&);
    /**
     * @symbol ??0GameRule@@QEAA@AEBV0@@Z
     * @hash   -330892287
     */
    MCAPI GameRule(class GameRule const &);
    /**
     * @symbol ?allowUseInCommand@GameRule@@QEBA_NXZ
     * @hash   1905627348
     */
    MCAPI bool allowUseInCommand() const;
    /**
     * @symbol ?canBeModifiedByPlayer@GameRule@@QEBA_NXZ
     * @hash   483265068
     */
    MCAPI bool canBeModifiedByPlayer() const;
    /**
     * @symbol ?getBool@GameRule@@QEBA_NXZ
     * @hash   966730564
     */
    MCAPI bool getBool() const;
    /**
     * @symbol ?getFloat@GameRule@@QEBAMXZ
     * @hash   -426193242
     */
    MCAPI float getFloat() const;
    /**
     * @symbol ?getInt@GameRule@@QEBAHXZ
     * @hash   504394904
     */
    MCAPI int getInt() const;
    /**
     * @symbol ?getName@GameRule@@QEBAAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   -1328635748
     */
    MCAPI std::string const & getName() const;
    /**
     * @symbol ?getType@GameRule@@QEBA?AW4Type@1@XZ
     * @hash   217376333
     */
    MCAPI enum class GameRule::Type getType() const;
    /**
     * @symbol ?getValue@GameRule@@QEBAAEBTValue@1@XZ
     * @hash   219973454
     */
    MCAPI union GameRule::Value const & getValue() const;
    /**
     * @symbol ??4GameRule@@QEAAAEAV0@$$QEAV0@@Z
     * @hash   348086792
     */
    MCAPI class GameRule & operator=(class GameRule &&);
    /**
     * @symbol ?requiresCheats@GameRule@@QEBA_NXZ
     * @hash   -694269346
     */
    MCAPI bool requiresCheats() const;
    /**
     * @symbol ?resetType@GameRule@@QEAAXW4Type@1@@Z
     * @hash   1434200045
     */
    MCAPI void resetType(enum class GameRule::Type);
    /**
     * @symbol ?setBool@GameRule@@QEAA_N_NPEA_NPEAVValidationError@1@@Z
     * @hash   -1604037209
     */
    MCAPI bool setBool(bool, bool *, class GameRule::ValidationError *);
    /**
     * @symbol ?setFloat@GameRule@@QEAA_NMPEA_NPEAVValidationError@1@@Z
     * @hash   -861557079
     */
    MCAPI bool setFloat(float, bool *, class GameRule::ValidationError *);
    /**
     * @symbol ?setInt@GameRule@@QEAA_NHPEA_NPEAVValidationError@1@@Z
     * @hash   -2103389455
     */
    MCAPI bool setInt(int, bool *, class GameRule::ValidationError *);
    /**
     * @symbol ?setTagDataNotFoundCallback@GameRule@@QEAAAEAV1@V?$function@$$A6AXAEAVGameRule@@@Z@std@@@Z
     * @hash   43698691
     */
    MCAPI class GameRule & setTagDataNotFoundCallback(class std::function<void (class GameRule &)>);
    /**
     * @symbol ?setValidateValueCallback@GameRule@@QEAAAEAV1@V?$function@$$A6A_NAEBTValue@GameRule@@PEAVValidationError@2@@Z@std@@@Z
     * @hash   -1060223419
     */
    MCAPI class GameRule & setValidateValueCallback(class std::function<bool (union GameRule::Value const &, class GameRule::ValidationError *)>);
    /**
     * @symbol ??1GameRule@@QEAA@XZ
     * @hash   -2140300296
     */
    MCAPI ~GameRule();

//protected:
    /**
     * @symbol ?_setDefaultValue@GameRule@@IEAAAEAV1@H@Z
     * @hash   -1926947597
     */
    MCAPI class GameRule & _setDefaultValue(int);
    /**
     * @symbol ?_setDefaultValue@GameRule@@IEAAAEAV1@_N@Z
     * @hash   -518814376
     */
    MCAPI class GameRule & _setDefaultValue(bool);

//private:
    /**
     * @symbol ?_set@GameRule@@AEAA_NAEBTValue@1@PEA_NPEAVValidationError@1@@Z
     * @hash   58523989
     */
    MCAPI bool _set(union GameRule::Value const &, bool *, class GameRule::ValidationError *);

protected:

private:

};
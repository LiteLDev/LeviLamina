/**
 * @file  Material.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Material.
 *
 */
class Material {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_MATERIAL
public:
    class Material& operator=(class Material const &) = delete;
    Material(class Material const &) = delete;
    Material() = delete;
#endif

public:
    /**
     * @symbol ?getBlocksMotion@Material@@QEBA_NXZ
     * @hash   -1286807386
     */
    MCAPI bool getBlocksMotion() const;
    /**
     * @symbol ?getBlocksPrecipitation@Material@@QEBA_NXZ
     * @hash   1616347614
     */
    MCAPI bool getBlocksPrecipitation() const;
    /**
     * @symbol ?getTranslucency@Material@@QEBAMXZ
     * @hash   -742428924
     */
    MCAPI float getTranslucency() const;
    /**
     * @symbol ?isAlwaysDestroyable@Material@@QEBA_NXZ
     * @hash   142692136
     */
    MCAPI bool isAlwaysDestroyable() const;
    /**
     * @symbol ?isLiquid@Material@@QEBA_NXZ
     * @hash   409616364
     */
    MCAPI bool isLiquid() const;
    /**
     * @symbol ?isReplaceable@Material@@QEBA_NXZ
     * @hash   -1826615110
     */
    MCAPI bool isReplaceable() const;
    /**
     * @symbol ?isSolid@Material@@QEBA_NXZ
     * @hash   1529322724
     */
    MCAPI bool isSolid() const;
    /**
     * @symbol ?isSolidBlocking@Material@@QEBA_NXZ
     * @hash   -1353948626
     */
    MCAPI bool isSolidBlocking() const;
    /**
     * @symbol ?isSuperHot@Material@@QEBA_NXZ
     * @hash   911748200
     */
    MCAPI bool isSuperHot() const;
    /**
     * @symbol ?isTopSolid@Material@@QEBA_N_N0@Z
     * @hash   -1309021813
     */
    MCAPI bool isTopSolid(bool, bool) const;
    /**
     * @symbol ?isType@Material@@QEBA_NW4MaterialType@@@Z
     * @hash   1813256331
     */
    MCAPI bool isType(enum class MaterialType) const;
    /**
     * @symbol ??9Material@@QEBA_NAEBV0@@Z
     * @hash   -1253889373
     */
    MCAPI bool operator!=(class Material const &) const;
    /**
     * @symbol ??8Material@@QEBA_NAEBV0@@Z
     * @hash   2090342032
     */
    MCAPI bool operator==(class Material const &) const;
    /**
     * @symbol ?addMaterial@Material@@SAXV?$unique_ptr@VMaterial@@U?$default_delete@VMaterial@@@std@@@std@@@Z
     * @hash   1675601686
     */
    MCAPI static void addMaterial(std::unique_ptr<class Material>);
    /**
     * @symbol ?getMaterial@Material@@SAAEBV1@W4MaterialType@@@Z
     * @hash   -1492642563
     */
    MCAPI static class Material const & getMaterial(enum class MaterialType);
    /**
     * @symbol ?initMaterials@Material@@SAXXZ
     * @hash   -686519103
     */
    MCAPI static void initMaterials();
    /**
     * @symbol ?teardownMaterials@Material@@SAXXZ
     * @hash   -1194528415
     */
    MCAPI static void teardownMaterials();

//private:
    /**
     * @symbol ?_setupSurfaceMaterials@Material@@CAXXZ
     * @hash   1386520998
     */
    MCAPI static void _setupSurfaceMaterials();

private:
    /**
     * @symbol ?mInitialized@Material@@0_NA
     * @hash   -1997583236
     */
    MCAPI static bool mInitialized;
    /**
     * @symbol ?mMaterials@Material@@0V?$vector@V?$unique_ptr@VMaterial@@U?$default_delete@VMaterial@@@std@@@std@@V?$allocator@V?$unique_ptr@VMaterial@@U?$default_delete@VMaterial@@@std@@@std@@@2@@std@@A
     * @hash   971214237
     */
    MCAPI static std::vector<std::unique_ptr<class Material>> mMaterials;

};
/**
 * @file  CommandBlockName.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

/**
 * @brief MC class CommandBlockName.
 *
 */
class CommandBlockName {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_COMMANDBLOCKNAME
public:
    class CommandBlockName& operator=(class CommandBlockName const &) = delete;
    CommandBlockName(class CommandBlockName const &) = delete;
    CommandBlockName() = delete;
#endif

public:
    /**
     * @symbol ??0CommandBlockName@@QEAA@_K@Z
     * @hash   -281105235
     */
    MCAPI CommandBlockName(unsigned __int64);
    /**
     * @symbol ?getDescriptionId@CommandBlockName@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ
     * @hash   -410531676
     */
    MCAPI std::string getDescriptionId() const;
    /**
     * @symbol ??BCommandBlockName@@QEBA_KXZ
     * @hash   1546137593
     */
    MCAPI operator unsigned __int64() const;
    /**
     * @symbol ?resolveBlock@CommandBlockName@@QEBA?AVCommandBlockNameResult@@AEBV?$vector@VBlockStateCommandParam@@V?$allocator@VBlockStateCommandParam@@@std@@@std@@AEAVCommandOutput@@@Z
     * @hash   87982740
     */
    MCAPI class CommandBlockNameResult resolveBlock(std::vector<class BlockStateCommandParam> const &, class CommandOutput &) const;
    /**
     * @symbol ?resolveBlock@CommandBlockName@@QEBA?AVCommandBlockNameResult@@AEBV?$vector@VBlockStateCommandParam@@V?$allocator@VBlockStateCommandParam@@@std@@@std@@HAEAVCommandOutput@@@Z
     * @hash   -439426903
     */
    MCAPI class CommandBlockNameResult resolveBlock(std::vector<class BlockStateCommandParam> const &, int, class CommandOutput &) const;
    /**
     * @symbol ?resolveBlock@CommandBlockName@@QEBA?AVCommandBlockNameResult@@H@Z
     * @hash   -980199763
     */
    MCAPI class CommandBlockNameResult resolveBlock(int) const;

};
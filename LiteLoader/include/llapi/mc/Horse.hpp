/**
 * @file  Horse.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"
#include "Actor.hpp"
#include "Animal.hpp"

#define BEFORE_EXTRA
// Include Headers or Declare Types Here

#undef BEFORE_EXTRA

/**
 * @brief MC class Horse.
 *
 */
class Horse : public Animal {

#define AFTER_EXTRA
// Add Member There

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_HORSE
public:
    class Horse& operator=(class Horse const &) = delete;
    Horse(class Horse const &) = delete;
    Horse() = delete;
#endif

public:
    /**
     * @vftbl  10
     * @symbol ?reloadHardcoded@Horse@@EEAAXW4InitializationMethod@Actor@@AEBVVariantParameterList@@@Z
     * @hash   -689245822
     */
    virtual void reloadHardcoded(enum class Actor::InitializationMethod, class VariantParameterList const &);
    /**
     * @vftbl  16
     * @hash   -323893205
     */
    virtual ~Horse();
    /**
     * @vftbl  37
     * @symbol ?getInterpolatedRidingOffset@Horse@@UEBA?AVVec3@@MH@Z
     * @hash   -976340367
     */
    virtual class Vec3 getInterpolatedRidingOffset(float, int) const;
    /**
     * @vftbl  42
     * @hash   -147616318
     */
    virtual void __unk_vfn_42();
    /**
     * @vftbl  50
     * @symbol ?normalTick@Horse@@UEAAXXZ
     * @hash   984188270
     */
    virtual void normalTick();
    /**
     * @vftbl  53
     * @symbol ?positionPassenger@Horse@@UEAAXAEAVActor@@M@Z
     * @hash   -331209370
     */
    virtual void positionPassenger(class Actor &, float);
    /**
     * @vftbl  63
     * @hash   -96891855
     */
    virtual void __unk_vfn_63();
    /**
     * @vftbl  70
     * @hash   -63575907
     */
    virtual void __unk_vfn_70();
    /**
     * @vftbl  82
     * @symbol ?getShadowRadius@Horse@@UEBAMXZ
     * @hash   -206365687
     */
    virtual float getShadowRadius() const;
    /**
     * @vftbl  84
     * @hash   -31252672
     */
    virtual void __unk_vfn_84();
    /**
     * @vftbl  87
     * @hash   -35939469
     */
    virtual void __unk_vfn_87();
    /**
     * @vftbl  90
     * @hash   -6317605
     */
    virtual void __unk_vfn_90();
    /**
     * @vftbl  94
     * @symbol ?isImmobile@Horse@@MEBA_NXZ
     * @hash   -806330604
     */
    virtual bool isImmobile() const;
    /**
     * @vftbl  98
     * @hash   -6386797
     */
    virtual void __unk_vfn_98();
    /**
     * @vftbl  101
     * @hash   1421489202
     */
    virtual void __unk_vfn_101();
    /**
     * @vftbl  108
     * @hash   1435411209
     */
    virtual void __unk_vfn_108();
    /**
     * @vftbl  110
     * @hash   1456652192
     */
    virtual void __unk_vfn_110();
    /**
     * @vftbl  111
     * @hash   1450118353
     */
    virtual void __unk_vfn_111();
    /**
     * @vftbl  113
     * @hash   1459422755
     */
    virtual void __unk_vfn_113();
    /**
     * @vftbl  124
     * @symbol ?onFailedTame@Horse@@UEAAXXZ
     * @hash   543876011
     */
    virtual void onFailedTame();
    /**
     * @vftbl  128
     * @symbol ?setStanding@Horse@@UEAAX_N@Z
     * @hash   89154036
     */
    virtual void setStanding(bool);
    /**
     * @vftbl  143
     * @symbol ?feed@Horse@@UEAAXH@Z
     * @hash   -2081634841
     */
    virtual void feed(int);
    /**
     * @vftbl  144
     * @symbol ?handleEntityEvent@Horse@@UEAAXW4ActorEvent@@H@Z
     * @hash   -26595223
     */
    virtual void handleEntityEvent(enum class ActorEvent, int);
    /**
     * @vftbl  176
     * @symbol ?canFreeze@Horse@@UEBA_NXZ
     * @hash   1807973122
     */
    virtual bool canFreeze() const;
    /**
     * @vftbl  183
     * @hash   1602074556
     */
    virtual void __unk_vfn_183();
    /**
     * @vftbl  185
     * @symbol ?getControllingPlayer@Horse@@UEBA?AUActorUniqueID@@XZ
     * @hash   -1740527334
     */
    virtual struct ActorUniqueID getControllingPlayer() const;
    /**
     * @vftbl  187
     * @symbol ?causeFallDamage@Horse@@MEAAXMMVActorDamageSource@@@Z
     * @hash   -236532458
     */
    virtual void causeFallDamage(float, float, class ActorDamageSource);
    /**
     * @vftbl  188
     * @symbol ?handleFallDistanceOnServer@Horse@@MEAAXMM_N@Z
     * @hash   -2053983313
     */
    virtual void handleFallDistanceOnServer(float, float, bool);
    /**
     * @vftbl  192
     * @symbol ?onSynchedDataUpdate@Horse@@UEAAXH@Z
     * @hash   -1397727947
     */
    virtual void onSynchedDataUpdate(int);
    /**
     * @vftbl  197
     * @hash   1692150047
     */
    virtual void __unk_vfn_197();
    /**
     * @vftbl  219
     * @symbol ?openContainerComponent@Horse@@UEAAXAEAVPlayer@@@Z
     * @hash   -152855421
     */
    virtual void openContainerComponent(class Player &);
    /**
     * @vftbl  222
     * @hash   -1937633230
     */
    virtual void __unk_vfn_222();
    /**
     * @vftbl  223
     * @hash   -1919411709
     */
    virtual void __unk_vfn_223();
    /**
     * @vftbl  245
     * @hash   -1918058621
     */
    virtual void __unk_vfn_245();
    /**
     * @vftbl  248
     * @hash   -511059482
     */
    virtual void __unk_vfn_248();
    /**
     * @vftbl  250
     * @symbol ?die@Horse@@UEAAXAEBVActorDamageSource@@@Z
     * @hash   1396685840
     */
    virtual void die(class ActorDamageSource const &);
    /**
     * @vftbl  264
     * @symbol ?updateEntitySpecificMolangVariables@Horse@@UEAAXAEAVRenderParams@@@Z
     * @hash   -610046395
     */
    virtual void updateEntitySpecificMolangVariables(class RenderParams &);
    /**
     * @vftbl  266
     * @hash   -1809581902
     */
    virtual void __unk_vfn_266();
    /**
     * @vftbl  267
     * @symbol ?_hurt@Horse@@MEAA_NAEBVActorDamageSource@@M_N1@Z
     * @hash   -971465053
     */
    virtual bool _hurt(class ActorDamageSource const &, float, bool, bool);
    /**
     * @vftbl  272
     * @symbol ?_playStepSound@Horse@@MEAAXAEBVBlockPos@@AEBVBlock@@@Z
     * @hash   -1700367531
     */
    virtual void _playStepSound(class BlockPos const &, class Block const &);
    /**
     * @vftbl  274
     * @hash   -1775342433
     */
    virtual void __unk_vfn_274();
    /**
     * @vftbl  281
     * @hash   -1807236101
     */
    virtual void __unk_vfn_281();
    /**
     * @vftbl  289
     * @hash   1042759315
     */
    virtual void __unk_vfn_289();
    /**
     * @vftbl  293
     * @symbol ?travel@Horse@@UEAAXMMM@Z
     * @hash   1381847598
     */
    virtual void travel(float, float, float);
    /**
     * @vftbl  295
     * @symbol ?aiStep@Horse@@UEAAXXZ
     * @hash   1881065342
     */
    virtual void aiStep();
    /**
     * @vftbl  308
     * @hash   -1142300981
     */
    virtual void __unk_vfn_308();
    /**
     * @vftbl  312
     * @hash   -1061460700
     */
    virtual void __unk_vfn_312();
    /**
     * @vftbl  317
     * @symbol ?getArmorValue@Horse@@UEBAHXZ
     * @hash   -141646282
     */
    virtual int getArmorValue() const;
    /**
     * @vftbl  346
     * @hash   -979336523
     */
    virtual void __unk_vfn_346();
    /**
     * @vftbl  360
     * @hash   -927619347
     */
    virtual void __unk_vfn_360();
    /**
     * @vftbl  362
     * @symbol ?setType@Horse@@UEAAXH@Z
     * @hash   -1618271303
     */
    virtual void setType(int);
    /**
     * @vftbl  363
     * @symbol ?getType@Horse@@UEBAHXZ
     * @hash   345451806
     */
    virtual int getType() const;
    /**
     * @vftbl  364
     * @symbol ?setHorseEating@Horse@@UEAAX_N@Z
     * @hash   -2022853315
     */
    virtual void setHorseEating(bool);
    /**
     * @vftbl  365
     * @symbol ?getStandAnim@Horse@@UEBAMM@Z
     * @hash   408907278
     */
    virtual float getStandAnim(float) const;
    /**
     * @vftbl  366
     * @symbol ?isAdult@Horse@@UEBA_NXZ
     * @hash   402971835
     */
    virtual bool isAdult() const;
    /**
     * @vftbl  367
     * @symbol ?isHorseEating@Horse@@UEBA_NXZ
     * @hash   -684806776
     */
    virtual bool isHorseEating() const;
    /**
     * @vftbl  368
     * @symbol ?isMouthOpen@Horse@@UEBA_NXZ
     * @hash   2132311234
     */
    virtual bool isMouthOpen() const;
    /**
     * @vftbl  369
     * @symbol ?isTailMoving@Horse@@UEBA_NXZ
     * @hash   -836456413
     */
    virtual bool isTailMoving() const;
    /**
     * @vftbl  370
     * @symbol ?makeMad@Horse@@UEAAXXZ
     * @hash   -1377387748
     */
    virtual void makeMad();
    /**
     * @vftbl  371
     * @symbol ?tameToPlayer@Horse@@UEAA_NAEAVPlayer@@_N@Z
     * @hash   1762433398
     */
    virtual bool tameToPlayer(class Player &, bool);
#ifdef ENABLE_VIRTUAL_FAKESYMBOL_HORSE
    /**
     * @symbol ?useNewAi@Horse@@MEBA_NXZ
     * @hash   -1763585499
     */
    MCVAPI bool useNewAi() const;
#endif
    /**
     * @symbol ??0Horse@@QEAA@PEAVActorDefinitionGroup@@AEBUActorDefinitionIdentifier@@AEAVEntityContext@@@Z
     * @hash   724443369
     */
    MCAPI Horse(class ActorDefinitionGroup *, struct ActorDefinitionIdentifier const &, class EntityContext &);
    /**
     * @symbol ?postAiStep@Horse@@QEAAXXZ
     * @hash   -511869813
     */
    MCAPI void postAiStep();
    /**
     * @symbol ?postNormalTick@Horse@@QEAAXXZ
     * @hash   1092528043
     */
    MCAPI void postNormalTick();
    /**
     * @symbol ?postTravel@Horse@@QEAAXPEAVActor@@_NW4HorsePostTravelType@@@Z
     * @hash   29239439
     */
    MCAPI void postTravel(class Actor *, bool, enum class HorsePostTravelType);
    /**
     * @symbol ?getInterpolatedRidingOffset@Horse@@SA?AVVec3@@AEBURenderRotationComponent@@AEBUStandAnimationComponent@@M@Z
     * @hash   518820789
     */
    MCAPI static class Vec3 getInterpolatedRidingOffset(struct RenderRotationComponent const &, struct StandAnimationComponent const &, float);
    /**
     * @symbol ?getInterpolatedRidingOffset@Horse@@SA?AVVec3@@AEBVVec2@@MMM@Z
     * @hash   327834824
     */
    MCAPI static class Vec3 getInterpolatedRidingOffset(class Vec2 const &, float, float, float);
    /**
     * @symbol ?getNewPassengerPos@Horse@@SA?AVVec3@@AEBURenderPositionComponent@@AEBURenderRotationComponent@@AEBUStandAnimationComponent@@MM@Z
     * @hash   1423839867
     */
    MCAPI static class Vec3 getNewPassengerPos(struct RenderPositionComponent const &, struct RenderRotationComponent const &, struct StandAnimationComponent const &, float, float);
    /**
     * @symbol ?setHorseFlag@Horse@@SAXVSynchedActorDataWriter@@W4HorseFlags@@_N@Z
     * @hash   83808230
     */
    MCAPI static void setHorseFlag(class SynchedActorDataWriter, enum class HorseFlags, bool);

//private:
    /**
     * @symbol ?_setHorseFlag@Horse@@AEAAXW4HorseFlags@@_N@Z
     * @hash   850205527
     */
    MCAPI void _setHorseFlag(enum class HorseFlags, bool);
    /**
     * @symbol ?_setHorseType@Horse@@AEAA_NAEAW4ActorType@@@Z
     * @hash   -1569949961
     */
    MCAPI bool _setHorseType(enum class ActorType &);

private:

};
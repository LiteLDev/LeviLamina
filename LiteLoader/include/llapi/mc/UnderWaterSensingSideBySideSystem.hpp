/**
 * @file  UnderWaterSensingSideBySideSystem.hpp
 * @note  This Header is auto generated by LiteLoaderBDS Toolchain.
 *
 */
#pragma once
#define AUTO_GENERATED
#include "../Global.h"

#define BEFORE_EXTRA

#undef BEFORE_EXTRA

/**
 * @brief MC class UnderWaterSensingSideBySideSystem.
 *
 */
class UnderWaterSensingSideBySideSystem {

#define AFTER_EXTRA

#undef AFTER_EXTRA
#ifndef DISABLE_CONSTRUCTOR_PREVENTION_UNDERWATERSENSINGSIDEBYSIDESYSTEM
public:
    class UnderWaterSensingSideBySideSystem& operator=(class UnderWaterSensingSideBySideSystem const &) = delete;
    UnderWaterSensingSideBySideSystem(class UnderWaterSensingSideBySideSystem const &) = delete;
    UnderWaterSensingSideBySideSystem() = delete;
#endif

public:
    /**
     * @symbol ?createSystem@UnderWaterSensingSideBySideSystem@@SA?AUTickingSystemWithInfo@@XZ
     * @hash   310699678
     */
    MCAPI static struct TickingSystemWithInfo createSystem();

//private:
    /**
     * @symbol ?doUnderWaterSensing@UnderWaterSensingSideBySideSystem@@CAXAEAVStrictEntityContext@@AEBUSideBySideLiquidSensingComponent@@V?$EntityModifierT@VEntityRegistryBase@@VStrictEntityContext@@V?$FlagComponent@UActorHeadInWaterFlag@@@@@@@Z
     * @hash   -1771689621
     */
    MCAPI static void doUnderWaterSensing(class StrictEntityContext &, struct SideBySideLiquidSensingComponent const &, class EntityModifierT<class EntityRegistryBase, class StrictEntityContext, class FlagComponent<struct ActorHeadInWaterFlag>>);

private:

};
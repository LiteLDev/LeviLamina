{
  "base": {
    "getDimName": {
      "0": "Thế giới chính",
      "1": "Địa ngục",
      "2": "Kết thúc",
      "unknown": "Không gian khác"
    }
  },
  "ll": {
    "main": {
      "checkRunningBDS": {
        "detected": "Đã phát hiện ra sự tồn tại của một trình chạy BDS khác với cùng một đường dẫn!",
        "tip": "Điều này có thể khiến cổng mạng và thế giới bị chiếm",
        "ask": "Bạn có muốn kết thúc trình chạy với PID {} không? (y=Có, n=Không, e=Thoát khỏi)"
      },
      "fixAllowList": {
        "removeEmptyAllowlist": "allowlist.json trống! Đang xóa...",
        "checkManually": "Cả allowlist.json và whitelist.json đều tồn tại và không trống. Vui lòng kiểm tra lại chúng",
        "renamed": "Đã đổi tên whitelist.json thành allowlist.json"
      },
      "warning": {
        "inDevMode": "Hiện đang ở chế độ nhà phát triển!",
        "betaVersion": "Hiện đang sử dụng phiên bản thử nghiệm (beta).",
        "productionEnv": "VUI LÒNG KHÔNG SỬ DỤNG TRONG MÔI TRƯỜNG SẢN XUẤT!",
        "protocolVersionNotMatch": {
          "1": "Phiên bản giao thức không khớp, phiên bản mục tiêu: {}, phiên bản hiện tại: {}.",
          "2": "Điều này rất có thể sẽ làm hỏng máy chủ, vui lòng sử dụng LiteLoader phù hợp với phiên bản BDS!"
        }
      }
    },
    "antiAbnormalItem": {
      "detected": "Người chơi ({}) lỗi dữ liệu vật phẩm!",
      "itemInfo": "Vật phẩm: {}"
    },
    "cmd": {
      "tpdim": {
        "success": "Dịch chuyển đối tượng {} đến {} ({:2f}, {:2f}, {:2f})",
        "error": {
          "noActorTeleported": "Không có đối tượng nào được dịch chuyển",
          "noActorSpecified": "Không có đối tượng nào được chỉ định"
        },
        "invalidDimid": "ID không gian không hợp lệ: {}"
      },
      "listPlugin": {
        "overview": "Danh sách plugin [{}]",
        "tip": "* Send command \"ll list <Tên plugin>\" for more information"
      },
      "pluginInfo": {
        "title": "Plugin <{}>",
        "error": {
          "pluginNotFound": "Không tìm thấy plugin <{}>!"
        }
      },
      "version": {
        "msg": "Bedrock Dedicated Server {}\n- với LiteLoaderBDS {}\n- Giao thức mạng: {}"
      },
      "help": {
        "msg": "[Giới thiệu]\nLiteLoaderBDS là một trình tải plugin không chính thức để phát triển mod cho Bedrock Dedicated Server.\nNó cung cấp một kho API khổng lồ, một hệ thống sự kiện mạnh mẽ và rất nhiều giao diện tiện ích được đóng gói.\n[Github]\n--> https://github.com/LiteLDev/LiteLoaderBDS <--\nChào mừng bạn đến với dự án github của chúng tôi để biết thêm thông tin ~"
      },
      "loadPlugin": {
        "success": "Đã tải plugin <{}>.",
        "fail": "Không tải được plugin {}"
      },
      "unloadPlugin": {
        "success": "Đã dỡ plugin <{}>.",
        "fail": "Không dỡ được plugin <{}>"
      },
      "reloadPlugin": {
        "success": "Đã tải lại plugin <{}>.",
        "fail": "Không tải lại được plugin <{}>"
      },
      "reloadAllPlugins": {
        "success": "{} plugin đã được tải lại thành công.",
        "fail": "Không tải lại được bất kỳ plugin nào"
      },
      "settings": {
        "set": {
          "success": "Thay đổi cài đặt {} sang {} thành công."
        },
        "get": {
          "success": "Nhận cài đặt {} thành công. Giá trị: "
        },
        "delete": {
          "success": "Xoá cài đặt {} thành công.",
          "error": {
            "emptyKey": "JsonPointer không được để trống!"
          }
        },
        "reload": {
          "success": "Cài đặt đã được tải lại thành công."
        },
        "save": {
          "success": "Lưu cài đặt thành công."
        },
        "list": {
          "success": "Danh sách cài đặt:"
        }
      },
      "error": {
        "noPathSpecified": "Bạn phải cung cấp đường dẫn hợp lệ của plugin LiteLoader!",
        "noNameSpecified": "Bạn phải cung cấp tên hợp lệ cho plugin LiteLoader!"
      }
    },
    "config": {
      "save": {
        "fail": "Không thể lưu(hay tạo) tệp cấu hình!"
      },
      "creating": "Không tìm thấy tệp cấu hình LL <{}>. Đang tạo tệp cấu hình...",
      "warning": {
        "configOutdated": "Tệp cấu hình LL <{}> đã lỗi thời."
      },
      "updating": "Đang cập nhật tệp cấu hình..."
    },
    "crashLogger": {
      "existsingDebuggerDetected": "Đã phát hiện trình gỡ lỗi hiện có. CrashLogger có sẵn sẽ không hoạt động.",
      "wineDetected": "Đã phát hiện môi trường cho Wine. CrashLogger có sẵn sẽ không hoạt động.",
      "error": {
        "cannotCreateDaemonProcess": "Không thể tạo trình chạy CrashLogger Daemon!"
      },
      "warning": {
        "crashLoggerDisabled": {
          "1": "CrashLogger có sẵn đã không được bật vì cấu hình đã vô hiệu hóa nó.",
          "2": "Sẽ không có ghi chép các sự cố khi ngoại lệ không được xử lý xảy ra,",
          "3": "điều này khiến cho việc tìm ra lý do của sự cố và nguồn gốc của sự cố gần như không thể.",
          "4": "Chúng tôi thực sự khuyên bạn nên bật nó để đảm bảo sự ổn định của máy chủ"
        },
        "conflicts": {
          "1": "Builtin CrashLogger không được bật vì plugin <{}> xung đột với nó",
          "2": "Sẽ không có nhật ký sự cố khi ngoại lệ được xử lý xảy ra",
          "3": "điều này khiến cho việc tìm ra lý do của sự cố và nguồn gốc của sự cố gần như không thể.",
          "4": "Vì CrashLogger là một thành phần quan trọng đảm bảo sự ổn định của máy chủ",
          "5": "Chúng tôi khuyên bạn nên suy nghĩ kỹ về việc sử dụng plugin <{}>"
        }
      },
      "init": {
        "fail": {
          "msg": "CrashLogger không khởi động được!",
          "tip": "Sẽ không có nhật ký sự cố khi ngoại lệ được xử lý xảy ra."
        }
      }
    },
    "addonsHelper": {
      "error": {
        "addonConfigNotFound": "Không tìm thấy config Addon!",
        "addonFileNotFound": "Không tìm thấy tệp Addon \"{}\"!",
        "addonNotFound": "Addon <{}> không tìm thấy!",
        "outOfRange": "Index Addon {} nằm ngoài phạm vi",
        "unsupportedFileType": "Tìm thấy file không được hỗ trợ!",
        "parsingEnabledAddonsList": "Lỗi khi phân tích cú pháp danh sách Addon đã bật",
        "noAddonInstalled": "Không có Addon nào được cài đặt.",
        "installationAborted": "Tiến trình cài đặt đã bị hủy bỏ!"
      },
      "displayError": "Lỗi: {}",
      "removeAddonFromList": {
        "fail": "Không xóa được addon <{}> khỏi tệp config!",
        "success": "Không xóa được addon <{}> khỏi tệp config."
      },
      "addAddonToList": {
        "invalidList": "Tệp danh sách Addon không hợp lệ {}, sao lưu vào {} và đặt lại về mặc định",
        "fail": "Không thể chèn Addon {} vào {}!",
        "success": "Đã thêm Addon <{}> vào config."
      },
      "install": {
        "installing": "Đang cài đặt Addon <{}>...",
        "error": {
          "failToUncompress": {
            "msg": "Không thể giải nén Addon {}!",
            "exitCode": "Mã thoát: {}",
            "programOutput": "Đầu ra thiết bị"
          }
        }
      },
      "uninstall": {
        "success": "Đã gỡ cài đặt Addon <{}>."
      },
      "autoInstall": {
        "tip": {
          "dirCreated": "Đã tạo thư mục. Bạn có thể di chuyển các tệp Addon đã nén vào {} để cài đặt vào lần khởi chạy tiếp theo."
        },
        "working": "{} tìm thấy (các) tiện ích mới để cài đặt. Đang làm việc...",
        "installed": "Tiện ích {} đã được cài đặt.",
        "installedCount": "{} (các) tiện ích đã được cài đặt."
      },
      "cmd": {
        "output": {
          "list": {
            "overview": "Addons: {} addon(s) installed:"
          }
        }
      }
    },
    "loader": {
      "loadScriptEngine": {
        "error": {
          "versionNotMatch": "The file version <{}> of Script Engine for {} does not match the LiteLoader version <{}>"
        },
        "success": "* ScriptEngine for {} loaded."
      },
      "loadDotNetEngine": {
        "error": {
          "versionNotMatch": "The file version <{}> of LiteLoader.NET does not match the LiteLoader version <{}>"
        },
        "success": "* .NET Engine loaded."
      },
      "loadMain": {
        "loadingPlugins": "Loading native plugins...",
        "loadedShellLink": "ShellLinked plugin <{} => {}> loaded",
        "loadedPlugin": "Native plugin <{name}> loaded",
        "done": "{} native plugin(s) loaded.",
        "start": "Loading native plugins..."
      },
      "initNodeJsDirectories": {
        "created": "Node.js runtime directory no found, created."
      }
    },
    "notice": {
      "newForum": "Our new forum is live! -> {}",
      "license": "LiteLoader is licensed under {}",
      "translateText": "Help us translate & improve text in LL -> {}"
    },
    "pluginManager": {
      "error": {
        "invalidFileType": "Invalid plugin file type {} in {}",
        "noValidPluginFound": "No valid plugin found at {}!",
        "failToRegisterPlugin": "Failed to register plugin {}!",
        "hasBeenRegistered": "A plugin named {} has been registered",
        "failToLoadPlugin": "Fail to load the plugin {}!",
        "pluginNotFound": "Plugin <{}> is not found"
      },
      "warning": {
        "unloadDllNotFinished": "Unload function of dll plugins is not finished.",
        "reloadDllNotFinished": "Reload function of dll plugins is not finished."
      },
      "reloadPlugin": {
        "fail": "Failed to reload plugin {}!"
      }
    },
    "unzipNodeModules": {
      "fail": "Failed to unzip node_modules.tar"
    }
  },
  "llse": {
    "init": {
      "llMoney": {
        "notFound": "Không tìm thấy LLMoney.dll, ScriptEngine Economy System sẽ không hoạt động"
      }
    },
    "api": {
      "ll": {
        "require": {
          "success": " - Plugin require loaded successfully. Loaded: ",
          "fail": " - Plugin require load failed",
          "download": {
            "success": " - Successfully downloaded require! Path: ",
            "fail": " - Download plugin require failed! Code: "
          }
        }
      }
    },
    "apiHelp": {
      "parseJson": {
        "fail": "Lỗi phân tích cú pháp JSON"
      }
    },
    "loader": {
      "loadDepends": {
        "success": "Dependence {} loaded.",
        "fail": "Fail to load dependence {}"
      },
      "loadMain": {
        "start": "Loading {type} plugins...",
        "done": "{count} {type} plugin(s) loaded.",
        "nodejs": {
          "installPack": {
            "fail": "Failed to install plugin pack {}, please check your package.json file!",
            "start": "Found Node.js plugin pack \"{path}\"! Try installing..."
          },
          "ignored": "No package.json file found in directory {path}, ignored."
        },
        "loadedPlugin": "{type} plugin <{name}> loaded.",
        "installPluginPack": {
          "done": "{count} {type} plugin pack(s) installed."
        }
      },
      "nodejs": {
        "executeNpmInstall": {
          "success": "Npm finished successfully.",
          "start": "Executing \"npm install\" for plugin {name}...",
          "fail": "Error occurred. Exit code: {code}"
        },
        "register": {
          "fail": "Fail to help plugin {name} get registered!"
        }
      }
    }
  },
  "permapi": {
    "data": {
      "process": {
        "fail": "Failed to process the data file: {}"
      },
      "read": {
        "fail": "Failed to read the data file at {}"
      },
      "save": {
        "fail": "Failed to save the data file: {}"
      }
    },
    "cmd": {
      "error": {
        "invalidCommand": "Invalid command. Type '/help perm' to get help.",
        "internal": "Internal error. Please try again later.",
        "roleAlreadyExists": "Role already exists.",
        "permissionAlreadyExists": "Permission already exists.",
        "invalidPermissionName": "Invalid permission name.",
        "roleNotFound": "Role not found.",
        "permissionNotFound": "Permission not found.",
        "playerNotFound": "Player not found.",
        "modifyMembersOfEveryone": "The role is a everyone role. You cannot modify the members of it.",
        "jsonParsingError": "JSON parsing error: {}",
        "missingArgument": "Missing argument: {}",
        "permissionDenied": "You don't have permission to use this command."
      },
      "output": {
        "create": {
          "role": {
            "success": "Role created."
          },
          "perm": {
            "success": "Permission created."
          }
        },
        "delete": {
          "role": {
            "success": "Role deleted."
          },
          "perm": {
            "success": "Permission deleted."
          }
        },
        "list": {
          "role": {
            "none": "No roles to display.",
            "header": "§b§lRole List:",
            "isMember": "§r(§eMember§r)"
          },
          "perm": {
            "none": "No permissions to display.",
            "header": "§b§lPermission List:"
          }
        },
        "view": {
          "player": {
            "yourStatus": "§b§lYour current permission status:",
            "status": "§b§l{}'s current permission status:",
            "rolesTitle": "- §eRoles:",
            "permissionsTitle": "- §ePermissions:"
          },
          "role": {
            "header": "§b§lRole Info:",
            "info": {
              "name": "+ §eName§r: {roleName}",
              "displayName": "+ §eDisplayName§r: {}",
              "priority": "+ §ePriority§r: {}",
              "membersNone": "+ §eMembers§r: None",
              "members": "+ §eMembers§r:",
              "permissionsNone": "+ §ePermissions§r: None",
              "permissions": "+ §ePermissions§r:"
            },
            "note": {
              "admin": "※ {}§r is a special role. All permissions will be enabled by default.",
              "everyone": "※ {}§r is a special role. All players are members of this role."
            },
            "enabled": "§a(Enabled)§r",
            "disabled": "§c(Disabled)§r",
            "enabledWithExtra": "§b(Enabled with extra restrictions)§r"
          },
          "perm": {
            "header": "§b§lPermission Info:",
            "info": {
              "name": "+ §eName§r: {permissionName}",
              "desc": "+ §eDescription§r: {}"
            }
          }
        },
        "update": {
          "role": {
            "member": {
              "add": {
                "success": "Member {name}§r({xuid}) added to Role {roleDisplayName}§r."
              },
              "remove": {
                "success": "Member {name}§r({xuid}) removed from Role {roleDisplayName}§r."
              }
            },
            "perm": {
              "add": {
                "success": "Permission {name}§r added to Role {roleDisplayName}§r."
              },
              "remove": {
                "success": "Quyền {name}§r đã bị xóa khỏi Vai trò {roleDisplayName}§r."
              },
              "set": {
                "enabled": "§abật§r",
                "disabled": "§ctắt§r",
                "success": "Quyền {name}§r của Vai trò {roleDisplayName}§r đã được {enable}."
              }
            },
            "priority": {
              "set": {
                "success": "Mức độ ưu tiên của Vai trò {roleDisplayName}§r đã được đặt thành {priority}."
              }
            },
            "displayName": {
              "set": {
                "success": "Tên hiển thị của Vai trò <{roleName}§r> đã được đặt thành {displayName}."
              }
            }
          },
          "player": {
            "role": {
              "add": {
                "success": "Người chơi {name}§r({xuid}) đã được thêm vào Vai trò {roleDisplayName}§r."
              },
              "remove": {
                "success": "Người chơi {name}§r({xuid}) đã bị xóa khỏi Vai trò {roleDisplayName}§r."
              }
            }
          }
        },
        "noDesc": "[Không có mô tả]",
        "permissionNameExamples": "Ví dụ về tên quyền: 'Namespace:PermissionName', 'a:b:c:d_e_f.g'"
      }
    }
  }
}
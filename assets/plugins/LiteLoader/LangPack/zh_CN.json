{
  "base": {
    "getDimName": {
      "0": "主世界",
      "1": "下界",
      "2": "末地",
      "unknown": "其他维度"
    }
  },
  "ll": {
    "main": {
      "checkRunningBDS": {
        "detected": "检测到另一个具有相同路径的BDS进程！",
        "tip": "这可能会导致网络端口和存档被占用",
        "ask": "是否要终止PID为 {} 的进程？（y=是，n=否）"
      },
      "fixAllowList": {
        "removeEmptyAllowlist": "allowlist.json为空！正在删除……",
        "checkManually": "allowlist.json 和 whitelist.json 都存在并且不是空的。请手动检查",
        "renamed": "已将whitelist.json重命名为allowlist.json"
      },
      "warning": {
        "inDevMode": "当前处于开发者模式！",
        "betaVersion": "目前正在使用测试版",
        "productionEnv": "请勿在生产环境中使用！",
        "protocolVersionNotMatch": {
          "1": "协议版本不匹配，目标版本：{}，当前版本：{}。",
          "2": "这很可能会使服务器崩溃，请使用与BDS版本匹配的LiteLoaderBDS！"
        }
      }
    },
    "antiAbnormalItem": {
      "detected": "玩家 ({}) 的物品数据错误！",
      "itemInfo": "物品: {}"
    },
    "cmd": {
      "tpdim": {
        "success": "已传送 {} 到 {} ({:2f}, {:2f}, {:2f})",
        "error": {
          "noActorTeleported": "没有实体被传送",
          "noActorSpecified": "未指定实体"
        },
        "invalidDimid": "无效的维度ID：{}"
      },
      "listPlugin": {
        "overview": "插件列表 [{}]",
        "tip": "* 使用命令“ll list <Plugin Name>”来获取更多信息"
      },
      "pluginInfo": {
        "title": "插件 <{}>",
        "error": {
          "pluginNotFound": "找不到插件 <{}>！"
        }
      },
      "version": {
        "msg": "基岩版专用服务器(BDS) {}\n- LiteLoaderBDS 版本：{}\n- 网络协议：{}"
      },
      "help": {
        "msg": "[介绍]\nLiteLoaderBDS是一个非官方的插件加载器，为基岩专用服务器加载插件。\n它提供了大量API、强大的事件系统和大量打包的实用程序接口。\n[Github]\n-->https://github.com/LiteLDev/LiteLoaderBDS <--\n欢迎访问我们的github项目以获取更多信息~"
      },
      "loadPlugin": {
        "success": "插件 <{}> 已加载",
        "fail": "插件 {} 加载失败"
      },
      "unloadPlugin": {
        "success": "<{}> 插件已卸载",
        "fail": "卸载插件 <{}> 失败"
      },
      "reloadPlugin": {
        "success": "插件 <{}> 已重载。",
        "fail": "无法重载插件 <{}>"
      },
      "reloadAllPlugins": {
        "success": "{} 插件已成功重新加载。",
        "fail": "无法重新加载任何插件"
      },
      "settings": {
        "set": {
          "success": "成功将 {} 设置为 {} 。"
        },
        "get": {
          "success": "设置读取 {} 成功。值： "
        },
        "delete": {
          "success": "设置成功删除 {} 。",
          "error": {
            "emptyKey": "JsonPointer 不能为空！"
          }
        },
        "reload": {
          "success": "成功重新加载设置。"
        },
        "save": {
          "success": "成功保存设置。"
        },
        "list": {
          "success": "设置列表："
        }
      },
      "error": {
        "noPathSpecified": "您必须提供LiteLoader插件的有效路径！",
        "noNameSpecified": "必须提供LiteLoaderBDS插件的有效名称!"
      }
    },
    "config": {
      "save": {
        "fail": "保存（创建）配置文件失败！"
      },
      "creating": "未找到LL配置文件<{}>。正在创建配置文件...",
      "warning": {
        "configOutdated": "LL配置文件 <{}> 已过时"
      },
      "updating": "正在更新配置文件..."
    },
    "crashLogger": {
      "existsingDebuggerDetected": "检测到现有调试器，内置CrashLogger无法工作",
      "wineDetected": "检测到当前处于Wine环境，内置CrashLogger无法工作",
      "error": {
        "cannotCreateDaemonProcess": "无法创建CrashLogger守护进程！"
      },
      "warning": {
        "crashLoggerDisabled": {
          "1": "未启用内置CrashLogger，因为配置中禁用了它",
          "2": "发生未经处理的异常时，不会有崩溃日志，",
          "3": "这使我们几乎不可能找到崩溃的原因和来源。",
          "4": "我们强烈建议你启用它以保证服务器稳定性"
        },
        "conflicts": {
          "1": "未启用内置CrashLogger，因为插件<{}>与其冲突",
          "2": "发生未经处理的异常时，不会有崩溃日志，",
          "3": "这使我们几乎不可能找到崩溃的原因和来源。",
          "4": "因为CrashLogger是确保服务器稳定性的重要组件",
          "5": "我们建议您仔细考虑是否使用插件 <{}>"
        }
      },
      "init": {
        "fail": {
          "msg": "内置CrashLogger无法启动！",
          "tip": "发生未经处理的异常时，不会有崩溃日志。"
        }
      }
    },
    "addonsHelper": {
      "error": {
        "addonConfigNotFound": "未找到addon配置文件",
        "addonFileNotFound": "未找到addon文件 \"{}\"！",
        "addonNotFound": "未找到addon <{}>！",
        "outOfRange": "Addon索引 {} 超出范围",
        "unsupportedFileType": "不支持的文件类型！",
        "parsingEnabledAddonsList": "在解析已启用的addons列表时发生错误",
        "noAddonInstalled": "没有addon被安装",
        "installationAborted": "安装进程终止！"
      },
      "displayError": "错误: {}",
      "removeAddonFromList": {
        "fail": "从配置文件移除addon <{}> 失败！",
        "success": "已将addon <{}> 从配置文件移除"
      },
      "addAddonToList": {
        "invalidList": "无效的addon列表文件 {}，已备份到 {} 并重置为默认值",
        "fail": "无法将 addon {} 插入到 {}！",
        "success": "已将addon <{}> 添加到配置文件"
      },
      "install": {
        "installing": "正在安装addon <{}>...",
        "error": {
          "failToUncompress": {
            "msg": "解压addon {} 失败！",
            "exitCode": "退出代码: {}",
            "programOutput": "程序输出:\n{}"
          }
        }
      },
      "uninstall": {
        "success": "Addon <{}> 已卸载。"
      },
      "autoInstall": {
        "tip": {
          "dirCreated": "目录已创建。你可以移动已压缩的addon文件到 {} 以在下次启动时安装"
        },
        "working": "{} 个新的要安装的addon(s)已被找到。处理中...",
        "installed": "Addon {} 已被安装。",
        "installedCount": "{} 个addon(s)已被安装"
      },
      "cmd": {
        "output": {
          "list": {
            "overview": "Addons: {} 个addon(s)已安装:"
          }
        }
      }
    },
    "loader": {
      "loadScriptEngine": {
        "error": {
          "versionNotMatch": "<{}> 版本的 {} 脚本引擎 与 LiteLoaderBDS版本 <{}> 不匹配"
        },
        "success": "* {} 脚本引擎已加载"
      },
      "loadDotNetEngine": {
        "error": {
          "versionNotMatch": "LiteLoader.NET 的文件版本 <{}> 与 LiteLoaderBDS 版本不匹配 <{}>"
        },
        "success": "* .NET 引擎已加载"
      },
      "loadMain": {
        "loadingPlugins": "加载原生插件...",
        "loadedShellLink": "快捷方式插件 <{} => {}> 已加载",
        "loadedPlugin": "原生插件 <{name}> 已加载",
        "done": "已加载 {} 个原生插件",
        "start": "加载原生插件..."
      },
      "initNodeJsDirectories": {
        "created": "NodeJs运行库文件夹未找到，已自动创建"
      }
    },
    "notice": {
      "newForum": "我们的新论坛上线了啦! -> {}",
      "license": "LiteLoader采用 {} 许可证开源",
      "translateText": "帮助我们翻译&改进翻译 -> {}"
    },
    "pluginManager": {
      "error": {
        "invalidFileType": "无效的插件文件类型 {} 在 {} 中",
        "noValidPluginFound": "在 {} 未找到有效的插件",
        "failToRegisterPlugin": "注册插件 {} 失败",
        "hasBeenRegistered": "一个名为 {} 的插件已被注册",
        "failToLoadPlugin": "加载插件 {} 失败！",
        "pluginNotFound": "未找到插件 <{}>"
      },
      "warning": {
        "unloadDllNotFinished": "卸载dll插件的功能尚未完成。",
        "reloadDllNotFinished": "重载dll插件的功能尚未完成。"
      },
      "reloadPlugin": {
        "fail": "重载插件 {} 失败！"
      }
    },
    "unzipNodeModules": {
      "fail": "解压缩node_modules.tar失败"
    }
  },
  "llse": {
    "init": {
      "llMoney": {
        "notFound": "未找到LLMoney.dll，脚本引擎经济系统将无法工作"
      }
    },
    "api": {
      "ll": {
        "require": {
          "success": " - 插件依赖库加载成功。已加载：",
          "fail": " - 插件依赖库加载失败",
          "download": {
            "success": " - 下载依赖库成功！路径：",
            "fail": " - 插件依赖库下载失败！错误代码："
          }
        }
      }
    },
    "apiHelp": {
      "parseJson": {
        "fail": "JSON 解析错误"
      }
    },
    "loader": {
      "loadDepends": {
        "success": "依赖项 {} 已加载。",
        "fail": "加载依赖项 {} 失败"
      },
      "loadMain": {
        "start": "加载 {type} 插件...",
        "done": "{count} 个 {type} 插件已加载。",
        "nodejs": {
          "installPack": {
            "fail": "安装插件包 {} 失败，请检查您的 package.json 文件！",
            "start": "找到 Node.js 插件包 \"{path}\"！尝试安装..."
          },
          "ignored": "在目录 {path} 中没有找到 package.json 文件，已忽略。"
        },
        "loadedPlugin": "{type} 插件 <{name}> 已加载。",
        "installPluginPack": {
          "done": "{count} 个 {type} 插件包已安装。"
        }
      },
      "nodejs": {
        "executeNpmInstall": {
          "success": "Npm 命令成功完成",
          "start": "为插件 {name} 执行 \"npm install\"...",
          "fail": "发生错误。退出代码： {code}"
        },
        "register": {
          "fail": "插件 {name} 注册失败！"
        }
      }
    }
  },
  "permapi": {
    "data": {
      "process": {
        "fail": "处理数据文件失败：{}"
      },
      "read": {
        "fail": "读取位于 {} 的数据文件失败"
      },
      "save": {
        "fail": "保存数据文件失败：{}"
      }
    },
    "cmd": {
      "error": {
        "invalidCommand": "无效的命令。输入 '/help perm' 以获得帮助。",
        "internal": "内部错误，请稍候重试。",
        "roleAlreadyExists": "身份组已存在。",
        "permissionAlreadyExists": "权限已存在。",
        "invalidPermissionName": "无效的权限名。",
        "roleNotFound": "找不到身份组。",
        "permissionNotFound": "找不到权限。",
        "playerNotFound": "找不到玩家。",
        "modifyMembersOfEveryone": "这是一个“所有人”身份组，你不能修改其中的成员。",
        "jsonParsingError": "JSON 解析错误: {}",
        "missingArgument": "缺少参数：{}",
        "permissionDenied": "您没有使用此命令的权限。"
      },
      "output": {
        "create": {
          "role": {
            "success": "身份组已创建。"
          },
          "perm": {
            "success": "权限已创建。"
          }
        },
        "delete": {
          "role": {
            "success": "身份组已删除。"
          },
          "perm": {
            "success": "权限已删除。"
          }
        },
        "list": {
          "role": {
            "none": "无身份组。",
            "header": "§b§l身份组列表:",
            "isMember": "§r(§e成员§r)"
          },
          "perm": {
            "none": "没有可以显示的权限。",
            "header": "§b§l权限列表:"
          }
        },
        "view": {
          "player": {
            "yourStatus": "§b§l您当前的权限状态:",
            "status": "§b§l{} 当前的权限状态:",
            "rolesTitle": "- §e身份组:",
            "permissionsTitle": "- §e权限:"
          },
          "role": {
            "header": "§b§l身份组信息:",
            "info": {
              "name": "+ §e名称§r: {roleName}",
              "displayName": "+ §e显示名称§r: {}",
              "priority": "+ §e优先级§r: {}",
              "membersNone": "+ §e成员§r: 无",
              "members": "+ §e成员§r:",
              "permissionsNone": "+ §e权限§r: 无",
              "permissions": "+ §e权限§r:"
            },
            "note": {
              "admin": "※ {}§r 是一个特殊的身份组，所有的权限将默认开启。",
              "everyone": "※ {}§r 是一个特殊的身份组，所有的玩家都是这个身份组的成员。"
            },
            "enabled": "§a(启用)§r",
            "disabled": "§c(禁用)§r",
            "enabledWithExtra": "§b(启用且有额外的限制)§r"
          },
          "perm": {
            "header": "§b§l权限信息:",
            "info": {
              "name": "+ §e名称§r: {permissionName}",
              "desc": "+ §e描述§r: {}"
            }
          }
        },
        "update": {
          "role": {
            "member": {
              "add": {
                "success": "成员 {name}§r({xuid}) 已添加到身份组 {roleDisplayName}§r。"
              },
              "remove": {
                "success": "成员 {name}§r({xuid}) 已从身份组 {roleDisplayName}§r 移除。"
              }
            },
            "perm": {
              "add": {
                "success": "权限 {name}§r 已添加到身份组 {roleDisplayName}§r。"
              },
              "remove": {
                "success": "权限 {name}§r 已从身份组 {roleDisplayName}§r 移除。"
              },
              "set": {
                "enabled": "§a启用§r",
                "disabled": "§c禁用§r",
                "success": "身份组 {roleDisplayName}§r 的权限 {name}§r 已设置为 {enable}§r。"
              }
            },
            "priority": {
              "set": {
                "success": "身份组 {roleDisplayName}§r 的优先级已设置为 {priority}。"
              }
            },
            "displayName": {
              "set": {
                "success": "身份组 <{roleName}§r> 的显示名称已设置为 {displayName}§r。"
              }
            }
          },
          "player": {
            "role": {
              "add": {
                "success": "玩家 {name}§r({xuid}) 已添加到身份组 {roleDisplayName}§r。"
              },
              "remove": {
                "success": "玩家 {name}§r({xuid}) 已从身份组 {roleDisplayName}§r 移除。"
              }
            }
          }
        },
        "noDesc": "[无描述]",
        "permissionNameExamples": "权限名称示例：“命名空间:权限名称”、“a:b:c:d_e_f.g”"
      }
    }
  }
}